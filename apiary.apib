FORMAT: 1A

HOST: https://testmanagement.qmetry.com

# QTM APIs
QMetry Open APIs.

# Group Frequently used APIs
These are APIs that used frequently.

### Create / Update Folder [/rest/testcases/folders]
#### Create [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|parentId|Id of parent folder|Yes|
|name|Folder Name|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the parentId - For root folder | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> rootFolders.TC.id </li>
        </ul>
    </li>
    <li><font size="3">for any other folder | Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "parentId" : 26524,
                 "name" : "Testcase Folder"
             }

+ Response 200

    + Body

            {
              "success": true,
              "code": "CO.ADD_FOLDER_SUCCESS",
              "data": [
                {
                  "id": 68269
                }
              ]
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "TC.ADD_FOLDER_FAILURE"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

# Group Admin

## Get Info service [/rest/admin/project/getinfo]
### Get Info [GET]
provides all the basic information of the project like scope, types of -bugs, license details.

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body
    
+ Response 200

    + Body

            Response will return all basic information of the project.
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body 
            
            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 403

    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
            <TITLE>ERROR: The request could not be satisfied</TITLE>
            </HEAD><BODY>
            <H1>403 ERROR</H1>
            <H2>The request could not be satisfied.</H2>
            <HR noshade size="1px">
            Bad request.
            
            <BR clear="all">
            <HR noshade size="1px">
            <PRE>
            Generated by cloudfront (CloudFront)
            Request ID: q9kqFTQhWc8HLuToYy_5tkdfIkigdL_Xi6fMEGeLdWD-1eqQqSjDJA==
            </PRE>
            <ADDRESS>
            </ADDRESS>
            </BODY></HTML>

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
 
## Fetch Audit Logs [/rest/admin/accesslog/list]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|--------------|---------------------|:----------:|
| fromDate |Date from which Audit Log is to be fetched |Yes|
| toDate |Date till which Audit Log is to be fetched |Yes|
| start |Start index of records  |No|
| limit |Number of records per page |No|
| page |Page number to be displayed |No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">Date format of the 'fromDate' and 'toDate' is depend on format that has been configured in qtm. 
        <ul>
            <li><font size="3">To verify/update the Date Format - Go to qtm -> User Profile </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "fromDate": "09-25-2018",
              "toDate": "10-25-2018",
              "start": 0,
              "limit": 10,
              "page": 1
            }

+ Response 200

    + Body

            {"data":[{"accessLogID":285926,"actionName":"CREATE","accessDate":"10-25-2018 01:11:05","accessUser":"hiral","projectName":"Sample Domain","moduleName":"REQUIREMENT","entityKey":"","id":"","projectID":2,"message":"Get available Requirements list for Testsuite.","screenName":"TESTSUITE","userActionName":"rq-unlink-list-view"},{"accessLogID":285000,"actionName":"CREATE","accessDate":"10-24-2018 08:25:58","accessUser":"krunal","projectName":"Sample Domain","moduleName":"ISSUE","entityKey":"SAM-IS-136","id":"117780","projectID":2,"version":"","message":"An Issue was created.","screenName":"ISSUE","userActionName":"create"},{"accessLogID":284999,"actionName":"UPDATE","accessDate":"10-24-2018 08:25:23","accessUser":"krunal","projectName":"Sample Domain","moduleName":"ISSUE","projectID":2,"message":"Issues syncing for JIRA configuration was started.","screenName":"PROJECT","userActionName":"reset-mapping"},{"accessLogID":284998,"actionName":"DELETE","accessDate":"10-24-2018 08:25:20","accessUser":"krunal","projectName":"Sample Domain","moduleName":"ISSUE","projectID":2,"message":"Create filter for JIRA configuration was started.","screenName":"PROJECT","userActionName":"save-map-field"},{"accessLogID":284954,"actionName":"CREATE","accessDate":"10-24-2018 07:29:36","accessUser":"Nidhi","projectName":"CodeSnippets","moduleName":"REQUIREMENT","entityKey":"","id":"","projectID":1098,"message":"Get available Requirements list for Testsuite.","screenName":"TESTSUITE","userActionName":"rq-unlink-list-view"},{"accessLogID":284883,"actionName":"CREATE","accessDate":"10-24-2018 05:29:52","accessUser":"hiral","projectName":"Sample Domain","moduleName":"ATTACHMENT","entityKey":"","id":"","projectID":2,"message":"An Attachment was added.","screenName":"TESTCASE","userActionName":"multiple-attachment-add"},{"accessLogID":284880,"actionName":"CREATE","accessDate":"10-24-2018 05:29:04","accessUser":"hiral","projectName":"Sample Domain","moduleName":"REQUIREMENT","entityKey":"","id":"","projectID":2,"message":"Get available Requirements list for TestCase.","screenName":"TESTCASE","userActionName":"unlink-rq-list-view"},{"accessLogID":284878,"actionName":"CREATE","accessDate":"10-24-2018 05:28:53","accessUser":"hiral","projectName":"Sample Domain","moduleName":"REQUIREMENT","entityKey":"","id":"","projectID":2,"message":"Get available Requirements list for Testsuite.","screenName":"TESTSUITE","userActionName":"rq-unlink-list-view"},{"accessLogID":284877,"actionName":"CREATE","accessDate":"10-24-2018 05:28:48","accessUser":"hiral","projectName":"Sample Domain","moduleName":"REQUIREMENT","entityKey":"","id":"","projectID":2,"message":"Get available Requirements list for Testsuite.","screenName":"TESTSUITE","userActionName":"rq-unlink-list-view"},{"accessLogID":284876,"actionName":"CREATE","accessDate":"10-24-2018 05:28:44","accessUser":"hiral","projectName":"Sample Domain","moduleName":"REQUIREMENT","entityKey":"","id":"","projectID":2,"message":"Get available Requirements list for Testsuite.","screenName":"TESTSUITE","userActionName":"rq-unlink-list-view"}],"total":1482}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Get Agents [/rest/admin/agent/read]
### Get List [POST]
API to fetch automation agents

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Automation Agent key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"total":32,"data":[{"pluginAgentId":127,"alias":"Test1","os":"Windows 10","macAdd":"28-16-AD-B3-14-E2","status":"Inactive","creationDate":"2018-10-24T05:26:33","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":125,"alias":"Temp1234","os":"Windows 10","macAdd":"28-16-AD-B3-14-E2","status":"Inactive","creationDate":"2018-10-23T08:55:57","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":124,"alias":"Temp123","os":"Windows 10","macAdd":"28-16-AD-B3-14-E2","status":"Inactive","creationDate":"2018-10-19T12:42:38","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":119,"alias":"AgentLATEST","os":"Windows 10","macAdd":"94-65-9C-80-62-36","status":"Inactive","creationDate":"2018-10-08T14:10:29","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":115,"alias":"ae1","os":"Windows 10","macAdd":"94-65-9C-80-62-36","status":"Inactive","creationDate":"2018-10-04T09:22:36","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":110,"alias":"TrialAgent","os":"Windows 10","macAdd":"E0-D5-5E-1D-21-7F","status":"Inactive","creationDate":"2018-10-08T07:20:56","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":109,"alias":"25Sep","os":"Windows 10","macAdd":"E0-D5-5E-1D-21-7F","status":"Inactive","creationDate":"2018-09-25T10:13:34","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":105,"alias":"test123","os":"Windows Server 2016","macAdd":"02-28-CF-48-3B-F0","status":"Inactive","creationDate":"2018-09-20T11:47:40","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":104,"alias":"Test1234","os":"Windows 10","macAdd":"28-16-AD-B3-14-E2","status":"Inactive","creationDate":"2018-09-20T09:04:51","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"},{"pluginAgentId":101,"alias":"Prod_Agent","os":"Windows 10","macAdd":"E0-D5-5E-1D-21-7F","status":"Inactive","creationDate":"2018-09-15T09:55:16","agentType":"QMetry","schedules":"0 Scheduled/<br/> 0 In progress","history":"History"}]}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Fetch Execution statuses [/rest/admin/execution/list]
### Get List [POST]
API to list execution statuses

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|roleID|Id of role to get execution statuses specific to that role|Yes|
|showArchive|Send 'true' to show archived Execution Statuses (defaulted to false)|No|
|sort|Sort parameters - Refer JSON Schema|No|

<ul>
    <li><font size="3">To get the dropIds - Call API 'Admin/Get Info service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> roleID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "roleID": 5,
              "showArchive": true,
              "sort": "[{\"property\":\"weightage\",\"direction\":\"DESC\"}]"
            }
            
    + Schema
    
             "Sort" : {
                  "type" : "object",
                  "properties" : {
                    "property" : {
                      "type" : "string"
                    },
                    "direction" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            [{"execStatusManagementID":10162,"name":"blocked","displayName":"Blocked","priority":3,"color":"#CCCCCC|#FFFFFF","defaultPriority":1,"defaultRunName":"blocked","statusIcon":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnRJREFUeNp8k81PE0EYxp+Z3ZY2FmhoSbxB9KIHtJAYDX5AAgfjRRIPJl6o/0EvnkUTE7hx8d67ByMn+YiRg6LxAB6NqEWl0ArlQ2G3uzPz+s4iFQwy2ZnN7M77e59n5h3gmFb+ervv++dbfcetEf9++DgxeNOEZkT9CnNkCDD88FvExQKBRs4Nv3p2JKC2lm/98WJpXPkqT5rgJFzIhAMLYRg0d9Kw8yL1yELPtbktG+fuAyozpaLx9ZAJDERMInP1JIT9a5SNQr3qYXN+C0EtzNMbbUPu2kHa4dPk9WHtqSGb2WbUOyGq08swfj0CkA4RbxPIXknBbZY8p/zbx93DDUC9ulsgxbKTTsNbuBGgOlWB9gKGhFEXToh0l2sBwBYKEaBSvtOhPJVzUi7aLmcRa2m4QrBhlayzkoCDGKQVmjKGVdislJt+crpDVia+dNrsbsqBdDTaLrbAbXEOQBRWp7YZsqeC2FKs2YCUQWr+RKc0HGwBQlDkVTgKmUtJxFrFAYjB6qQHbSGsQjgGxu4Xd5k4lSqRNvBX/b9epYW4DMEBCGFlko+T7XhlEyXdzXoleebGzBJXQ6m+HkL9rEcqwF2ykvZeHIbUgJXngL/GJwVdGry3uBSdApKyaFWsze00VNAfJe29AUNMA1KviUi6iqvioUp8N9ozT7yzTVkgc4ErLGnLTjOI/XJxVWbj8CssLtAwUi/0jX/oPlSJ5FM/SfPSK1Pu21Ogqd0gkd0rLJt1Z1lHmY00CzKU/f+9TK9Hu+7TNhVYTRoU1T5b4kBhNlVCjw+MLT449jbut9lHZ887VZEmIgTpcHPg4eL7o9b9FmAArEp9sJ45pQwAAAAASUVORK5CYII=","isArchived":"false","isMasterStatus":"true","defaultRunStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnRJREFUeNp8k81PE0EYxp+Z3ZY2FmhoSbxB9KIHtJAYDX5AAgfjRRIPJl6o/0EvnkUTE7hx8d67ByMn+YiRg6LxAB6NqEWl0ArlQ2G3uzPz+s4iFQwy2ZnN7M77e59n5h3gmFb+ervv++dbfcetEf9++DgxeNOEZkT9CnNkCDD88FvExQKBRs4Nv3p2JKC2lm/98WJpXPkqT5rgJFzIhAMLYRg0d9Kw8yL1yELPtbktG+fuAyozpaLx9ZAJDERMInP1JIT9a5SNQr3qYXN+C0EtzNMbbUPu2kHa4dPk9WHtqSGb2WbUOyGq08swfj0CkA4RbxPIXknBbZY8p/zbx93DDUC9ulsgxbKTTsNbuBGgOlWB9gKGhFEXToh0l2sBwBYKEaBSvtOhPJVzUi7aLmcRa2m4QrBhlayzkoCDGKQVmjKGVdislJt+crpDVia+dNrsbsqBdDTaLrbAbXEOQBRWp7YZsqeC2FKs2YCUQWr+RKc0HGwBQlDkVTgKmUtJxFrFAYjB6qQHbSGsQjgGxu4Xd5k4lSqRNvBX/b9epYW4DMEBCGFlko+T7XhlEyXdzXoleebGzBJXQ6m+HkL9rEcqwF2ykvZeHIbUgJXngL/GJwVdGry3uBSdApKyaFWsze00VNAfJe29AUNMA1KviUi6iqvioUp8N9ozT7yzTVkgc4ErLGnLTjOI/XJxVWbj8CssLtAwUi/0jX/oPlSJ5FM/SfPSK1Pu21Ogqd0gkd0rLJt1Z1lHmY00CzKU/f+9TK9Hu+7TNhVYTRoU1T5b4kBhNlVCjw+MLT449jbut9lHZ887VZEmIgTpcHPg4eL7o9b9FmAArEp9sJ45pQwAAAAASUVORK5CYII="},{"execStatusManagementID":10163,"name":"failed","displayName":"Failed","priority":2,"color":"#FF6666|#FFFFFF","defaultPriority":2,"defaultRunName":"failed","statusIcon":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADqYAAAOpgAABdvkl/FRgAAAeZJREFUeNqkk1tLG1EURverKCimaKkES62taZWEXKgatWCUxCRUm14Maii9Ydv/mQcvkL9RkjPIRMYzk5k5qw8xaUKkpfRhvRz41j4f7C2A/A+jjyIKEXqEw6g/C0RaPH8C30/g2zHm9AjztYr5/B7z8S3B00f4Iu27Bb3wjxrkc5h0GpNMEiYShCsrBBurBLV9OovzaJHWsGAwfFyFRgNTqRDG44TLywSlEubyEr9cwD/cw1uI4txKeoLul/M5aDTg+hosi6BcJigWQSlotzHn53Tiz+i83uZahCGBOT3CpFKEBwdgWX0JltUNK0Vnawt3dhbv1UvsQUEogvly+LtvqdQP0m6DUnibm7gzM+hIBLe0cYfg07tu31iMoFAYEhil8NbX0dPT3ExO4hZWRwXhhwrB0hJBPt/vjFIYpcC2Mc0mOp3GGR/H3c1wNSjwRQhr+/gvkpiLi+7UVgsvm8VdW8M0mxjbJqzXuYneR+dSwwJPRHUW5/GrRfz8NuHZGV42i45EuJmaQqdShPU6OpNA76Rpz93DEvk5tEhaRHkLUTpvdvBij/t9nYkJnLExnLkZdC6FPRAeWWVHRDkPH+CVN3D31nHzq7i7GXQujd5OjoTvPCZbRNki9Li6xepi/f0a/5FfAwDnlbiD1NTILQAAAABJRU5ErkJggg==","isArchived":"false","isMasterStatus":"true","defaultRunStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/RNtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWFfevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTPZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJzs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3vdy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtbYlu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ752PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9DBY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfyl5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADqYAAAOpgAABdvkl/FRgAAAeZJREFUeNqkk1tLG1EURverKCimaKkES62taZWEXKgatWCUxCRUm14Maii9Ydv/mQcvkL9RkjPIRMYzk5k5qw8xaUKkpfRhvRz41j4f7C2A/A+jjyIKEXqEw6g/C0RaPH8C30/g2zHm9AjztYr5/B7z8S3B00f4Iu27Bb3wjxrkc5h0GpNMEiYShCsrBBurBLV9OovzaJHWsGAwfFyFRgNTqRDG44TLywSlEubyEr9cwD/cw1uI4txKeoLul/M5aDTg+hosi6BcJigWQSlotzHn53Tiz+i83uZahCGBOT3CpFKEBwdgWX0JltUNK0Vnawt3dhbv1UvsQUEogvly+LtvqdQP0m6DUnibm7gzM+hIBLe0cYfg07tu31iMoFAYEhil8NbX0dPT3ExO4hZWRwXhhwrB0hJBPt/vjFIYpcC2Mc0mOp3GGR/H3c1wNSjwRQhr+/gvkpiLi+7UVgsvm8VdW8M0mxjbJqzXuYneR+dSwwJPRHUW5/GrRfz8NuHZGV42i45EuJmaQqdShPU6OpNA76Rpz93DEvk5tEhaRHkLUTpvdvBij/t9nYkJnLExnLkZdC6FPRAeWWVHRDkPH+CVN3D31nHzq7i7GXQujd5OjoTvPCZbRNki9Li6xepi/f0a/5FfAwDnlbiD1NTILQAAAABJRU5ErkJggg=="},{"execStatusManagementID":10166,"name":"notrun","displayName":"Not Run","priority":1,"color":"#205081|#FFFFFF","defaultPriority":3,"defaultRunName":"notrun","statusIcon":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnJJREFUeNp0U0FrE0EYfdnEtlpLElBqg40WKjR4aKqCwUITQSj0oIIepAcvIl485Cp4FLx4COgt+AMUxFAJIRi1rXgopG2gTUVEYz1oYqk0pE2yszOzzjcxa0vqsMsyzHzve997b134z3r0/lfUalpgJgd9H1wfntvvnmv35vFy1Su5jHPG49zkPtZUxWYLRO23FFBCWCLx5O6ZagcAFdtSzqqL4WCPQOCggNsW4FygYQp8LptYXW8SUEE1iD29N65BjL3FIlyvmfAbDKXleWz//IL+XhtBHxA75cHl0S4YtghbjM9O33/jdQA0bdUZsNVjI/epibUfDMlkEov5RQgh1Csx4HNhKtwNBUAgcQeAZibaJ3ulo8eOdwzhiWvIZrPIZDKQsgUS8BsYCbh1jQYgtUkwmvmsn2Goz3ZASo3juHjlNirlMmZmXkESEykx1O9RLIRv6k4qamirlNokGHU4f4xj2P/PmdeFBs7FbmB1ZQXpdFqP43FLWJYAU6+hfVZWkdpEU6oOF4I2BvtMB+T52woOHR3FRDSqz6kRV8WSANphIatahy0mPZt5mBtFB6QiQlgtMX1er3MIi5MOMChhFBLyuV1MTGzlRvNbDgOH6w7Iy3e/kV+rofh1hxhszT+bntMuUMIoJN83mKO2VACTk5O4On4EocEDDsiL3CaWitsQXCYcGymelLDUQg3rFVOrHYlEMBIK6bEujXXj9IkuB4RzWZDSTuyJ8q2HH7yUMAoJ+UxWkdrEhmYm2ksfFXUmCmq82ELqZrXjZ6J4UsIoJOQzWUVqa8HUzESbOreLOwB2LwoJ+2sVqU2C7XfvjwADAA/Pz4QPWErtAAAAAElFTkSuQmCC","isArchived":"false","isMasterStatus":"true","defaultRunStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnJJREFUeNp0U0FrE0EYfdnEtlpLElBqg40WKjR4aKqCwUITQSj0oIIepAcvIl485Cp4FLx4COgt+AMUxFAJIRi1rXgopG2gTUVEYz1oYqk0pE2yszOzzjcxa0vqsMsyzHzve997b134z3r0/lfUalpgJgd9H1wfntvvnmv35vFy1Su5jHPG49zkPtZUxWYLRO23FFBCWCLx5O6ZagcAFdtSzqqL4WCPQOCggNsW4FygYQp8LptYXW8SUEE1iD29N65BjL3FIlyvmfAbDKXleWz//IL+XhtBHxA75cHl0S4YtghbjM9O33/jdQA0bdUZsNVjI/epibUfDMlkEov5RQgh1Csx4HNhKtwNBUAgcQeAZibaJ3ulo8eOdwzhiWvIZrPIZDKQsgUS8BsYCbh1jQYgtUkwmvmsn2Goz3ZASo3juHjlNirlMmZmXkESEykx1O9RLIRv6k4qamirlNokGHU4f4xj2P/PmdeFBs7FbmB1ZQXpdFqP43FLWJYAU6+hfVZWkdpEU6oOF4I2BvtMB+T52woOHR3FRDSqz6kRV8WSANphIatahy0mPZt5mBtFB6QiQlgtMX1er3MIi5MOMChhFBLyuV1MTGzlRvNbDgOH6w7Iy3e/kV+rofh1hxhszT+bntMuUMIoJN83mKO2VACTk5O4On4EocEDDsiL3CaWitsQXCYcGymelLDUQg3rFVOrHYlEMBIK6bEujXXj9IkuB4RzWZDSTuyJ8q2HH7yUMAoJ+UxWkdrEhmYm2ksfFXUmCmq82ELqZrXjZ6J4UsIoJOQzWUVqa8HUzESbOreLOwB2LwoJ+2sVqU2C7XfvjwADAA/Pz4QPWErtAAAAAElFTkSuQmCC"},{"execStatusManagementID":10161,"name":"passed","displayName":"Passed","priority":0,"color":"#14892C|#FFFFFF","defaultPriority":4,"defaultRunName":"passed","statusIcon":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAKfSURBVDjLpZPrS1NhHMf9O3bOdmwDCWREIYKEUHsVJBI7mg3FvCxL09290jZj2EyLMnJexkgpLbPUanNOberU5taUMnHZUULMvelCtWF0sW/n7MVMEiN64AsPD8/n83uucQDi/id/DBT4Dolypw/qsz0pTMbj/WHpiDgsdSUyUmeiPt2+V7SrIM+bSss8ySGdR4abQQv6lrui6VxsRonrGCS9VEjSQ9E7CtiqdOZ4UuTqnBHO1X7YXl6Daa4yGq7vWO1D40wVDtj4kWQbn94myPGkCDPdSesczE2sCZShwl8CzcwZ6NiUs6n2nYX99T1cnKqA2EKui6+TwphA5k4yqMayopU5mANV3lNQTBdCMVUA9VQh3GuDMHiVcLCS3J4jSLhCGmKCjBEx0xlshjXYhApfMZRP5CyYD+UkG08+xt+4wLVQZA1tzxthm2tEfD3JxARH7QkbD1ZuozaggdZbxK5kAIsf5qGaKMTY2lAU/rH5HW3PLsEwUYy+YCcERmIjJpDcpzb6l7th9KtQ69fi09ePUej9l7cx2DJbD7UrG3r3afQHOyCo+V3QQzE35pvQvnAZukk5zL5qRL59jsKbPzdheXoBZc4saFhBS6AO7V4zqCpiawuptwQG+UAa7Ct3UT0hh9p9EnXT5Vh6t4C22QaUDh6HwnECOmcO7K+6kW49DKqS2DrEZCtfuI+9GrNHg4fMHVSO5kE7nAPVkAxKBxcOzsajpS4Yh4ohUPPWKTUh3PaQEptIOr6BiJjcZXCwktaAGfrRIpwblqOV3YKdhfXOIvBLeREWpnd8ynsaSJoyESFphwTtfjN6X1jRO2+FxWtCWksqBApeiFIR9K6fiTpPiigDoadqCEag5YUFKl6Yrciw0VOlhOivv/Ff8wtn0KzlebrUYwAAAABJRU5ErkJggg==","isArchived":"false","isMasterStatus":"true","defaultRunStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAKfSURBVDjLpZPrS1NhHMf9O3bOdmwDCWREIYKEUHsVJBI7mg3FvCxL09290jZj2EyLMnJexkgpLbPUanNOberU5taUMnHZUULMvelCtWF0sW/n7MVMEiN64AsPD8/n83uucQDi/id/DBT4Dolypw/qsz0pTMbj/WHpiDgsdSUyUmeiPt2+V7SrIM+bSss8ySGdR4abQQv6lrui6VxsRonrGCS9VEjSQ9E7CtiqdOZ4UuTqnBHO1X7YXl6Daa4yGq7vWO1D40wVDtj4kWQbn94myPGkCDPdSesczE2sCZShwl8CzcwZ6NiUs6n2nYX99T1cnKqA2EKui6+TwphA5k4yqMayopU5mANV3lNQTBdCMVUA9VQh3GuDMHiVcLCS3J4jSLhCGmKCjBEx0xlshjXYhApfMZRP5CyYD+UkG08+xt+4wLVQZA1tzxthm2tEfD3JxARH7QkbD1ZuozaggdZbxK5kAIsf5qGaKMTY2lAU/rH5HW3PLsEwUYy+YCcERmIjJpDcpzb6l7th9KtQ69fi09ePUej9l7cx2DJbD7UrG3r3afQHOyCo+V3QQzE35pvQvnAZukk5zL5qRL59jsKbPzdheXoBZc4saFhBS6AO7V4zqCpiawuptwQG+UAa7Ct3UT0hh9p9EnXT5Vh6t4C22QaUDh6HwnECOmcO7K+6kW49DKqS2DrEZCtfuI+9GrNHg4fMHVSO5kE7nAPVkAxKBxcOzsajpS4Yh4ohUPPWKTUh3PaQEptIOr6BiJjcZXCwktaAGfrRIpwblqOV3YKdhfXOIvBLeREWpnd8ynsaSJoyESFphwTtfjN6X1jRO2+FxWtCWksqBApeiFIR9K6fiTpPiigDoadqCEag5YUFKl6Yrciw0VOlhOivv/Ff8wtn0KzlebrUYwAAAABJRU5ErkJggg=="},{"execStatusManagementID":10164,"name":"empty","displayName":"Not Applicable","priority":5,"color":"#59AFE1|#FFFFFF","defaultPriority":5,"defaultRunName":"empty","statusIcon":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAntJREFUeNq0U89PE0EYfe2upVDabjfbEJHQC4WChPZStT1x5OgNoyYQ4MCxieKV+BdQiye5SNTEi7EXlEPTIJgIUoUgFU8ElgJNaYCGpoT+Guebxh5Qb7rJZDMz33vzvfdmgP/wuYxG45QsX1lraGhgTU1NzGq1rTkcjilNc7ouFxsuzYcMBkOYFysDAwO41tYmSg4PD7C0uIRCoXAqSVIonT6c/RMBgZ87HCrez89D39PR1dkFi8WCSqWCXC6Hp9PTiMVi4CTDur4rSKRfbXNw1G5XzPn8GRKJBArn54hEIggGg4JEkmQEAgFkMhnout6vadrr4+PjnECTZlVV2crKZ+b1epnF0szsdjtztrQwVdPYm7dRtvFtk62tb7DFxY+sz+tjnZ1dUwJbI5D6SfPV1la8ePkKHo+H2kRfby8eT05ibGwU8XhcSDE3NsLv90OW5f46gSQZfWQYFVC7z2Zm4Ha7kUx+x9zcO4yOjGDi0YSQRjVOzUkH+Agr1wgk4We1WhUFPDrcvBXA9vY2tra2xBgcvAMuT+yT9TVMvQN5naKizdrgRJxMUVWUSiWYTCZkM0fI5/NinZtHstfrBLIsLVDOFBWBq9UKGKsim83iwcMJuFwupFJ7iDwJI3uURXIzScZH6zE2N1t/lMvl4ZOTEzNFRSQH+/u4d/e+aNvvv8H9SCKdTuPrlwQuLoqn/NDxVCqVEwT8huVsNlt6Z2fnNuV8vacHnu5uKIoiJBm53m4+T6yuolgskunjy8ufPvx2ldvbXUPcnLDVZlMoKnKbKkgztc3B/CobQxw8+7e3gI4ONz2mEOVMUZHbZBj/L3BwmIN3/+nT/SnAAPCwF8oXXS6OAAAAAElFTkSuQmCC","isArchived":"false","isMasterStatus":"true","defaultRunStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAntJREFUeNq0U89PE0EYfe2upVDabjfbEJHQC4WChPZStT1x5OgNoyYQ4MCxieKV+BdQiye5SNTEi7EXlEPTIJgIUoUgFU8ElgJNaYCGpoT+Guebxh5Qb7rJZDMz33vzvfdmgP/wuYxG45QsX1lraGhgTU1NzGq1rTkcjilNc7ouFxsuzYcMBkOYFysDAwO41tYmSg4PD7C0uIRCoXAqSVIonT6c/RMBgZ87HCrez89D39PR1dkFi8WCSqWCXC6Hp9PTiMVi4CTDur4rSKRfbXNw1G5XzPn8GRKJBArn54hEIggGg4JEkmQEAgFkMhnout6vadrr4+PjnECTZlVV2crKZ+b1epnF0szsdjtztrQwVdPYm7dRtvFtk62tb7DFxY+sz+tjnZ1dUwJbI5D6SfPV1la8ePkKHo+H2kRfby8eT05ibGwU8XhcSDE3NsLv90OW5f46gSQZfWQYFVC7z2Zm4Ha7kUx+x9zcO4yOjGDi0YSQRjVOzUkH+Agr1wgk4We1WhUFPDrcvBXA9vY2tra2xBgcvAMuT+yT9TVMvQN5naKizdrgRJxMUVWUSiWYTCZkM0fI5/NinZtHstfrBLIsLVDOFBWBq9UKGKsim83iwcMJuFwupFJ7iDwJI3uURXIzScZH6zE2N1t/lMvl4ZOTEzNFRSQH+/u4d/e+aNvvv8H9SCKdTuPrlwQuLoqn/NDxVCqVEwT8huVsNlt6Z2fnNuV8vacHnu5uKIoiJBm53m4+T6yuolgskunjy8ufPvx2ldvbXUPcnLDVZlMoKnKbKkgztc3B/CobQxw8+7e3gI4ONz2mEOVMUZHbZBj/L3BwmIN3/+nT/SnAAPCwF8oXXS6OAAAAAElFTkSuQmCC"}]

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Fetch integrations [/rest/admin/integration/list/{type}]
### Get List [POST]
API to list all Integrations

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Parameters 
    + type : `all` (required, enum[all]) - Send 'all' to see all JIRA integrations
        + Default: `all`

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" :0,
                 "limit" :50,
                 "page" :1
             }

+ Response 200

    + Body

            {"data":[{"id":402,"name":"DataConfig JIRA","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":402,"Alias":"DataConfig JIRA","VersionId":20,"Version":"7.x.x","Integrationurl":"http://config.qmetry.com/jira","username":"admin","password":"*****","projWiseConfig":{"1364":{"ExternalProjectId":4960,"ExternalWorkspaceId":""},"837":{"ExternalProjectId":4959,"ExternalWorkspaceId":""}},"AssociatedProject":"DataConfigProject, 8.4.1","CurrentProject":"No"},{"id":374,"name":"clientjira","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":374,"Alias":"clientjira","VersionId":20,"Version":"7.x.x","Integrationurl":"https://jira.cpsi.com","username":"qmetry","password":"*****","AssociatedProject":"","CurrentProject":"No"},{"id":364,"name":"cloudjira","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":364,"Alias":"cloudjira","VersionId":22,"Version":"Cloud","Integrationurl":"https://qmetrysupport.atlassian.net","username":"kunal.gandhi","password":"*****","projWiseConfig":{"600":{"ExternalProjectId":4666,"ExternalWorkspaceId":""},"2":{"ExternalProjectId":2751,"ExternalWorkspaceId":""}},"AssociatedProject":"Test1, Sample Domain, D_8..4","CurrentProject":"No"},{"id":303,"name":"JIRA_Cloud_842","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":303,"Alias":"JIRA_Cloud_842","VersionId":22,"Version":"Cloud","Integrationurl":"https://ramde082018.atlassian.net","username":"admin","password":"*****","projWiseConfig":{"883":{"ExternalProjectId":2094,"ExternalWorkspaceId":""}},"AssociatedProject":"842","CurrentProject":"No"},{"id":292,"name":"Krunal","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":292,"Alias":"Krunal","VersionId":22,"Version":"Cloud","Integrationurl":"https://panditk1.atlassian.net","username":"admin","password":"*****","projWiseConfig":{"596":{"ExternalProjectId":2062,"ExternalWorkspaceId":""}},"AssociatedProject":"BDD Project","CurrentProject":"No"},{"id":226,"name":"Jira_Rucha","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":226,"Alias":"Jira_Rucha","VersionId":22,"Version":"Cloud","Integrationurl":"https://ruchapatel.atlassian.net","username":"admin","password":"*****","AssociatedProject":"","CurrentProject":"No"},{"id":214,"name":"tejas","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":214,"Alias":"tejas","VersionId":22,"Version":"Cloud","Integrationurl":"https://pateltejas007.atlassian.net","username":"admin","password":"*****","AssociatedProject":"","CurrentProject":"No"},{"id":170,"name":"QA83","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":170,"Alias":"QA83","VersionId":22,"Version":"Cloud","Integrationurl":"https://qmetryeval.atlassian.net","username":"dhaval.soneji@qmetry.com","password":"*****","projWiseConfig":{"483":{"ExternalProjectId":1415,"ExternalWorkspaceId":""},"484":{"ExternalProjectId":1426,"ExternalWorkspaceId":""},"519":{"ExternalProjectId":1564,"ExternalWorkspaceId":""},"522":{"ExternalProjectId":1414,"ExternalWorkspaceId":""},"561":{"ExternalProjectId":1566,"ExternalWorkspaceId":""},"610":{"ExternalProjectId":1680,"ExternalWorkspaceId":""},"606":{"ExternalProjectId":1783,"ExternalWorkspaceId":""},"864":{"ExternalProjectId":1416,"ExternalWorkspaceId":""},"862":{"ExternalProjectId":1701,"ExternalWorkspaceId":""},"657":{"ExternalProjectId":2075,"ExternalWorkspaceId":""},"800":{"ExternalProjectId":1716,"ExternalWorkspaceId":""},"897":{"ExternalProjectId":1418,"ExternalWorkspaceId":""},"899":{"ExternalProjectId":1561,"ExternalWorkspaceId":""},"898":{"ExternalProjectId":1420,"ExternalWorkspaceId":""},"910":{"ExternalProjectId":2140,"ExternalWorkspaceId":""},"845":{"ExternalProjectId":2073,"ExternalWorkspaceId":""},"601":{"ExternalProjectId":2746,"ExternalWorkspaceId":""},"1078":{"ExternalProjectId":2749,"ExternalWorkspaceId":""},"1077":{"ExternalProjectId":1568,"ExternalWorkspaceId":""},"1079":{"ExternalProjectId":2748,"ExternalWorkspaceId":""},"1190":{"ExternalProjectId":1417,"ExternalWorkspaceId":""},"1171":{"ExternalProjectId":2065,"ExternalWorkspaceId":""},"1358":{"ExternalProjectId":1679,"ExternalWorkspaceId":""},"620":{"ExternalProjectId":2106,"ExternalWorkspaceId":""}},"AssociatedProject":"83Release, Sanity_15thSep, Shreya Project, PRU_PRO_07th July_WF ON, Demo_Integration, 8.3.1, 8.3.1 second, PRU_PRO_11AUG, KT841, Project_Sprint, 8.4.1_Production, AmazonDemo, Automation841, Test Jira, 8.4.2 Production Project, BBD and 7X to 8X, JiraSprint, Sanity Testing - Sameer, New 8.4.2, Cloud_8.4.3, D_Sanity_19th May, Verify, reports_DV, AAAA","CurrentProject":"No"},{"id":151,"name":"JIRA_QA","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":151,"Alias":"JIRA_QA","VersionId":22,"Version":"Cloud","Integrationurl":"https://qanewjira.atlassian.net","username":"dhaval.soneji@qmetry.com","password":"*****","projWiseConfig":{"61":{"ExternalProjectId":1377,"ExternalWorkspaceId":""},"368":{"ExternalProjectId":1405,"ExternalWorkspaceId":""}},"AssociatedProject":"Project_823_Cloud, Automation","CurrentProject":"No"},{"id":143,"name":"Jira-MSSQL","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":143,"Alias":"Jira-MSSQL","VersionId":20,"Version":"7.x.x","Integrationurl":"http://qtm4jmssql.qmetry.com:8080","username":"admin","password":"*****","AssociatedProject":"","CurrentProject":"No"},{"id":92,"name":"Test","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":92,"Alias":"Test","VersionId":20,"Version":"7.x.x","Integrationurl":"http://qtm4jpostgres.qmetry.com:8080","username":"admin","password":"*****","projWiseConfig":{"132":{"ExternalProjectId":780,"ExternalWorkspaceId":""},"232":{"ExternalProjectId":775,"ExternalWorkspaceId":""},"677":{"ExternalProjectId":1749,"ExternalWorkspaceId":""},"772":{"ExternalProjectId":1909,"ExternalWorkspaceId":""},"163":{"ExternalProjectId":1726,"ExternalWorkspaceId":""},"909":{"ExternalProjectId":2120,"ExternalWorkspaceId":""},"608":{"ExternalProjectId":1721,"ExternalWorkspaceId":""}},"AssociatedProject":"Pravin Project, net_copy, ServerJira, Onpremise, Dashboard Trial, NEW_Report, New Project with Test","CurrentProject":"No"},{"id":88,"name":"EVALJIRA","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":88,"Alias":"EVALJIRA","VersionId":20,"Version":"7.x.x","Integrationurl":"https://evaljira.qmetry.com","username":"admin","password":"*****","projWiseConfig":{"127":{"ExternalProjectId":752,"ExternalWorkspaceId":""},"210":{"ExternalProjectId":714,"ExternalWorkspaceId":""},"225":{"ExternalProjectId":735,"ExternalWorkspaceId":""},"702":{"ExternalProjectId":715,"ExternalWorkspaceId":""}},"AssociatedProject":"Integration project, Test Project, tproject, xyz_kruti_copy","CurrentProject":"No"},{"id":86,"name":"Jira server","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":86,"Alias":"Jira server","VersionId":20,"Version":"7.x.x","Integrationurl":"https://qmetryjiraeval.qmetry.com","username":"admin","password":"*****","projWiseConfig":{"16":{"ExternalProjectId":706,"ExternalWorkspaceId":""},"107":{"ExternalProjectId":711,"ExternalWorkspaceId":""}},"AssociatedProject":"TestIntegration, QMetry Test Management","CurrentProject":"No"},{"id":82,"name":"profJira","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":82,"Alias":"profJira","VersionId":22,"Version":"Cloud","Integrationurl":"https://professionaljira.atlassian.net","username":"admin","password":"*****","projWiseConfig":{"91":{"ExternalProjectId":705,"ExternalWorkspaceId":""}},"AssociatedProject":"testimport","CurrentProject":"No"},{"id":34,"name":"JiraDemo","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":34,"Alias":"JiraDemo","VersionId":22,"Version":"Cloud","Integrationurl":"https://qmetrytestprod.atlassian.net","username":"admin","password":"*****","projWiseConfig":{"36":{"ExternalProjectId":117,"ExternalWorkspaceId":""},"85":{"ExternalProjectId":105,"ExternalWorkspaceId":""},"99":{"ExternalProjectId":700,"ExternalWorkspaceId":""},"79":{"ExternalProjectId":106,"ExternalWorkspaceId":""},"236":{"ExternalProjectId":1209,"ExternalWorkspaceId":""},"409":{"ExternalProjectId":108,"ExternalWorkspaceId":""}},"AssociatedProject":"DemoPerspective, P1, test, Jira TestDemo, KT1, JIRADemo","CurrentProject":"No"},{"id":21,"name":"CloudFrontTry","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":21,"Alias":"CloudFrontTry","VersionId":22,"Version":"Cloud","Integrationurl":"https://cloudfronttry.atlassian.net","username":"rucha.patel@infostretch.com","password":"*****","projWiseConfig":{"22":{"ExternalProjectId":60,"ExternalWorkspaceId":""},"126":{"ExternalProjectId":55,"ExternalWorkspaceId":""}},"AssociatedProject":"JIRAIntegration, Integration","CurrentProject":"No"},{"id":16,"name":"jira_cloud","Integrationsystem":"Jira","qmclass":"","IntegrationsystemId":4,"IntegrationId":16,"Alias":"jira_cloud","VersionId":22,"Version":"Cloud","Integrationurl":"https://qmetry.atlassian.net","username":"admin","password":"*****","projWiseConfig":{"17":{"ExternalProjectId":45,"ExternalWorkspaceId":""},"33":{"ExternalProjectId":16,"ExternalWorkspaceId":""},"82":{"ExternalProjectId":7,"ExternalWorkspaceId":""},"161":{"ExternalProjectId":1,"ExternalWorkspaceId":""},"173":{"ExternalProjectId":868,"ExternalWorkspaceId":""},"174":{"ExternalProjectId":869,"ExternalWorkspaceId":""},"237":{"ExternalProjectId":1473,"ExternalWorkspaceId":""}},"AssociatedProject":"QAProject_Dont Touch, Fresh, Test management, JiraIntegrationTest, Integration_project, Project2, Project1","CurrentProject":"No"}],"total":17}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Fetch fields [/rest/admin/managefield/list]
### Get List [POST]
API to give list of fields

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|projectID|Unique identifier of project whose field list has to be obtained|No|
|isSystemFieldRequired|Send True to get System fields and false to get User fields. Defaulted to false|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" :0,
                 "limit" :50,
                 "page" :1,
                 "projectID" :1098,
                 "isSystemFieldRequired" :true
             }

+ Response 200

    + Body

            {"data":[{"label":"Summary","name":"name","fieldLength":"255","fieldType":"STRING","fieldTypeID":6,"modules":"REQUIREMENT,REQUIREMENTFOLDER,TASK,TESTCASE,TESTCASEFOLDER,TESTCASESTEP,TESTSUITE,TESTSUITEFOLDER","projects":"CodeSnippets","mandatory":true,"mapped":"false","inUse":"Yes","fieldMasterID":1,"userFieldID":29,"projectID":1098,"isSystem":true,"isDefaultMandatory":true,"defaultValueID":""},{"label":"Description","name":"description","fieldLength":"65535","fieldType":"LARGETEXT","fieldTypeID":2,"modules":"ISSUE,REQUIREMENT,REQUIREMENTFOLDER,TASK,TESTCASE,TESTCASEFOLDER,TESTCASESTEP,TESTSUITE,TESTSUITEFOLDER","projects":"CodeSnippets","mandatory":false,"mapped":"false","inUse":"Yes","fieldMasterID":2,"userFieldID":50,"projectID":1098,"isSystem":true,"isDefaultMandatory":false,"defaultValueID":""}],"total":42}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Fetch roles [/rest/admin/role/list]
### Get List [POST]
API to show list of roles

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"roleID":1331,"name":"r1","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1330,"description":"Newrole_1","name":"Newrole_1","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1329,"name":"Mday","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1328,"name":"NROLE","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1327,"name":"Role1","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1326,"name":"8.4.3_test3","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1325,"description":"8.4.3_test2","name":"8.4.3_test2","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1324,"description":"Role_Withoutlink_456","name":"Role_Withoutlink_456","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1318,"description":"test","name":"8.4.3_test","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1317,"description":"843_Sanity","name":"843_Sanity","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1316,"description":"Role_Withoutlink","name":"Role_Withoutlink","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1036,"name":"noAuto","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":1026,"description":"Desc","name":"ProductionRole","addLdapRole":true,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":732,"name":"TestRole","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":723,"description":"role","name":"role","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":604,"description":"RoleDescription","name":"SeniorManagement","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":533,"description":"QA Analyst","name":"QA Analyst","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":472,"description":"Create_ROle","name":"Create_ROle","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":471,"description":"TestTest_title","name":"Test_title","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":470,"description":"NewRole","name":"NewRole","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":421,"name":"New Role_Edit","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":281,"description":"Read Only","name":"Read Only","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":true},{"roleID":47,"description":"Admin without User Creation","name":"Manager","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":false},{"roleID":7,"description":"Tester","name":"Tester","addLdapRole":false,"isDefault":true,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":true},{"roleID":6,"description":"QA Manager","name":"QA Manager","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":true},{"roleID":5,"description":"Admin","name":"Admin","addLdapRole":false,"isDefault":false,"allowEditRecordData":true,"allowEditPublicView":true,"isSysDefault":true}],"total":"26"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Fetch available Releases and Cycles [/rest/admin/scope/tree]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|showArchive|Send false to get only unarchived Releases, defaulted to false|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "showArchive" :false
             }

+ Response 200

    + Body

            {"text":".","children":[{"projID":1098,"type":"CodeSnippets","isArchived":false,"isLocked":false,"iconCls":"ad-project-ico","expanded":true,"children":[{"relID":2596,"type":"Default Release","isLocked":false,"scope":"release","isArchived":false,"iconCls":"ad-release-ico","expanded":true,"children":[{"cyclID":5391,"type":"Default Cycle","isLocked":false,"scope":"cycle","isArchived":false,"iconCls":"ad-cycle-ico","leaf":true}]},{"relID":3321,"type":"Realease efwsahybhip","isLocked":false,"scope":"release","isArchived":false,"startdate":"2018-11-09T05:00:00","targetdate":"2018-11-10T05:00:00","iconCls":"ad-release-ico","expanded":true,"children":[{"cyclID":6455,"type":"Cycle 15j2wgqef9v","isLocked":false,"scope":"cycle","isArchived":false,"startdate":"2018-11-09T05:00:00","targetdate":"2018-11-10T05:00:00","iconCls":"ad-cycle-ico","leaf":true},{"cyclID":6454,"type":"Default Cycle efwsahybhip","isLocked":false,"scope":"cycle","isArchived":false,"iconCls":"ad-cycle-ico","leaf":true}]},{"relID":3323,"type":"Realease ticnfa42h6a","isLocked":false,"scope":"release","isArchived":false,"startdate":"2018-11-09T05:00:00","targetdate":"2018-11-10T05:00:00","iconCls":"ad-release-ico","expanded":true,"children":[{"cyclID":6459,"type":"Cycle b9wxzkjn27l","isLocked":false,"scope":"cycle","isArchived":false,"startdate":"2018-11-09T05:00:00","targetdate":"2018-11-10T05:00:00","iconCls":"ad-cycle-ico","leaf":true},{"cyclID":6457,"type":"Default Cycle ticnfa42h6a","isLocked":false,"scope":"cycle","isArchived":false,"iconCls":"ad-cycle-ico","leaf":true}]}]}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}fil

# Group Custom list          
## Add list [/rest/admin/customlist/add]
### Add [POST]
API to add custom list

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|listValue|ListValues to add - Refer JSON Schema|Yes|
|Listname|Name of list|Yes|

<br><br> **NOTE:**
<ul>
<li><font size="3">Value of Listname has to be unique.</li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "listValue": [
                {
                  "Value": "0",
                  "isArchived": false,
                  "isLocked": false,
                  "Name": "Name",
                  "Alias": "Name",
                  "id": "",
                  "Id": 0
                },
                {
                  "Value": "0",
                  "isArchived": false,
                  "isLocked": false,
                  "Name": "Email",
                  "Alias": "Email",
                  "id": "",
                  "Id": 0
                }
              ],
              "Listname": "Applicants"
            }
            
    + Schema 

            "ListValue" : {
                  "type" : "object",
                  "required" : [ "alias", "createdDate", "id", "name", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of list value"
                    },
                    "alias" : {
                      "type" : "string",
                      "description" : "Alias of list value"
                    },
                    "createdDate" : {
                      "type" : "string",
                      "description" : "Created date of the list value"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "weightage of the list value"
                    },
                    "id" : {
                      "type" : "integer",
                      "format" : "int64",
                      "description" : "ID of list value to update/delete, '0' when list value is to be added"
                    }
                  }
                }

+ Response 200

    + Body

            {"success":true,"code":"AD.ADD_CUSTOMLIST_SUCCESS","data":[{"id":5396,"Listname":"Applicants"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}


+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}


+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## List [/rest/admin/customlist/list]
### Get List [POST]
API to list custom lists and dropdowns

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "start" : 0,
                "limit" : 50,
                "page" : 1
            }

+ Response 200

    + Body

            {"data":[{"Id":5419,"Listname":"CL27","SystemDefine":false,"noofitems":2,"projectWiseCount":2},{"Id":5418,"Listname":"CL26","SystemDefine":false,"noofitems":2,"projectWiseCount":2},{"Id":5417,"Listname":"CL25","SystemDefine":false,"noofitems":0,"projectWiseCount":0},{"Id":5416,"Listname":"CL24","SystemDefine":false,"noofitems":0,"projectWiseCount":0},{"Id":5401,"Listname":"CL22","SystemDefine":false,"noofitems":0,"projectWiseCount":0},{"Id":5400,"Listname":"CL1111","SystemDefine":false,"noofitems":0,"projectWiseCount":0},{"Id":5399,"Listname":"Custom List pen6tzo49js","SystemDefine":false,"noofitems":0,"projectWiseCount":0},{"Id":5398,"Listname":"Custom List mtyc9f2b4pc","SystemDefine":false,"noofitems":2,"projectWiseCount":2},{"Id":5397,"Listname":"Applicants","SystemDefine":false,"noofitems":3,"projectWiseCount":3},{"Id":5281,"Listname":"Req_DirectCover","SystemDefine":false,"noofitems":14,"projectWiseCount":0}],"total":102}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

        
## Delete list [/rest/admin/customlist/delete]
### Delete [POST]
API to delete custom list.

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|listId|Unique identifier of Custom-list|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the listId - Call API 'Custom list/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].Id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "listId" : 5418
             }
             
+ Response 200

    + Body

            {"success":true,"code":"AD.DELETE_CUSTOMLIST_SUCCESS"}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Fetch list items [/rest/admin/customlist/listval]
### Get List [POST]
API to list custom list values

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|qmMasterId|ID of custom list whose list values are to be obtained|Yes|
|params|Parameters - Refer JSON Schema|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the qmMasterId - Call API 'Custom list/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].Id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "qmMasterId": 5397,
              "params": {
                "showArchive": true
              },
              "start": 0,
              "limit": 10,
              "page": 1
            }
             
    + Schema

            "Parameters" : {
              "type": "object",
              "required": [
                "showArchive"
              ],
              "properties": {
                "showArchive": {
                  "type": "boolean",
                  "description": "Send 'true' to show archived entities",
                  "default": false
                }
              }
            }

+ Response 200

    + Body

            {"data":[{"Id":188416,"Alias":"Address[X]","Name":"Address","isArchived":true,"isLocked":false,"isSystemDefault":false,"createdDate":"2018-10-25T08:55:40"},{"Id":188415,"Alias":"Contact","Name":"Contact","isArchived":false,"isLocked":false,"isSystemDefault":false,"createdDate":"2018-10-25T08:55:40"},{"Id":188414,"Alias":"Name","Name":"NAme","isArchived":false,"isLocked":false,"isSystemDefault":false,"createdDate":"2018-10-25T08:55:40"}],"total":3}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
   
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Archive list items  [/rest/admin/customlistvalue/archive]
### Archive [PUT]
API to Archive values of custom list .

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|listDetailIDs|Unique identifier of Custom-list value|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the listDetailIDs - Call API 'Custom list/Fetch list items'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].Id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "listDetailIDs":[188489]
             }
             
+ Response 200

    + Body

            {"success":true,"code":"AD.LISTVALUE_ARCHIVE_SUCCESSFUL"}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Update list [/rest/admin/customlist/update]
### Update [POST]
API to update custom list

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|listId|Unique identifier of list which is to be updated|Yes|
|listValueDeleted|Provide listValues to be deleted|Yes|
|listValue|Provide listValues to be updated/added|Yes|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the listId - Call API 'Custom list/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].Id </li>
        </ul>
    </li>
    <li><font size="3">To get the values for listValueDeleted and listValue - Call API 'Custom list/Fetch list items'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;] </li>
        </ul>
    </li>
    <li><font size="3">Request body must have either listValue or listValueDeleted. Data given in listvalue will be updated/added. Data given in listValueDeleted will be deleted.
        <ul>
            <li><font size="3">Note - Only archived listvalue can be deleted. To archive values call API - Custom list/Archive list items  </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "listId": 5435,
                "listValue": [
                    {
                      "Value": "0",
                      "isArchived": false,
                      "isLocked": false,
                      "Name": "Name_Added",
                      "Alias": "Name_Added",
                      "id": "",
                      "Id": 0
                    },
                    {
                      "isArchived": false,
                      "isLocked": false,
                      "Name": "contact_updated",
                      "Alias": "contact_updated",
                      "Id": 188489
                    }
                    ],
                    "listValueDeleted": [
                    {
                      "isArchived": false,
                      "isLocked": false,
                      "Name": "address",
                      "Alias": "address",
                      "Id": 188490
                    }
                ]
            }
            
    + Schema
    
            "ListValue" : {
                  "type" : "object",
                  "required" : [ "alias", "createdDate", "id", "name", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of list value"
                    },
                    "alias" : {
                      "type" : "string",
                      "description" : "Alias of list value"
                    },
                    "createdDate" : {
                      "type" : "string",
                      "description" : "Created date of the list value"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "weightage of the list value"
                    },
                    "id" : {
                      "type" : "integer",
                      "format" : "int64",
                      "description" : "ID of list value to update/delete, '0' when list value is to be added"
                    }
                  }
                }            

+ Response 200

    + Body

            {"success":true,"code":"AD.UPDATE_CUSTOMLIST_SUCCESS","data":[{"id":4968,"Listname":"CustomListuvr1q84kbvd"}]}
            
+ Response 400

    + Body

            {"success":false,"code":"AD.UPDATE_CUSTOMLIST_FAIL","data":[{"id":"","Listname":"jsonObj","msg":"UPDATE_CUSTOMLIST_FAIL"}]}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
# Group Project            
## Create [/rest/admin/project]
### Create [POST]
API to create project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|project|Project parameters - Refer JSON Schema|Yes|
|release|Release parameters - Refer JSON Schema|Yes|
|cycle|Cycle parameters - Refer JSON Schema|Yes|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "project": {
                "approvalWorkflow": true,
                "name": "Sales",
                "projectKey": "SAL",
                "description": "Sales Project ",
                "isRichText": true,
                "addLdapUser": false
              },
              "release": {
                "name": "Default Release",
                "description": ""
              },
              "cycle": {
                "name": "Default Cycle",
                "isLocked": false,
                "isArchived": false
              }
            }
            
    + Schema
    
             "ProjectParameters" : {
                  "type" : "object",
                  "required" : [ "name", "projectKey" ],
                  "properties" : {
                    "isAutoAddValue" : {
                      "type" : "boolean",
                      "position" : 1,
                      "description" : "Defaulted to true",
                      "default" : false
                    },
                    "approvalWorkflow" : {
                      "type" : "boolean",
                      "position" : 2,
                      "description" : "Defaulted to true. Set true to enable eSignature in the project",
                      "default" : false
                    },
                    "name" : {
                      "type" : "string",
                      "position" : 3,
                      "description" : "Name of the new project"
                    },
                    "projectKey" : {
                      "type" : "string",
                      "position" : 4,
                      "description" : "Unique key to identify the new project"
                    },
                    "addLdapUser" : {
                      "type" : "boolean",
                      "position" : 5,
                      "description" : "Set true to allow addition of LDAP users in the project",
                      "default" : false
                    }
                  }
                },
             "ReleaseParams" : {
                  "type" : "object",
                  "required" : [ "name" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "position" : 1,
                      "description" : "Name of Release"
                    },
                    "description" : {
                      "type" : "string",
                      "position" : 2,
                      "description" : "An explanation for the release."
                    }
                  }
                },
              "Cycle" : {
                  "type" : "object",
                  "required" : [ "name" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "position" : 1,
                      "description" : "Name of Cycle"
                    }

+ Response 200

    + Body

            {"success":true,"code":"AD.PROJECT_SUCCESSFUL","data":[{"projectID":1487,"releaseID":3707,"cycleID":7170}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## List [/rest/admin/project/list]
### Get List [POST]
API to list all projects

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|params|Parameters - Refer JSON Schema|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "params": {
                "showArchive": false
              }
            }
    
    + Schema
    
            "Params" : {
                  "type" : "object",
                  "required" : [ "showArchive" ],
                  "properties" : {
                    "showArchive" : {
                      "type" : "boolean",
                      "description" : "Send 'true' to show archived entities",
                      "default" : false
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"projectID":1488,"name":"APIDocProject","description":"API Project ","isArchived":false,"projectKey":"APT","isLocked":false,"userDefault":false,"isRichText":true,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1487,"name":"APIDocProj","description":"API DOC project","isArchived":false,"projectKey":"ADP","isLocked":false,"userDefault":false,"isRichText":true,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1486,"name":"Project 4vfelictlew","description":"Description","isArchived":false,"projectKey":"T8J","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1485,"name":"Project ziwvc95px68","description":"Description","isArchived":false,"projectKey":"XQA","isLocked":false,"userDefault":false,"isRichText":true,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1484,"name":"Project 886gtgo93gv","description":"Description","isArchived":false,"projectKey":"HFC","isLocked":false,"userDefault":false,"isRichText":true,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1483,"name":"Sales","description":"Sales Project ","isArchived":false,"projectKey":"SAL","isLocked":false,"userDefault":false,"isRichText":true,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1440,"name":"Project Clone hhgzy0oiahl","description":"Description","isArchived":false,"projectKey":"E7P","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1439,"name":"Project 04i19ynafd43","description":"Description","isArchived":false,"projectKey":"4HX","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1438,"name":"Project dnvv3ae6ed4","description":"Description","isArchived":false,"projectKey":"OYE","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1437,"name":"Project g2ozlcvco68","description":"Description","isArchived":false,"projectKey":"90V","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1384,"name":"Project Clone yhfwk8j299","description":"Description","isArchived":false,"projectKey":"UXZ","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1383,"name":"Project zwxt0lja9c8","description":"Description","isArchived":false,"projectKey":"VN9","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1378,"name":"Project 97ax7deej0f","description":"Description","isArchived":false,"projectKey":"CHF","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1377,"name":"Project Clone zwq8h7nyv3s","description":"Description","isArchived":false,"projectKey":"3Z6","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1376,"name":"Project 39wqwncbhrt","description":"Description","isArchived":false,"projectKey":"I6R","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1167,"name":"Avengers","description":"","isArchived":false,"projectKey":"AVE","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":1098,"name":"CodeSnippets","isArchived":false,"projectKey":"COD","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":891,"name":"Star Wars","isArchived":false,"projectKey":"SW","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":860,"name":"8.4.1_Project_Pratik_1","description":"8.4.1_Project_Pratik_update","isArchived":false,"projectKey":"SAF","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":846,"name":"ViewIDTesting","isArchived":false,"projectKey":"VIE","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":800,"name":"AmazonDemo","isArchived":false,"projectKey":"AMA","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":789,"name":"BankingDemo_Robot","isArchived":false,"projectKey":"BAN","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":782,"name":"ABN.AMRO","description":"QTM Maven Plugin","isArchived":false,"projectKey":"ABN","isLocked":false,"userDefault":false,"isRichText":false,"isAutoAddValue":true,"isSyncTCMailSend":false},{"projectID":2,"name":"Sample Domain","isArchived":false,"projectKey":"SAM","isLocked":false,"userDefault":false,"isRichText":true,"isAutoAddValue":true,"isSyncTCMailSend":false}],"total":24}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Archive [/rest/admin/project/archive]
### Archive [PUT]
API to archive project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|projectID|Unique identifier of projects to archive|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "projectID" : [1098]
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.ARCHIVE_SUCCESSFUL","data":[{"ENTITY_KEY":"{PROJECT}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            

## Unarchive [/rest/admin/project/unarchive]
### Unarchive [PUT]
API to unarchive project

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|projectID|Unique identifier of project to Unarchive|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
     <li><font size="3">While calling API 'Projects/List', keep value of 'showArchive' attribute 'true' in request body.</li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "projectID" :[1098]
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.UNARCHIVE_SUCCESSFUL","data":[{"ENTITY_KEY":"{PROJECT}"}]}
            
+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Clone [/rest/admin/project/clone]
### Clone [POST]
API to clone project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|projectID|The unique identifier of the source project|Yes|
|name|Name of the source project|No|
|clone|Type of clone:- 0 - to clone only the folder structure, along with any releases and cycles & 1 - to clone Project meta-data, Requirements, Test Cases, Test Suites and Issues|No|
|Projectkey|The unique project key of new project|Yes|
|newProject|Name of the new project|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID and name - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].projectID and data[&#x3C;index&#x3E;].name </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "projectID": 1488,
              "name": "APIDocProject",
              "clone": "0",
              "Projectkey": "APJ",
              "newProject": "APIDocProject_cloned"
            }
            
+ Response 200

    + Body

            {"success":true,"code":"CO.PROJECT_CLONE_IN_PROGRESS","data":[{"filterName":" clone {PROJECT}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Delete [/rest/admin/project/delete]
### Delete [POST]
API to delete project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|projectID|Unique identifier of project to delete|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "projectID" : [1098]
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.PROJECT_DELETE_INITIALISED","data":[{"ENTITY_KEY":"{PROJECT}"}]}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

# Group Release          
## Create  [/rest/admin/release]
### Create [POST]
API to create release

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|release|Release Parameters - Refer JSON Schema|Yes|
|cycle|Cycle Parameters - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
    <li><font size="3">Date format of the 'startDate' and 'targetDate' is depend on format that has been configured in qtm. 
        <ul>
            <li><font size="3">To verify/update the Date Format - Go to qtm -> User Profile </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "release": {
                "name": "Sample Release",
                "description": "",
                "startDate": "10-16-2018",
                "targetDate": "10-26-2018",
                "projectID": "1488"
              },
              "cycle": {
                "name": "Default Cycle",
                "isLocked": false,
                "isArchived": false
              }
            }
            
    + Schema
    
             "Release" : {
                  "type" : "object",
                  "required" : [ "name", "projectID", "startDate", "targetDate" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Release"
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Start date of the Release"
                    },
                    "targetDate" : {
                      "type" : "string",
                      "description" : "Target date of the Release"
                    },
                    "projectID" : {
                      "type" : "string",
                      "description" : "ID of project in which the Release resides"
                    }
                  }
                },
             "Cycle" : {
                  "type" : "object",
                  "required" : [ "name" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "position" : 1,
                      "description" : "Name of Cycle"
                    },
                    "isLocked" : {
                      "type" : "boolean",
                      "position" : 2,
                      "description" : "Defaulted to false",
                      "default" : false
                    },
                    "isArchived" : {
                      "type" : "boolean",
                      "position" : 3,
                      "description" : "Defaulted to false",
                      "default" : false
                    }
                  }
                }
    

+ Response 200

    + Body

            {"success":true,"code":"AD.RELEASE_SUCCESSFUL","data":[{"ENTITY_KEY":"{RELEASE}","releaseID":3717,"releaseName":"Sample Release","builds":[{"name":"Default Cycle","isArchive":false,"buildID":7181}]}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## List [/rest/admin/release/list]
### Get List [POST]
API to list all releases

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|params|Parameters - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body
    
            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "params": {
                "projectID": "1493",
                "showArchive": true
              }
            }
            
    + Schema
    
             "Params" : {
                  "type" : "object",
                  "required" : [ "projectID" ],
                  "properties" : {
                    "projectID" : {
                      "type" : "string",
                      "description" : "Unique identifier of project"
                    }
                  }
                }
            
+ Response 200

    + Body

            {"data":[{"projectID":1493,"createdDate":"10-26-2018 08:21:57","releaseID":3720,"name":"Sample Release","description":"","NoofCycles":1,"isArchived":false,"targetDate":"10-26-2018 00:00:00","startDate":"10-16-2018 00:00:00","Associatedproject":"APIDocProject_cloned","isLocked":false,"isDefault":0,"filterStartDate":"2018-10-16T04:00:00","filterTargetDate":"2018-10-26T04:00:00"},{"projectID":1493,"createdDate":"10-26-2018 05:29:44","releaseID":3716,"name":"Default Release","description":"","NoofCycles":1,"isArchived":false,"Associatedproject":"APIDocProject_cloned","isLocked":false,"isDefault":1}],"total":2}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Archive [/rest/admin/release/archive]
### Archive [PUT]
API to archive release of the project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|releaseID|Ids of release to archive|Yes|
|projectID|Id of project to which the release belongs|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID and releaseID - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].projectID and data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "releaseID": [
                3724
              ],
              "projectID": "1494"
            }

+ Response 200

    + Body

            {"success":true,"code":"AD.ARCHIVE_SUCCESSFUL","data":[{"ENTITY_KEY":"{RELEASE}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Unarchive [/rest/admin/release/unarchive]
### Unarchive [PUT]
API to unarchive release of the project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|releaseID|Ids of release to Unarchive|Yes|
|projectID|Id of project to which the release belongs|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID and releaseID - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].projectID and data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
    <li><font size="3">While calling API 'Release/List', keep value of 'showArchive' attribute 'true' in request body.</li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "releaseID": [
                3724
              ],
              "projectID": "1494"
            }
            
+ Response 200

    + Body

            {"success":true,"code":"AD.UNARCHIVE_SUCCESSFUL","data":[{"ENTITY_KEY":"{RELEASE}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Delete [/rest/admin/release/delete]
### Delete [POST]
API to delete release of the project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|releaseID|Ids of release to delete|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the releaseID - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
    <li><font size="3">To delete the release, it has to be archived.
        <ul>
            <li><font size="3">To archive the release - Call API 'Release/Archive'</li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "releaseID" :[3724]
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.DELETE_SUCCESSFUL","data":[{"ENTITY_KEY":"{RELEASE}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
# Group Cycle
## Create  [/rest/admin/cycle]
### Create [POST]
API to add cycle

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|cycle|Provide cycle - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID and releaseID - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].projectID and data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
     <li><font size="3">Date format of the 'startDate' and 'targetDate' is depend on format that has been configured in qtm. 
        <ul>
            <li><font size="3">To verify/update the Date Format - Go to qtm -> User Profile </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "cycle": {
                "name": "Alpha_v1",
                "startDate": "10-16-2018",
                "targetDate": "10-20-2018",
                "projectID": "1494",
                "releaseID": 3729
              }
            }
            
    + Schema
    
            "CycleParams" : {
                  "type" : "object",
                  "required" : [ "name", "projectID", "releaseID" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Cycle"
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "To set StartDate of cycle"
                    },
                    "targetDate" : {
                      "type" : "string",
                      "description" : "To set TargetDate of cycle"
                    },
                    "projectID" : {
                      "type" : "string",
                      "description" : "Unique identifier of project in which the cycle is to be added"
                    },
                    "releaseID" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Unique identifier of release in which the cycle is to be added"
                    }
                  }
                }

+ Response 200

    + Body
    
            {"success":true,"code":"AD.CYCLE_SUCCESSFUL","data":[{"ENTITY_KEY":"{CYCLE}","buildId":7195}],"release":"{\"data\":[{\"releaseID\":3729,\"name\":\"Alpha Release\",\"description\":\"\",\"isArchived\":false,\"targetDate\":\"10-26-2018 00:00:00\",\"createdDate\":\"10-26-2018 22:52:15\",\"startDate\":\"10-16-2018 00:00:00\"}],\"total\":null}"}
           
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## List [/rest/admin/cycle/list]
### Get List [POST]
API to Fetch cycles

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|params|Parameters - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the releaseID - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute  -> data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "params": {
                "releaseID": 3729,
                "showArchive": true
              }
            }
            
    + Schema

            "Param" : {
                  "type" : "object",
                  "properties" : {
                    "releaseID" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "showArchive" : {
                      "type" : "boolean",
                      "default" : false
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"releaseID":3729,"createdDate":"10-27-2018 04:12:14","buildID":7198,"name":"Alpha_v3","isArchived":false,"targetDate":"10-20-2018 00:00:00","startDate":"10-16-2018 00:00:00","Associatedproject":"CodeSnippets","Associatedrelease":"Alpha Release","isLocked":false,"nonTestingDays":0,"totalTestinDays":0,"isDefault":0,"filterStartDate":"2018-10-16T04:00:00","filterTargetDate":"2018-10-20T04:00:00"},{"releaseID":3729,"createdDate":"10-26-2018 23:48:28","buildID":7197,"name":"Alpha_v2","isArchived":false,"targetDate":"10-20-2018 00:00:00","startDate":"10-16-2018 00:00:00","Associatedproject":"CodeSnippets","Associatedrelease":"Alpha Release","isLocked":false,"nonTestingDays":0,"totalTestinDays":0,"isDefault":0,"filterStartDate":"2018-10-16T04:00:00","filterTargetDate":"2018-10-20T04:00:00"},{"releaseID":3729,"createdDate":"10-26-2018 23:09:41","buildID":7195,"name":"Alpha_v1","isArchived":false,"targetDate":"10-20-2018 00:00:00","startDate":"10-16-2018 00:00:00","Associatedproject":"CodeSnippets","Associatedrelease":"Alpha Release","isLocked":false,"nonTestingDays":0,"totalTestinDays":0,"isDefault":0,"filterStartDate":"2018-10-16T04:00:00","filterTargetDate":"2018-10-20T04:00:00"},{"releaseID":3729,"createdDate":"10-26-2018 22:52:15","buildID":7193,"name":"Default Cycle","isArchived":false,"Associatedproject":"CodeSnippets","Associatedrelease":"Alpha Release","isLocked":false,"nonTestingDays":0,"totalTestinDays":0,"isDefault":0}],"total":4}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body
    
            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Archive [/rest/admin/cycle/archive]
### Archive [PUT]
API to archive cycle of release in the project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|buildID|Ids of cycle to archive|Yes|
|releaseID|Id of release to which the cycle belongs|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the buildID and releaseID - Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].buildID and data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "buildID": [
                7195
                ],
                "releaseID": 3729
            }

+ Response 200

    + Body

            {"success":true,"code":"AD.ARCHIVE_SUCCESSFUL","data":[{"ENTITY_KEY":"{CYCLE}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Unarchive [/rest/admin/cycle/unarchive]
### Unarchive [PUT]
API to unarchive cycle of release in the project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|buildID|Ids of cycle to unarchive|Yes|
|releaseID|Id of Release to which the cycle belongs|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the buildID and releaseID - Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].buildID and data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
    <li><font size="3">While calling API 'Cycle/List', keep value of 'showArchive' attribute 'true' in request body.</li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "buildID": [
                7195
                ],
                "releaseID": 3729
            }

+ Response 200

    + Body

            {"success":true,"code":"AD.UNARCHIVE_SUCCESSFUL","data":[{"ENTITY_KEY":"{CYCLE}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Delete [/rest/admin/cycle/delete]
### Delete [POST]
API to delete cycle

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|buildID|Ids of cycle to delete|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the buildID - Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li>
        </ul>
    </li>
    <li><font size="3">To delete the cycle, it has to be archived.
        <ul>
            <li><font size="3">To archive the cycle - Call API 'Cycle/Archive'</li>
        </ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "buildID": [
                7195
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"AD.DELETE_SUCCESSFUL","data":[{"ENTITY_KEY":"{CYCLE}"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

# Group Build          
## Create [/rest/admin/drops]
### Create [POST]
API to create build

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|dropID|Send '0' to create drop|Yes|
|name|Name of Build|Yes|
|Description|Description of Build|No|
|grdRelCyc|Add Release Cycle to the Build - Refer JSON Schema|Yes|

<ul>
    <li><font size="3">To get the cyclID, relID and name - Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].buildID, data[&#x3C;index&#x3E;].releaseID and data[&#x3C;index&#x3E;].name</li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "dropID": "0",
              "name": "Alpha Patch Build",
              "Description": "Alpha Patch Build Description",
              "grdRelCyc": [
                {
                  "name": "Alpha_v2",
                  "scope": "cycle",
                  "default": "NO",
                  "cyclID": 7197,
                  "relID": 3729
                },
                {
                  "name": "Alpha_v3",
                  "scope": "cycle",
                  "default": "NO",
                  "cyclID": 7198,
                  "relID": 3729
                }
              ]
            }
            
    + Schema
    
             "GrdRelCyc" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "scope" : {
                      "type" : "string"
                    },
                    "cyclID" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "relID" : {
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "default" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {"success":true,"code":"AD.ADD_DROP_SUCCESS","data":[{"dropID":1320}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## List [/rest/admin/drop/list]
### Get List [POST]
List of all builds in the project

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|showArchive|Send 'true' to display archived Builds as well|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" :0,
                 "limit" :50,
                 "page" :1,
                 "showArchive" :true
             }

+ Response 200

    + Body

            {"data":[{"dropID":1417,"name":"Alpha Patch Build24","createdDate":"2018-10-27T09:02:55","Associatcycle":2,"isArchieved":false,"assocReleaseName":"Alpha Release","countOfReleases":1},{"dropID":1416,"name":"Alpha Patch Build23","createdDate":"2018-10-27T09:02:34","Associatcycle":2,"isArchieved":false,"assocReleaseName":"Alpha Release","countOfReleases":1},{"dropID":1415,"name":"Alpha Patch Build12","createdDate":"2018-10-27T08:48:49","Associatcycle":2,"isArchieved":false,"assocReleaseName":"Alpha Release","countOfReleases":1},{"dropID":1414,"name":"Alpha Patch Build11","createdDate":"2018-10-27T08:48:25","Associatcycle":2,"isArchieved":false,"assocReleaseName":"Alpha Release","countOfReleases":1},{"dropID":1413,"name":"Alpha Patch Build1","createdDate":"2018-10-27T08:48:00","Associatcycle":2,"isArchieved":false,"assocReleaseName":"Alpha Release","countOfReleases":1},{"dropID":1412,"name":"Alpha Patch Build","createdDate":"2018-10-27T08:44:49","Associatcycle":2,"isArchieved":false,"assocReleaseName":"Alpha Release","countOfReleases":1}],"total":6}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Archive [/rest/admin/drop/archive]
### Archive [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|dropIds|Ids of builds to archive|Yes|

<ul>
    <li><font size="3">To get the dropIds - Call API 'Build/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].dropID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "dropIds": [
                1417
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"AD.ARCHIVED_DROP_SUCCESSFUL"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Unarchive [/rest/admin/drop/unarchive]
### Unarchive [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|dropIds|Ids of builds to unarchive|Yes|

<ul>
    <li><font size="3">To get the dropIds - Call API 'Build/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].dropID </li>
        </ul>
    </li>
     <li><font size="3">While calling API 'Build/List', keep value of 'showArchive' attribute 'true' in request body.</li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "dropIds": [
                1417
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"AD.UNARCHIVED_DROP_SUCCESSFUL"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body
    
            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Get details [/rest/admin/drop/read]
### Get details [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|Unique identifier of build to get its details|Yes|

<ul>
    <li><font size="3">To get the dropIds - Call API 'Build/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].dropID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "id" :1412
             }

+ Response 200

    + Body

            {"data":[{"id":"1412","name":"Alpha Patch Build","Description":"Alpha Patch Build Description","Defaultroleid":""}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
# Group Platform
## Create/Update [/rest/admin/platform]
### Create [POST]
API to create platform

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|name|Name of Platform|Yes|
|platformID|Send '0' to create a new Platform |Yes|
|platformType|Send 'single' to add/update new Platform |Yes|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "name" :"Linux",
                 "platformID" :0,
                 "platformType" : "single"
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.ADD_PLATFORM_SUCCESSFUL","platformID":4839}
           
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Update [/rest/admin/platform]
### Update [POST]
API to Update platform

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|name|Name of Platform|Yes|
|platformID|platformID of the platform to be edited |Yes|
|platformType|Send 'single' to update new Platform |Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the platformID - Call API 'Platform/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].platformID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "name" :"Linux_edited",
                 "platformID" :4839,
                 "platformType" : "single"
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.UPDATE_PLATFORM_SUCCESSFUL","platformID":4839}
           
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## List [/rest/admin/platform/list]
### Get List [POST]
API to list platforms

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|sort|Sort parameters - Refer JSON Schema|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" :0,
                 "limit" :50,
                 "page" :1,
                 "sort": "[{\"property\":\"platformID\",\"direction\":\"DESC\"}]"
             }
             
    + Schema
    
            "Sort" : {
                  "type" : "object",
                  "properties" : {
                    "property" : {
                      "type" : "string"
                    },
                    "direction" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"platformID":4837,"createdDate":"2018-10-27T01:50:01","name":"No Platform","isPlatformArchived":false,"Case":"","projectID":1494,"platformScope":1,"isProjectLevel":1,"isReleaseLevel":1}],"total":1}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            

# Group Users           
## List [/rest/admin/user/list]
### Get List [POST]
API to show list of users

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|extparams|Provide extparams - Refer JSON Schema|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "extparams": {
                "showInActive": true
              }
            }
            
    + Schema
    
             "ExtraParams" : {
                  "type" : "object",
                  "properties" : {
                    "showInActive" : {
                      "type" : "boolean",
                      "description" : "Send true to see deactivated users as well(defaulted to false)",
                      "default" : false
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"userID":1358,"loginId":"krishna","userAlias":"krishna","firstName":"krishna","lastName":"suthar","email":"krishna.suthar@gmail.com","isActive":true,"authType":"QMETRY","userType":1,"isSysAdmin":false},{"userID":1345,"loginId":"Testuser_u","userAlias":"Testuser_a","firstName":"Testuser_F","lastName":"Testuser_L","email":"Testuser@test.com","isActive":true,"authType":"QMETRY","userType":1,"isSysAdmin":false}],"total":63}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}



## Activate/Deactivate [/rest/admin/user/deactivate]
### Change state [PUT]
API to deactivate user

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|userID|Unique identifier of user to be deactivated|Yes|
|isActive|Send 'false' to deactivate user and Send 'true' to activate the user|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the userID - Call API 'Users/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].userID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "userID" :1358,
                 "isActive" :false
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.DEACTIVATE_USER_SUCCESS"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Delete [/rest/admin/user/delete]
### Delete [POST]
API to delete user

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|userID|Unique identifier of user to delete|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the userID - Call API 'Users/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].userID </li>
        </ul>
    </li>
    <li><font size="3">To delete the user, it has to be deactivated.
        <ul>
            <li><font size="3"> To deactivate the user - Call API 'Users/Activate/Deactivate' and keep the value of 'isActive' parameter 'false' </li>
        </ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "userID" :1358
             }

+ Response 200

    + Body

            {"success":true,"code":"AD.DELETE_USER_SUCESS"}
            
+ Response 400

    + Body

            {"success":false,"code":"AD.DELETE_USER_FAIL"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            


# Group Requirement
## Create/Update Folder [/rest/requirements/folders]
### Create [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|parentId|Folder ID to which new folder is to be added |Yes|
|name|Name of the Folder to be added|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the parentId - 
        <ul>
            <li><font size="3"> If folder is to be added into the root folder - Call API - 'Admin/Get info Service'
                <ul><li><font size="3"> From the response, get value of following attribute -> rootFolders.RQ.id </li></ul>
            </li>    
            <li><font size="3"> If folder is to be added into the other folder - Call API - 'Requirement/List of folders'
                <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li></ul>
            </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default
            
    + Body 

            {
              "parentId": 12646,
              "name": "CodeSnippetsTest"
            }
            
+ Response 200

    + Body

            {"success":true,"code":"CO.ADD_FOLDER_SUCCESS","data":[{"id":12650,"parentId":12646,"name":"CodeSnippetsTest"}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Update [/rest/requirements/folders]
### Update [PUT]

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|name|New name of the Folder|Yes|
|folderId|ID of the folder that is to be updated|Yes|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the folderId - Call API - 'Requirement/List of folders'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default
            
    + Body 

            {
              "name": "CodeSnippetsTest_updated",
              "folderId": 12650
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.UPDATE_FOLDER_SUCCESS","data":[{"id":12650,"name":"CodeSnippetsTest_updated","scope":"project"}]}

+ Response 400

    + Body

            {"success":false,"code":"UPDATE_FOLDER_FAIL"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## List of folders [/rest/requirements/tree]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqFolderID|Folder ID of which sub folders needs to be accessed|Yes|
|sort|Sort parameters - Refer JSON Schema|No|
|hideFolders|Send 'false' if empty folders are also to be fetched, 'true' otherwise. |No|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqFolderID - 
        <ul>
            <li><font size="3"> Call this API recursively until ID of targeted folder is found.</li>    
            <li><font size="3"> To start with, use root folder ID. To get root folder ID - Call API 'Admin/Get info Service'
                <ul><li><font size="3"> From the response, get value of following attribute -> rootFolders.RQ.id </li></ul>
            </li>
        </ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body
    
            {
              "rqFolderID": 12650,
              "sort": "[{\"property\":\"name\",\"direction\":\"ASC\"}]",
              "hideFolders": false
            }

    + Schema
    
            "Sort" : {
              "type" : "object",
              "properties" : {
                "property" : {
                  "type" : "string"
                },
                "direction" : {
                  "type" : "string"
                }
              }
            }

+ Response 200

    + Body

            {"data":[{"id":12652,"name":"CodeSnippetsTest_1","hasChildren":0},{"id":12653,"name":"CodeSnippetsTest_2","hasChildren":0}],"total":2}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 403

    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
            <TITLE>ERROR: The request could not be satisfied</TITLE>
            </HEAD><BODY>
            <H1>403 ERROR</H1>
            <H2>The request could not be satisfied.</H2>
            <HR noshade size="1px">
            Bad request.
            
            <BR clear="all">
            <HR noshade size="1px">
            <PRE>
            Generated by cloudfront (CloudFront)
            Request ID: stFPjGLyz9p-QzYaJY6EaeGjEG7_L4s9ZWuxGATmESXOvqEn1Uf3aw==
            </PRE>
            <ADDRESS>
            </ADDRESS>
            </BODY></HTML>

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Delete Folder [/rest/requirements/folders/delete]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|folderId|ID of the folder that is to be Deleted|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the folderId - Call API - 'Requirement/List of folders'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default
            
    + Body 

            {
              "folderId": 12651
            }
            
+ Response 200

    + Body

            {"success":true,"code":"CO.OPERATION_SUCCESS","data":[{"id":12646}]}

+ Response 400

    + Body

            {"success":false,"code":"DELETE_FOLDER_FAIL"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}


## Create/Update [/rest/requirements]
### Create [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqFolderId|FolderId of the folder in which Requirement is to be added|Yes|
|name|Summary of the Requirement|Yes|
|scope|Scope of the Requirement, possible values project,release,cycle,build|Yes|
|updateWithVersion|Send 'true' is RQ version is to be added and 'false' if new RQ is to be added.|No|
|updateVersionFlag|For new RQ value is '0' and to add version value if '3'|No|
|priority|Priority of Requirement|No|
|component|Label of Requirement|No|
|requirementState|Status of Requirement|No|
|description|Description of Requirement|No|
|owner|Owner of Requirement|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqFolderID - Call API - 'Requirement/List of folders'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the priority - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  customListObjs.issuePriority[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the owner - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  ustomListObjs.users[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the component - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  customListObjs.component[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the requirementState - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute -> customListObjs.requirementState[&#x3C;index&#x3E;].id  </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "rqFolderId": "12646",
              "updateWithVersion": false,
              "updateVersionFlag": 0,
              "name": "As a user, I want to withdraw money",
              "scope": "project",
              "priority": [
                189317
              ],
              "component": [
                189375
              ],
              "requirementState": [
                189332
              ],
              "description": "Money withdrawal Feature",
              "owner": 606
            }

+ Response 200

    + Body

            {"success":true,"code":"RQ.ADD_ENTITY_SUCCESS","data":[{"id":139282,"entityKey":"COD-RQ-7","rqFolderId":12646}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
### Update [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqId|ID of the requirement to be updated|Yes|
|rqVersionId|Version id of the requirement to be updated|Yes|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqId and rqVersionId - Call API 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].rqId and data[&#x3C;index&#x3E;].rqVersionId </li></ul>
    </li>
    <li><font size="3">Along with 'rqId' and 'rqVersionId', pass those fields which are to be updated. Refer 'Create Requirement' API to get idea of fields.
        <ul><li><font size="3"> Ex. - Update requirement Priority <br> { <br>
              "rqId": 139287, <br>
              "rqVersionId": 237302, <br>
              "priority": 189316 <br>
            }
            </li>
        </ul>  
        <ul><li><font size="3"> Ex. - Update requirement Status Type <br> { <br>
              "rqId": 139287, <br>
              "rqVersionId": 237302, <br>
              "requirementState": 189334 <br>
            }
            </li>
        </ul>  
      </li>      
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "rqId": 139291,
              "rqVersionId": 237308,
              "name": "As a user, I want to withdraw money_Updated"
            }

+ Response 200

    + Body

            {"success":true,"code":"RQ.UPDATE_ENTITY_SUCCESS","data":[{"entityKey":"COD-RQ-10","rqVersionID":237302,"rqVersion":1,"updatedByAlias":"Nidhi (Nidhi)","updatedDate":"10-29-2018 08:23:42"}]}
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}


## Fetch Requirements [/rest/requirements/list]
### Get List [POST]
Get list of requirements of a particular folder

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|rqFolderID|FolderId of Requirement whose requirements has to be listed|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqFolderID - Call API - 'Requirement/List of folders'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li></ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1,
                 "rqFolderID" : 12646
             }

+ Response 200

    + Body

            {"data":[{"rqBuildMapID":0,"archivedTcTotal":0,"unarchivedTcTotal":1,"projectID":1494,"rqId":139277,"rqFolderId":12650,"folderPath":"/CodeSnippets/CodeSnippetsTest_updated","entityKey":"COD-RQ-2","associatedVersion":1,"latestVersion":1,"linkedTcCount":0,"linkedDfCount":0,"createdSystem":"QMetry","rqVersionID":237289,"rqVersion":1,"name":"As a user, I want to withdraw money","description":"","attachmentCount":0,"createdDate":"10-27-2018 11:46:25","createdBy":606,"createdByLoginId":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","isArchived":false,"isVersionArchived":0,"plannerFlag":false,"projectName":"CodeSnippets","createdByAlias":"Nidhi","rqVersionList":"[{\"isArchived\":0,\"rqVersion\":1,\"rqVersionID\":237289,\"rqVersionName\":\"Version-1\"}]"},{"rqBuildMapID":105110,"priority":189316,"priorityAlias":"Critical","component":"[189375]","componentAlias":"Not Available","archivedTcTotal":0,"unarchivedTcTotal":1,"projectID":1494,"rqId":139276,"rqFolderId":12646,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-1","associatedVersion":1,"latestVersion":1,"linkedTcCount":0,"linkedDfCount":0,"createdSystem":"QMetry","rqVersionID":237288,"rqVersion":1,"buildID":"7197","cycleNameList":"Alpha_v2","releaseID":"3729","releaseNameList":"Alpha Release","name":"As a user, I want to transfer money.","description":"Money transfer feature.","attachmentCount":0,"createdDate":"10-27-2018 11:15:34","createdBy":606,"createdByLoginId":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","ownerId":606,"owner":"Nidhi","isArchived":false,"isVersionArchived":0,"plannerFlag":false,"projectName":"CodeSnippets","requirementState":189332,"requirementStateAlias":"New","createdByAlias":"Nidhi","rqVersionList":"[{\"isArchived\":0,\"rqVersion\":1,\"rqVersionID\":237288,\"rqVersionName\":\"Version-1\"}]"}],"total":2,"UDFTypeData":{}}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}


            
## Fetch Requirements for Bulk Opeartion. [/rest/requirements/listForBulkOperation]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|folderPath|FolderPath of folder whose requirements are to be listed|Yes|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "folderPath" : "/CodeSnippets",
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"rqID":138100,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-25","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":236109,"rqVersion":1,"name":"Requirement mtmquohdaag","description":"Description","createdDate":"10-13-2018 05:51:23","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":138098,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-23","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":236107,"rqVersion":1,"name":"Requirement 23sjp9v0ojt","description":"Description","createdDate":"10-13-2018 05:47:01","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":138097,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-22","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":236106,"rqVersion":1,"name":"Requirement 3htp43qbtin","description":"Description","createdDate":"10-13-2018 05:46:30","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":138096,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-21","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":236104,"rqVersion":1,"name":"Requirement a5r8lm2ahl8","description":"Description","createdDate":"10-13-2018 05:38:13","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":138095,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-20","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":236103,"rqVersion":1,"name":"Requirement gkkyng5mq7m","description":"Description","createdDate":"10-13-2018 05:36:19","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":138051,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-17","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":236058,"rqVersion":1,"name":"sampl1","description":"","createdDate":"10-13-2018 04:46:20","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":121596,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-16","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":219601,"rqVersion":1,"name":"Requirement eqvjf0xkwr","description":"Description","createdDate":"10-12-2018 08:46:19","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":119696,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-15","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":217698,"rqVersion":1,"name":"q","description":"","createdDate":"10-03-2018 02:35:32","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":119675,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-14","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":217677,"rqVersion":1,"name":"q1","description":"","createdDate":"10-02-2018 12:00:30","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"},{"projectID":1098,"rqID":119672,"folderPath":"/CodeSnippets","entityKey":"COD-RQ-13","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":217674,"rqVersion":1,"name":"q","description":"","createdDate":"10-02-2018 11:17:49","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":false,"plannerFlag":false,"projectName":"CodeSnippets"}],"total":13,"UDFTypeData":{}}

+ Response 400

    + Body

            {"success":false,"code":"CO.MANDATORY_FIELDS_MISSING"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
 
             
## List versions [/rest/requirements/getVersionDetail]
### Get detail [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|rqID|Id of Requirement|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqID - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" :0,
                 "limit" :50,
                 "page" :1,
                 "rqID" :139277
             }

+ Response 200

    + Body

            {"data":[{"projectID":1494,"rqID":139277,"folderPath":"/CodeSnippets/CodeSnippetsTest_updated","entityKey":"COD-RQ-2","latestUnarchivedVersion":2,"latestVersion":2,"rqVersionID":237290,"rqVersion":2,"name":"As a user, I want to withdraw money","description":"Money withdrawal feature","createdDate":"10-27-2018 22:18:38","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":0,"plannerFlag":false,"projectName":"CodeSnippets","attachmentCount":0},{"projectID":1494,"rqID":139277,"folderPath":"/CodeSnippets/CodeSnippetsTest_updated","entityKey":"COD-RQ-2","latestUnarchivedVersion":2,"latestVersion":2,"rqVersionID":237289,"rqVersion":1,"name":"As a user, I want to withdraw money","description":"","createdDate":"10-27-2018 11:46:25","createdBy":606,"createdByAlias":"Nidhi","isArchived":false,"isVersionArchived":0,"plannerFlag":false,"projectName":"CodeSnippets","attachmentCount":0}],"total":2}

+ Response 400

    + Body

            {"success":false,"code":"CO.MANDATORY_FIELDS_MISSING"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## List Detail [/rest/requirements/detail/data]
### Get detail [POST]
To view particular requirement's all fields

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|Id of Requirement|Yes|
|version|Version number of Requirement|Yes|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the id - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
    <li><font size="3">To get the version - Call API - 'requirement/List Versions'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqVersion </li></ul>
    </li>
</ul>



+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "id": "139276",
              "version": "1"
            }

+ Response 200

    + Body

            {"cycleIdsAsVersion":"7197","createddate":"2018-10-27T15:15:34","isArchived":false,"trackerType":"","description":"Money transfer feature.","fixVersion":"","rqId":139276,"RqFolderID":12646,"createdby":"Nidhi","state":189332,"releaseIdsAsVersion":"3729","owner":606,"rqVersionID":237288,"entityKey":"COD-RQ-1","statevalue":"New","priority":189316,"owneralias":"Nidhi","priorityvalue":"Critical","component":[189375],"name":"As a user, I want to transfer money.","isVersionArchived":false,"attachmentCount":0,"componentvalue":["Not Available"],"projectId":1494}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
           
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Archive/Unarchive [/rest/requirements/archiveEntity]
### Change Requirement state [POST]
API To archive requirement based on specific version or all version

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|entityIds|An array of requirementId or requirementVersionId|Yes|
|isArchived|Send True to archive the rquirement and false to unarchive requirement|Yes|
|isEntityVersion|True for archive specific version of Requirement, false otherwise|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityIds(requirementId) - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
    <li><font size="3">To get the entityIds(requirementVersionId) - Call API - 'requirement/List Versions'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqVersionID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "entityIds" : [138054],
                "isArchived" : true,
                "isEntityVersion" : false
            }
            
+ Response 200

    + Body

            {"success":true,"code":"CO.ENTITY_ARCHIVE_SUCCESS","data":[{"ENTITY_NAME":"{REQUIREMENT}","ENTITY_KEY":""}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}sssss

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Delete - Background Process [/rest/requirements/delete]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqId|Array of Requirements ID|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqId - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Automation API key>
            scope: default

    + Body

             {
                 "rqId" : 139544
             }

+ Response 200

    + Body

            {"success":true,"code":"RQ.DELETE_ENTITY_SUCCESS","data":[{"rqId":139544,"entityKey":"COD-RQ-19"}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Delete - Foreground Process [/rest/requirements/deleteEntity]
### Delete [POST]
API To Delete Requirement

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityIds|Array of Requirements ID|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityIds - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
    <li><font size="3">Archive the requirement in order to delete. 
        <ul>
            <li><font size="3"> To Archive the requirement - Call API 'Requirement/Archive/Unarchive' 
                <ul><li><font size="3"> Keep the value of 'isArchived' - False</li></ul>
            </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityIds": [
                139277
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"RQ.DELETE_ENTITY_SUCCESS","data":[{"entityKey":""}]}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}
             
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Delete Version [/rest/requirements/deleteEntityVersion]
### Delete [POST]
API To Delete Requirement Version

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Requirement|Yes|
|entityVersions|An array of version number of the Requirement|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
    <li><font size="3">To get the entityVersions - Call API - 'requirement/List Versions'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqVersion </li></ul>
    </li>
    <li><font size="3">Archive the requirement version in order to delete. 
        <ul>
            <li><font size="3"> To Archive the requirement version - Call API 'Requirement/Archive/Unarchive' 
                <ul><li><font size="3"> Send 'requirementVersionId' as a values to 'entityIds', Keep the value of 'isArchived' - False and value of 'isEntityVersion' - true </li></ul>
            </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityId" :139276,
                 "entityVersions" :[2]
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.ENTITY_VERSION_DELETE_SUCCESS","data":[{"ENTITY-NAME":"Requirement version(s)"}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Link issues [/rest/requirements/link/issues]
### Link [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqID|EntityKey of Requirement|Yes|
|dfIDs|IDs of Issues to be linked with Requirement|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqID - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li></ul>
    </li>
    <li><font size="3">To get the dfIDs - Call API - 'Isuue/List of issues'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "rqID": "COD-RQ-1",
              "dfIDs": [
                118132
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS"}

+ Response 400

    + Body

             {"success":false,"code":"CO.LINK_ENTITY_FAIL"}
             
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}


            
## Unlink Issue [/rest/requirements/unlink/issues]
### Unlink [PUT]
API to unlink issue from requirement

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|dfIDs|An array of issue Ids|Yes|
|rqID|EntityKey of Requirement|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqID - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li></ul>
    </li>
    <li><font size="3">To get the dfIDs - Call API - 'Isuue/List of issues'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body
    
            {
              "rqID": "COD-RQ-1",
              "dfIDs": [
                118132
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS"}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}
             
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
 
           
## Link TestCases [/rest/requirements/link/testcases]
### Link TestCases [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqID|Entitykey of the Requirement|Yes|
|rqVersionId|VersionId of Requirement|Yes|
|tcVersionIds|An array of testcase version's Id|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqID and rqVersionId - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].entityKey and data[&#x3C;index&#x3E;].rqVersionID</li></ul>
    </li>
    <li><font size="3">To get the tcVersionIds - Call API - 'Testcase/List version detail'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersionID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "rqID": "COD-RQ-1",
              "rqVersionId": 237288,
              "tcVersionIds": "1007340,1007339"
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":{"archivedTcTotal":0,"unarchivedTcTotal":2}}

+ Response 400

    + Body

            {"success":false,"code":"CO.LINK_ENTITY_FAIL"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
            
            
## Unlink Testcase [/rest/requirements/unlink/testcases]
### Unlink Testcase [PUT]
API to unlink testcase(s) from requirement

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqID|Entitykey of the Requirement|Yes|
|rqVersionId|VersionId of Requirement|Yes|
|tcVersionIds|An array of testcase version's Id|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqID and rqVersionId - Call API - 'Requirement/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].entityKey and data[&#x3C;index&#x3E;].rqVersionID</li></ul>
    </li>
    <li><font size="3">To get the tcVersionIds - Call API - 'Testcase/List version detail'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersionID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "rqID": "COD-RQ-1",
              "rqVersionId": 237288,
              "tcVersionIds": "1007340,1007339"
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS","data":{"archivedTcTotal":0,"unarchivedTcTotal":0}}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
 
 
## Fetch Testcases [/rest/requirements/testcase/list]
### Get List [POST]
API to get list of testcases in requirement

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqID|Id of Requirement|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the rqId - Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1,
                 "rqID" : 139276   
             }

+ Response 200

    + Body

            {"data":[{"createdById":606,"projectID":1494,"createdByLoginId":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","createdByAlias":"Nidhi","tcEntityKey":"COD-TC-2","isApprovalWorkflowEnabled":false,"tcId":594294,"tcName":"Money transfer TC 2","tcVersionID":1007339,"tcVersion":1,"testingTypeName":"Manual","attachmentCount":0,"tcFolderId":70507,"state":1,"isTCArchived":false,"isVersionArchived":false,"buildID":7187},{"createdById":606,"projectID":1494,"createdByLoginId":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","createdByAlias":"Nidhi","tcEntityKey":"COD-TC-3","isApprovalWorkflowEnabled":false,"tcId":594295,"tcName":"Money transfer TC 3","tcVersionID":1007340,"tcVersion":1,"testingTypeName":"Manual","attachmentCount":0,"tcFolderId":70507,"state":1,"isTCArchived":false,"isVersionArchived":false,"buildID":7187}],"total":2}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

             
## Fetch Requirements linked to Issue [/rest/requirements/list/forIS]
### Get List [POST]
Requirement list getting based on particular id of issue

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|getLinked|True to get only those requirements that are linked with this Issue, false to get those requirements which are not linked with this Issue|No|
|dfID|Id of issue|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the dfID - Call API - 'Isuue/List of issues'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "getLinked": true,
              "dfID": 118132
            }

+ Response 200

    + Body

            {"data":[{"priority":189316,"priorityAlias":"Critical","componentAlias":"Not Available","projectID":1494,"rqID":139276,"entityKey":"COD-RQ-1","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":237288,"rqVersion":1,"cycleNameList":"Alpha_v2","releaseNameList":"Alpha Release","name":"As a user, I want to transfer money.","description":"Money transfer feature.","attachmentCount":0,"ownerId":606,"isArchived":false,"isVersionArchived":0,"projectName":"CodeSnippets","requirementStateAlias":"New","createdByAlias":"Nidhi"}],"total":1}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
  
              
## Fetch Requirements linked to Testcase [/rest/requirements/list/forTC]
### Get List [POST]
Requirement list getting based on particular id of testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|tcID|Id of testcase|No|
|getLinked|True to get only those requirements that are linked with this Testcase, false to get those requirements which are not linked with this Testcase|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcID - Call API - 'Testcase/Fetch Testcase list'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "start": 0,
              "limit": 50,
              "page": 1,
              "tcID": 594294,
              "getLinked": true
            }
             
+ Response 200

    + Body

            {"data":[{"priority":189316,"priorityAlias":"Critical","componentAlias":"Not Available","projectID":1494,"rqID":139276,"entityKey":"COD-RQ-1","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":237288,"rqVersion":1,"cycleNameList":"Alpha_v2","releaseNameList":"Alpha Release","name":"As a user, I want to transfer money.","description":"Money transfer feature.","attachmentCount":0,"ownerId":606,"isArchived":false,"isVersionArchived":0,"projectName":"CodeSnippets","requirementStateAlias":"New","createdByAlias":"Nidhi"}],"total":1}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
          
## Fetch Requirements linked to TestSuite [/rest/requirements/list/forTS]
### Get List [POST]
Requirement list for TestSuite

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"priority":189316,"priorityAlias":"Critical","componentAlias":"Not Available","projectID":1494,"rqID":139276,"entityKey":"COD-RQ-1","latestUnarchivedVersion":1,"latestVersion":1,"rqVersionID":237288,"rqVersion":1,"cycleNameList":"Alpha_v2","releaseNameList":"Alpha Release","summary":"As a user, I want to transfer money.","description":"Money transfer feature.","attachmentCount":0,"ownerId":606,"isArchived":false,"isVersionArchived":0,"projectName":"CodeSnippets","requirementStateAlias":"New","createdByAlias":"Nidhi"}],"total":1}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}
             
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Get list of users of project [/rest/requirements/list/projectUsers]
### Get List[POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|projectId|ProjectId|Yes|
|rqId|Id of Requirement|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the projectID - Call API - 'Projects/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li></ul>
    </li>
    <li><font size="3">To get the rqId - Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "projectId" :1494,
                 "rqId" :139276
             }

+ Response 200

    + Body

            {"bddRepos":[],"data":[{"userID":"3","firstName":"kunal","lastName":"gandhi","userAlias":"kunal","userEmail":"kunal.gandhi@infostretch.com","isWatcher":false},{"userID":"606","firstName":"Nidhi","lastName":"Shah","userAlias":"Nidhi","userEmail":"nidhi.shah@qmetry.com","isWatcher":true}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
           
## View Version Info [/rest/requirements/versions/{id}]
### View [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Requirement|Yes|
|filter|filter - Refer JSON Schema|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId - Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Parameters 

    + id : `139276` (required, integer) - Id of Requirement
        + Default: `139276`

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityId": "139276",
              "filter": "[{\"value\":[0,1],\"type\":\"list\",\"field\":\"isArchived\"}]"
            }
            
    + Schema
    
              "Filter" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    },
                    "comparison" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    }
                  }
                }


+ Response 200

    + Body

            {"data":[{"versionNumber":1,"versionId":236124,"iconCls":"green-latest","versionName":null,"createdUserName":"Nidhi","updatedUserName":null,"buildName":null,"createdDate":"10-15-2018 01:11:58","updatedDate":null,"versionComment":null,"watchers":"606","isArchived":false}],"total":1,"totalWatchers":1,"isCurrentUserWatcher":true}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Add Scope [/rest/requirements/scope/add]
### Add[POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Requirement|Yes|
|sourceBuildId|BuildId of the Cycle associated with Release|Yes|
|sourceProjectId|ProjectId of the Requirement|Yes|
|sourceReleaseId|ReleaseId of the Project|Yes|
|sourceScope|Scope for the requirement - project, release, build, cycle|Yes|
|entityType|Entity type for the requirement, the default value is RQ|Yes|
|releaseCycleMapping|An array of release, cycle & version mapping - Refer JSON Schema|Yes|
|opType|Operation types - possible values - (otherscope, current)|Yes|
|withVersion|Scope added with the version or not|No|
|updateFlag|This flag for the scope update or not|No|
|destinationProjectId|ProjectId based on operation type, possible value likes current project or another project|Yes|
|entityData|An array of entityId & version for the Requirement - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId and version- Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].rqId and data[&#x3C;index&#x3E;].rqVersionID </li></ul>
    </li>
    <li><font size="3">To get the sourceBuildId and cycle - Call API - 'Cycle/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li></ul>
    </li>
    <li><font size="3">To get the sourceReleaseId and release - Call API - 'Release/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li></ul>
    </li>
    <li><font size="3">To get the sourceProjectId and destinationProjectId - Call API - 'Projects/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityId": 139287,
              "sourceBuildId": 7187,
              "sourceProjectId": 1494,
              "sourceReleaseId": 3723,
              "sourceScope": "project",
              "entityType": "RQ",
              "releaseCycleMapping": [
                {
                  "release": 3729,
                  "cycle": [
                    7197
                  ],
                  "version": 1
                }
              ],
              "opType": "otherScope",
              "withVersion": true,
              "updateFlag": false,
              "destinationProjectId": 1494,
              "entityData": [
                {
                  "entityId": 139287,
                  "version": 237302
                }
              ]
            }
            
    + Schema
    
             "ReleaseCycleMapping" : {
                  "type" : "object",
                  "required" : [ "cycle", "release", "version" ],
                  "properties" : {
                    "release" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Id of Release"
                    },
                    "cycle" : {
                      "type" : "array",
                      "description" : "An array of cycle's Id",
                      "items" : {
                        "type" : "integer",
                        "format" : "int32"
                      }
                    },
                    "version" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Number of the version"
                    }
                  }
                },
                
              "EntityData" : {
                  "type" : "object",
                  "required" : [ "entityId", "version" ],
                  "properties" : {
                    "entityId" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Id of entity"
                    },
                    "version" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "entity versionId"
                    }
                  }
                }

+ Response 200

    + Body

            {"success":true,"code":"CO.REL_CYCLE_LINK_SUCCESS","data":[{}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Fetch Scope [/rest/requirements/scope/list]
### Get List [PUT]
To view list of scope(Release/Cycle) for requirement

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|entityID|Id of Requirement|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId - Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1,
                 "entityID" : 139287
             }

+ Response 200

    + Body

            {"data":[{"requirementId":139287,"releaseName":"Alpha Release","cycleName":"Alpha_v2","releaseID":3729,"buildID":7197,"version":1,"isArchived":false,"isCycleArchived":false,"isReleaseArchived":false}],"total":1}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Remove Scope [/rest/requirements/scope/remove]
### Remove [POST]
API to remove scope(release/cycle) from requirement

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|opType|Operation types possible value likes currentBuild,allBuildsInRelease,allReleases|Yes|
|sourceProjectId|ProjectId of Requirement|Yes|
|sourceReleaseId|ReleaseId of the Project|Yes|
|sourceBuildId|BuildId of the Cycle associated with Release|Yes|
|entityType|Entity type for the requirement, the default value is RQ|Yes|
|entityId|Id of Requirement|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId- Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
    <li><font size="3">To get the sourceBuildId - Call API - 'Cycle/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li></ul>
    </li>
    <li><font size="3">To get the sourceReleaseId - Call API - 'Release/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li></ul>
    </li>
    <li><font size="3">To get the sourceProjectId - Call API - 'Projects/List
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "opType": "currentBuild",
              "sourceProjectId": 1494,
              "sourceReleaseId": 3729,
              "sourceBuildId": 7197,
              "entityType": "RQ",
              "entityId": 139287,
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.REMOVE_FROM_SCOPE_PASS"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
# Group Issue

## Create/Update [/rest/issues]
### Create [POST]
API to create internal Issue

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|sync_with|'igConfigurationID' of Jira or 'internalTrackerId' if external Project isn't configured|Yes|
|issueType|Type ID for the issue that is being added e.g. Bug, Enhancement, New Feature, etc. depending on the value stored for the list.|Yes|
|issuePriority|PriorityId of Issue|Yes|
|issueOwner|OwnerId of Issue|No|
|summary|provide summary|Yes|
|component|LabelId of Issue|No|
|affectedRelease|Release Id of Issue|No|
|environment|Enter environment within which the issue was detected|No|  
|description|Enter text describing the issue|No|
|integration||No|
|removeSteps||No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the sync_with (Value for igConfigurationID or internalTrackerId) - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute respectively -> customListObjs.component[&#x3C;index&#x3E;].igConfigurationID and internalTrackerId</li></ul>
    </li>
    <li><font size="3">To get the issueType - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  customListObjs.issueType[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the issuePriority - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  customListObjs.issuePriority[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the issueOwner - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  ustomListObjs.users[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the component - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute ->  customListObjs.component[&#x3C;index&#x3E;].id </li></ul>
    </li>
    <li><font size="3">To get the affectedRelease - Call API 'Admin/Get info Service'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "sync_with": 2,
              "issueType": 189337,
              "issuePriority": 189340,
              "issueOwner": 606,
              "removeSteps": [],
              "integration": [],
              "summary": "Money withdrawal is success even if insufficient amount",
              "priority": [
                189340
              ],
              "type": [
                189337
              ],
              "component": [
                189375
              ],
              "owner": [
                606
              ],
              "release": [
                3729
              ],
              "description": "Money withdrawal is success even if insufficient amount",
              "affectedRelease": 3729
            }

+ Response 200

    + Body

            {"success":true,"code":"IS.ADD_ENTITY_SUCCESS","data":[{"id":"COD-IS-6","dfId":118147}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
### Update [PUT]
API to update internal Issue

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|DefectId|ID of the issue to be updated|Yes|
|entityKey|Entity key of the issue to be updated|Yes|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the DefectId and entityKey - Call API 'Issue/Fetch issues'
        <ul><li><font size="3"> From the response, get value of following attribute respectively -> data[&#x3C;index&#x3E;].DefectId and data[&#x3C;index&#x3E;].entityKey </li></ul>
    </li>
    <li><font size="3">Along with 'DefectId' and 'entityKey', pass those fields which are to be updated. Refer 'Create Issue' API to get idea of fields.
        <ul><li><font size="3"> Ex. - Update issue Priority <br> { <br>
              "DefectId": 118150, <br>
              "entityKey": "COD-IS-7", <br>
              "issuePriority": 189340, <br>
              "issuePriorityAlias": "Blocker"<br>
            }
            </li>
        </ul>  
        <ul><li><font size="3"> Ex. - Update issue Type <br> { <br>
              "DefectId": 118150, <br>
              "entityKey": "COD-IS-7", <br>
              "issueType":189337, <br>
              "issueTypeAlias":"Bug" <br>
            }
            </li>
        </ul>  
        <ul><li><font size="3"> Ex. - Update affected Release <br> { <br>
              "DefectId": 118150, <br>
              "entityKey": "COD-IS-7", <br>
              "affectedRelease":3730, <br>
              "affectedReleaseAlias":"Beta Release"<br>
            }
            </li>
        </ul>  
        <ul><li><font size="3"> Ex. - Update Summary <br> { <br>
              "DefectId": 118150, <br>
              "entityKey": "COD-IS-7", <br>
              "summary":"Money withdrawal is success even if insufficient amount_updated"<br>
            }
            </li>
        </ul>  
      </li>      
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "DefectId": 118150,
              "entityKey": "COD-IS-7",
              "summary": "Money withdrawal is success even if insufficient amount_updated"
            }

+ Response 200

    + Body

            {"success":true,"code":"IS.UPDATE_ENTITY_SUCCESS","data":[{"id":"COD-IS-7","dfId":118150,"updatedByAlias":"Nidhi (Nidhi)","updatedDate":"10-29-2018 07:44:53"}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            

## Fetch issues [/rest/issues/list]
### Get List [POST]
API to list issues

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"DefectId":118131,"projectID":1494,"entityKey":"COD-IS-1","createdSystem":"QMetry","externalKey":"","summary":"Money withdrawal is success even if insufficient amount.","submitDate":"10-27-2018 12:03:46","createdByID":606,"attachmentCount":0,"linkedRqCount":0,"linkedTcrCount":0,"issuePriority":"Blocker","issueType":"Bug","issueState":"Open","createdBy":"Nidhi","issueOwner":"Nidhi","projectExternalId":"","component":"Not Available","externalId":"","dfOwner":"Nidhi"}],"total":1,"UDFTypeData":{}}

+ Response 400

    + Body

             {"success": false,"code": "CO.GENERAL_EXCEPTION"}
             
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}



## Delete [/rest/issues/deleteEntity]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityIds|Ids of issues to be deleted|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityIds - Call API - 'Issue/Fetch issues'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityIds": [
                118131
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"IS.DELETE_ENTITY_SUCCESS","data":[{"entityKey":""}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}



## Fetch linked issues to TC Run. [/rest/issues/getForTCRun]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|tcRunID|Id of Testcase Run|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcRunID - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcRunID" : 1254205,
                 "limit" : 50,
                 "page" : 1,
                 "start" : 0
             }

+ Response 200

    + Body

            {"data":[{"DefectId":"115303","entityKey":"COD-IS-13","trackerUrl":null,"externalKey":null,"summary":"Summary 2hu3vkvi3q4","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","externalId":null},{"DefectId":"106745","entityKey":"COD-IS-9","trackerUrl":null,"externalKey":null,"summary":"issue1","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","externalId":null}],"total":2}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}



## Fetch unlinked issues to link with TC Step Run [/rest/issues/getForTCStepRun]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|tcStepRunID| Id of Testcase-Step Run|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcStepRunID - Call API - 'Execution/Fetch Testcase Step Run'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcStepRunID </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcStepRunID" : 11767171,
                 "limit" : 50,
                 "page" : 1,
                 "start" : 0
             }

+ Response 200

    + Body

            {"data":[{"DefectId":"115303","entityKey":"COD-IS-13","trackerUrl":null,"externalKey":null,"summary":"Summary 2hu3vkvi3q4","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","externalId":null},{"DefectId":"115165","entityKey":"COD-IS-11","trackerUrl":null,"externalKey":null,"summary":"vdf","issuePriority":"Trivial","issueType":"New Feature","issueState":"Open","externalId":null}],"total":2}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Fetch issues to link with execution [/rest/issues/internallist]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"dfOwner":"","reporter":"Nidhi","summary":"Summary 2hu3vkvi3q4","entityKey":"COD-IS-13","component":"","externalKey":"","externalId":"","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","submitDate":"10-16-2018 05:50:39","DefectId":"115303","isSyncedCount":"0","createdSystem":"QMetry","buildName":"","releaseName":"","issueOwner":"","trackerUrl":"","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","projectExternalId":"","isCurrentlyConfiguredProject":false,"fixVersion":"","attachmentCount":"0","linkedRqCount":"0","linkedTcrCount":"0","isDuplicate":false},{"dfOwner":"","reporter":"Nidhi","summary":"vdf","entityKey":"COD-IS-11","component":"","externalKey":"","externalId":"","issuePriority":"Trivial","issueType":"New Feature","issueState":"Open","submitDate":"10-13-2018 06:58:39","DefectId":"115165","isSyncedCount":"0","createdSystem":"QMetry","buildName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","issueOwner":"","trackerUrl":"","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","projectExternalId":"","isCurrentlyConfiguredProject":false,"fixVersion":"","attachmentCount":"0","linkedRqCount":"0","linkedTcrCount":"1","isDuplicate":false}],"total":2}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Link requirements [/rest/issues/link/requirements]
### Link [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|isID|EntityKey of Issue|Yes|
|rqIDs|IDs of Requirements to link with the Issue|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the isID - Call API - 'Issue/Fetch issues'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li></ul>
    </li>
    <li><font size="3">To get the rqIDs - Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "isID": "COD-IS-2",
              "rqIDs": [
                139276
              ]
            }


+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}



## Unlink Requirements [/rest/issues/unlink/requirements]
### Unlink [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|isID|EntityKey of Issue to unlink Requirements from|Yes|
|rqIDs|Unique identifier of Requirements that are to be unlinked from Issue|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the isID - Call API - 'Issue/Fetch issues'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li></ul>
    </li>
    <li><font size="3">To get the rqIDs - Call API - 'Requirements/Fetch Requirements'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "isID": "COD-IS-2",
              "rqIDs": [
                139276
              ]
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
# Group Attachment

## Upload File [/rest/attachments]
### Upload [POST]
API to upload attachment

<br> **NOTE:**
<br> Use Mock Server to test API as Uploading/Downloading of a actual file is not supported.

**form-data insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|file|Put the bytecode of the file to be uploaded|Yes|

+ Request
    + Headers

            content-type: application/json;charset=UTF-8
            apikey: <Generated Open API key>
            scope: default

    + Body

            ------WebKitFormBoundaryNsKoqAGAB0w7E22H
            Content-Disposition: form-data; name="file[]"; filename="testng-results.xml"
            Content-Type: text/xml
            
            dhweifhnsndcoiewehjdknsdsudweuhdeednsdhduhedy
            ------WebKitFormBoundaryNsKoqAGAB0w7E22H--

+ Response 200

    + Body

            {"success":true,"code":"CO.ADD_ATTACHMENT_SUCCESS","data":[{"reason":"","id":283268,"name":"testng-results.xml","size":7633,"type":"attachment"}]}
            
+ Response 400

    + Body

            {"success":false,"code":"CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Link Attachment [/rest/attachments/link]
### Link [POST]
API to link attachment to entity

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|ID the of Entity to which attachment is to be linked|Yes|
|attachmentIds|Id of attachments to upload|Yes|
|entityType|Abbreviated EntityType (IS,TC,TS,RQ)|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId (RQ) - Call API - 'Requirement/Fetch Requirements'
        <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": 139276,<br>
              "attachmentIds": "297120",<br>
              "entityType": "RQ"<br>
            }
            </li> 
        </ul>
    </li>
    <li><font size="3">To get the entityId (IS)  - Call API - 'Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": "118132",<br>
              "attachmentIds": "297123",<br>
              "entityType": "IS"<br>
            }
            </li> 
        </ul>
    </li>
    <li><font size="3">To get the entityId (TC)  - Call API - 'Call API 'Testcase/Fetch Testcase list'
         <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": "594293",<br>
              "attachmentIds": "297121",<br>
              "entityType": "TC" <br>
            }
            </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId (TS)  - Call API - 'Call API 'Testsuite/Fetch Testsuites'
         <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": "92455",<br>
              "attachmentIds": "297122", <br>
              "entityType": "TS" <br>
            }
            </li>
        </ul>
    </li>
    <li><font size="3">To get the attachmentIds  - Call API - 'Attachment/Fetch Linked Attachments'
         <ul><li><font size="3"> From the response, get value of following attribute -> data.id </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityId": 139276,
              "attachmentIds": "297120",
              "entityType": "RQ"
            }
            
+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ATTACHMENT_SUCCESS"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
            
            
## Unlink Attachment [/rest/attachments/unlink]
### Unlink [POST]
API to unlink attachment

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|ID the of Entity to which attachment is to be unlinked|Yes|
|attachmentIds|Id of uploaded attachment|Yes|
|entityType|Abbreviated EntityType (IS,TC,TS,RQ)|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId (RQ) - Call API - 'Requirement/Fetch Requirements'
        <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": 139276,<br>
              "attachmentIds": "297120",<br>
              "entityType": "RQ"<br>
            }
            </li> 
        </ul>
    </li>
    <li><font size="3">To get the entityId (IS)  - Call API - 'Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": "118132",<br>
              "attachmentIds": "297123",<br>
              "entityType": "IS"<br>
            }
            </li> 
        </ul>
    </li>
    <li><font size="3">To get the entityId (TC)  - Call API - 'Call API 'Testcase/Fetch Testcase list'
         <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": "594293",<br>
              "attachmentIds": "297121",<br>
              "entityType": "TC" <br>
            }
            </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId (TS)  - Call API - 'Call API 'Testsuite/Fetch Testsuites'
         <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
            <li><fornt size="3">Ex. <br> { <br>
              "entityId": "92455",<br>
              "attachmentIds": "297122", <br>
              "entityType": "TS" <br>
            }
            </li>
        </ul>
    </li>
    <li><font size="3">To get the attachmentIds  - Call API - 'Attachment/Fetch Linked Attachments'
         <ul><li><font size="3"> From the response, get value of following attribute -> data.id </li></ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityId": 139276,
              "attachmentIds": "297120",
              "entityType": "RQ"
            }
            
+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ATTACHMENT_SUCCESS"}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

            
## Fetch Linked Attachments [/rest/attachments/list]
### Get List [POST]
API to list attachments linked with an entity

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|entityId|Unique Identifier of Entity|Yes|
|entityType|Abbreviated EntityType(IS,TC,TS,RQ)|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId (RQ) - Call API - 'Requirement/Fetch Requirements'
        <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li>
            <li><font size="3">Ex. <br> { <br>
                 "start" : 0,<br>
                 "limit" : 50,<br>
                 "page" : 1,<br>
                 "entityId" : 139276,<br>
                 "entityType" : "RQ"<br>
            }
            </li> 
        </ul>
    </li>
    <li><font size="3">To get the entityId (IS)  - Call API - 'Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
            <li><fornt size="3">Ex. <br> { <br>
                 "start" : 0,<br>
                 "limit" : 50,<br>
                 "page" : 1,<br>
                 "entityId" : 118132,<br>
                 "entityType" : "IS"<br>
            }
            </li> 
        </ul>
    </li>
    <li><font size="3">To get the entityId (TC)  - Call API - 'Call API 'Testcase/Fetch Testcase list'
         <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
            <li><fornt size="3">Ex. <br> { <br>
                 "start" : 0,<br>
                 "limit" : 50,<br>
                 "page" : 1,<br>
                 "entityId" : 594293,<br>
                 "entityType" : "TC"<br>
            }
            </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId (TS)  - Call API - 'Call API 'Testsuite/Fetch Testsuites'
         <ul>
            <li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
            <li><fornt size="3">Ex. <br> { <br>
                 "start" : 0,<br>
                 "limit" : 50,<br>
                 "page" : 1,<br>
                 "entityId" : 297122,<br>
                 "entityType" : "TS"<br>
            }
            </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1,
                 "entityId" : 139276,
                 "entityType" : "RQ"
             }

+ Response 200

    + Body

            {"data":[{"module":"Requirement","coAttachmentDescription":"","id":297120,"coAttachmentName":"testng-results.xml","coAttachmentSize":2,"coAttachmentType":"xml","coAttachmentUser":"Nidhi","coAttachmentDateAdded":"10-28-2018 08:26:27"}],"total":1,"isURLFlag":false}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
## Attach logs to TC Run Or TC Step Run [/rest/attachments/testLog]
### Upload [POST]
API to upload testlog to tcrun

<br> **NOTE:**
<br> Use Mock Server to test API as Uploading/Downloading of a actual file is not supported.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|ID of the test case run|Yes|
|type|type - Possible Values(TCR, TCSR)|Yes|
|file|Put the bytecode of the file to be uploaded|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li></ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json;charset=UTF-8
            apikey: <Generated Open API key>
            scope: default

    + Body

              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="entityId"

              1254205
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="type"

              TCR
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="file"; filename="testlog.txt"
              Content-Type: text/plain

              dGVzdGxvZ3M=
              ------WebKitFormBoundary7MA4YWxkTrZu0gW--

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ATTACHMENT_SUCCESS","data":[{"reason":"","id":207383,"name":"sample.docx","size":11785}]}
            
+ Response 400

    + Body

            {"success":false,"code":"CO.GENERAL_EXCEPTION"}

+ Response 401

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}


## Download [/rest/attachments/{id}]
### Download [GET]
API to download attachment

<br> **NOTE:**
<br> Use Mock Server to test API as Uploading/Downloading of a actual file is not supported.

**Parameters Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|Attachment ID|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the id - Call API - 'Attachment /Fetch Linked Attachments'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li></ul>
    </li>
</ul>

+ Parameters 

    + id : `297122` (required, integer) - Attachment ID
        + Default: `297122`
    

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
             }



+ Response 200

    + Body

            <?xml version="1.0" encoding="UTF-8"?>
            <testng-results skipped="0" failed="8" ignored="0" total="48" passed="40">
              <reporter-output>
              </reporter-output>
              <suite name="Open API Test" duration-ms="12600" started-at="2018-09-26T09:55:20Z" finished-at="2018-09-26T09:55:32Z">
                <groups>
                </groups>
                <test name="Weather API Test" duration-ms="12600" started-at="2018-09-26T09:55:20Z" finished-at="2018-09-26T09:55:32Z">
                  <class name="APITest.OpenAPITest">
                    <test-method status="PASS" signature="conditionForDallas()[pri:0, instance:APITest.OpenAPITest@3a82f6ef]" name="conditionForDallas" duration-ms="1360" started-at="2018-09-26T09:55:20Z" finished-at="2018-09-26T09:55:21Z">
                      <reporter-output>
                      </reporter-output>
                    </test-method> <!-- conditionForDallas -->
                    <test-method status="PASS" signature="conditionForDallas()[pri:0, instance:APITest.OpenAPITest@3a82f6ef]" name="conditionForDallas" duration-ms="234" started-at="2018-09-26T09:55:21Z" finished-at="2018-09-26T09:55:21Z">
                      <reporter-output>
                      </reporter-output>
                    </test-method> <!-- conditionForDallas -->
                  </class> <!-- APITest.OpenAPITest -->
                </test> <!-- Weather API Test -->
            </suite> <!-- Open API Test -->
            
+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}
            
+ Response 403

    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
            <TITLE>ERROR: The request could not be satisfied</TITLE>
            </HEAD><BODY>
            <H1>403 ERROR</H1>
            <H2>The request could not be satisfied.</H2>
            <HR noshade size="1px">
            Bad request.
            
            <BR clear="all">
            <HR noshade size="1px">
            <PRE>
            Generated by cloudfront (CloudFront)
            Request ID: K7JMDVHzXito6BqrBXUsP81KicRXNOKcUTAt28YAQ3C9BCG-l5zBGg==
            </PRE>
            <ADDRESS>
            </ADDRESS>
            </BODY></HTML>

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
# Group Import
## Import Results [/rest/import/createandscheduletestresults/{headerRow}]
### Import Result file [POST]
API to upload result file 

<br> **NOTE:**
<br> Use Mock Server to test API as Uploading/Downloading of a actual file is not supported.

**Form-data Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|file|Your result file to be uploaded. Supported file extensions: .json, .xml and .zip (zip file must contain files of the format given in the 'entityType' param|Yes|
|entityType|Format of result file to be imported. Supported formats:TESTNG or CUCUMBER or JUNIT or HPUFT or QAF|Yes|
|cycleID|Target Cycle Id or Cycle Name. Cycle Id can be fetched using List Cycle API and Cycle Name can be obtained from detail view of target Cycle.|No|
|platformID|Target Platform Id or Platform Name. Platform Id can be fetched using List Platform API and Platform Name can be obtained from detail view of target Platform.|No|
|testsuiteId|Target Test Suite ID or Entity Key. Testsuite id can be fetched using List Testsuite API and the Entity Key can be obtained from detail view of target Test Suite.|No|
|projectID|Target Project ID or project Key or project name. Project id can be fetched using List Poroject API and the Entity Key or name can be obtained from list view of target Project.|No|
|releaseID|Target Release ID or Release name. Release id can be fetched using List Release API from list detail of target Project.|No|
|buildID|Target Build ID or Build name. Build id can be fetched using List Build API from list detail of target Project.|No|


<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the cycleID - Call API - 'Cycle/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li></ul>
    </li>
    <li><font size="3">To get the platformID - Call API - 'Platform/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].platformID </li></ul>
    </li>
    <li><font size="3">To get the testsuiteId - Call API - 'Testsuite/Fetch Testsuites'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li></ul>
    </li>
    <li><font size="3">To get the projectID - Call API - 'Projects/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li></ul>
    </li>
    <li><font size="3">To get the releaseID - Call API - 'Release/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li></ul>
    </li>
     <li><font size="3">To get the buildID - Call API - 'Build/List'
        <ul><li><font size="3"> From the response, get value of following attribute -> data[&#x3C;index&#x3E;].dropID </li></ul>
    </li>
</ul>

+ Parameters 

    + headerRow : `1` (required, string) - Row number from which file will be read.
        + Default: `1`
        
+ Request
    + Headers

            content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
            apikey: <Generated Open API key>
            scope: default

    + Body

              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="file"; filename="testng-results.xml"
              Content-Type: text/xml
              Content-Transfer-Encoding: base64

              PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgi
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="entityType"

              TESTNG
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="cycleID"

              6479
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="platformID"

              4781
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="testsuiteId"

              92225
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="projectID"

              1098
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="releaseID"

              3338
              ------WebKitFormBoundary7MA4YWxkTrZu0gW
              Content-Disposition: form-data; name="buildID"

              1396
              ------WebKitFormBoundary7MA4YWxkTrZu0gW--

+ Response 200

    + Body

            {"success":true,"code":"CO.IMPORT_SCHEDULED","data":[{"id":18852,"buildID":5391,"platformID":2910,"testsuiteId":"COD-TS-20","entityURL":"https://testmanagement.qmetry.com/#/test-suite/92249"}]}

+ Response 400

    + Body

            {"success":false,"code":"CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
            

# Group Testcase

## Create / Update Folder [/rest/testcases/folders]
### Create [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|parentId|Id of parent folder|Yes|
|name|Folder Name|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the parentId - For root folder | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> rootFolders.TC.id </li>
        </ul>
    </li>
    <li><font size="3">for any other folder | Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "parentId" : 26524,
                 "name" : "Testcase Folder"
             }

+ Response 200

    + Body

            {
              "success": true,
              "code": "CO.ADD_FOLDER_SUCCESS",
              "data": [
                {
                  "id": 68269
                }
              ]
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "TC.ADD_FOLDER_FAILURE"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Update Folder [/rest/testcases/folders]
### Update [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcFolderID|Id of target folder to be update|Yes|
|name|Updated name of folder|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcFolderID | Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcFolderID" : 26524,
                 "name" : "Updated Folder Name"
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.UPDATE_FOLDER_SUCCESS","data":[{"id":68269,"name":"Updated Folder Name"}]}

+ Response 401

    + Body

            {
                "success": false,
                "code": "CO.INVALID_API_KEY"
            }
            
+ Response 400

    + Body

            {
                "success": false,
                "code": "TC.UPDATE_FOLDER_FAIL"
            }

+ Response 500

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }
    

## List of folders [/rest/testcases/tree]
### Get List [POST]
Get folder/subfolder data based on folder id or list of folder with testcase

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|tcFolderID|Folder ID of which sub folders needs to be accessed|Yes|
|sort|Sort parameters - Refer JSON Schema|No|
|hideFolders|Send 'true' to hide empty folder|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get tcFolderID - Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> rootFolders.TC.id </li>
        </ul>
    </li>
    <li><font size="3">Call this API recursively until ID of targeted folder is found. To start with, use root folder ID [To get root folder ID - Call API 'Admin/Get info Service
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body
    
            {
              "tcFolderID": 26524,
              "sort": "[{\"property\":\"name\",\"direction\":\"ASC\"}]",
              "hideFolders": false
            }
            
    + Schema
            
            "Sort" : {
                  "type" : "object",
                  "properties" : {
                    "property" : {
                      "type" : "string"
                    },
                    "direction" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {
              "data": [
                {
                  "id": 26531,
                  "name": "CodeSnippetsTest",
                  "hasChildren": 0
                }
              ],
              "total": 1
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 403

    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <HTML>
            <HEAD>
                <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
                <TITLE>ERROR: The request could not be satisfied</TITLE>
            </HEAD>
            <BODY>
                <H1>403 ERROR</H1>
                <H2>The request could not be satisfied.</H2>
                <HR noshade size="1px"> Bad request.
            
                <BR clear="all">
                <HR noshade size="1px">
                <PRE>
            Generated by cloudfront (CloudFront)
            Request ID: fh6kSRvRfmtils6523bi0Yw1MoiNAsxzZgbotCcOj4c4Psw_19nKMQ==
            </PRE>
                <ADDRESS></ADDRESS>
            </BODY>
            </HTML>

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }



## Get Folder Metadata [/rest/testcases/tree/data]
### Get Detail [POST]
API to get particular folder detail of testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcFolderId|FolderId of Testcase|Yes|
|isInheritFromParent|Possible value is true or false|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcFolderId - Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcFolderId" : 26524,
                 "isInheritFromParent" : false
             }

+ Response 200

    + Body

            [{"component":"[null]","tcFolderID":26524,"createdDate":"2018-09-17 09:45:44.0","updatedDate":"","userAlias":"","owner":"","testCaseCount":25}]

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Delete folder [/rest/testcases/folders/delete]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcFolderID|Id of folder to be deleted|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcFolderID - For root folder | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> rootFolders.TC.id </li>
        </ul>
    </li>
    <li><font size="3">For any other folder | Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcFolderId" : 26524
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.OPERATION_SUCCESS","data":[{"parentId":26524}]}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 400

    + Body

             {"success":false,"code":"TC.DELETE_FOLDER_FAIL"}

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            

## Create [/rest/testcases]
### Create [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcFolderID|ID of the folder where Testcase will be added|Yes|
|steps|An array of Steps - Refer JSON Schema|No|
|name|Summary of Testcase|Yes|
|priority|PriorityID of Testcase|No|
|component|Component(Label) Id of Testcase|No|
|owner|OwnerId of Testcase|No|
|testCaseState|StatusId of Testcase|No|
|testCaseType|Id of Test Category|No|
|executionMinutes|Estimated Time (In Minute/s) for Execution|No|
|testingType|Id of TestingType|No|
|description|Description of Testcase|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcFolderID - For root folder | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].Id </li>
        </ul>
    </li>
    <li><font size="3">To get priority, owner, component, testCaseState, testCaseType and testingType - Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">priority : From the response, get value of following attribute -> customListObjs.priority[&#x3C;index&#x3E;].id </li>
        </ul>
        <ul>
            <li><font size="3">owner : From the response, get value of following attribute -> customListObjs.owner[&#x3C;index&#x3E;].id </li>
        </ul>
        <ul>
            <li><font size="3">component : From the response, get value of following attribute -> customListObjs.component[&#x3C;index&#x3E;].id </li>
        </ul>
        <ul>
            <li><font size="3">testCaseState : From the response, get value of following attribute -> customListObjs.testCaseState[&#x3C;index&#x3E;].id </li>
        </ul>
        <ul>
            <li><font size="3">testCaseType : From the response, get value of following attribute -> customListObjs.testCaseType[&#x3C;index&#x3E;].id </li>
        </ul>
        <ul>
            <li><font size="3">testingType : From the response, get value of following attribute -> customListObjs.testingType[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "tcFolderID": 26524,
              "steps": [
                {
                  "orderId": 1,
                  "description": "First Step",
                  "inputData": "First Input",
                  "expectedOutcome": "First Outcome"
                },
                {
                  "orderId": 2,
                  "description": "Second Step",
                  "inputData": "Second Input",
                  "expectedOutcome": "Second Outcome"
                }
              ],
              "name": "Test Case 1",
              "priority": 122587,
              "owner":3,
              "component": [
                122647
              ],
              "testCaseState": 122590,
              "executionMinutes": 1,
              "testCaseType": 122598,
              "description": "Description",
              "testingType": 122594
            }
            
    + Schema
    
            "Steps" : {
                  "type" : "object",
                  "required" : [ "description", "expectedOutcome", "inputData", "orderId" ],
                  "properties" : {
                    "orderId" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Number of Order"
                    },
                    "description" : {
                      "type" : "string",
                      "description" : "Value of Description"
                    },
                    "inputData" : {
                      "type" : "string",
                      "description" : "Value of InputData"
                    },
                    "expectedOutcome" : {
                      "type" : "string",
                      "description" : "Value of ExpectedOutcome"
                    },
                    "tcRunID" : {
                      "type" : "string",
                      "description" : "Id of Test Run"
                    }
                  }
                }

+ Response 200

    + Body

            {"success":true,"code":"TC.ADD_ENTITY_SUCCESS","data":[{"id":589961,"entityKey":"COD-TC-15","tcVersionId":1002716}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Archive/ Unarchive [/rest/testcases/archiveEntity]
### Change state [POST]
API To archive testcase based on specific version or all version

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityIds| An array of testcaseId or testcaseVersionId|Yes|
|isArchived|True for archive, false for unarchive|Yes|
|isEntityVersion|True for archive specific version of Testcase otherwise false|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityIds - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityIds": [
                593939,
                593938
              ],
              "isArchived": true,
              "isEntityVersion": false
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.ENTITY_ARCHIVE_SUCCESS","data":[{"ENTITY_NAME":"{TESTCASE}","ENTITY_KEY":""}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Add Comments [/rest/testcases/comments]
### Add [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|comments|Comments of Testcase|Yes|
|entityId|Id of Testcase|Yes|
|entityType|Entity Type of Testcase, default value is 'TC'|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "comments" : "Comment Text",
                 "entityId" : 589966,
                 "entityType" : "TC"
             }

+ Response 200

    + Body

            {
              "success": true,
              "code": "CO.ADD_COMMENTS_SUCCESS",
              "data": [
                {
                  "commentID": 1686,
                  "commentDesc": "Comment Text",
                  "createdBy": "Nidhi",
                  "createdDate": "10-15-2018 04:11:31"
                }
              ]
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Comments [/rest/testcases/getCommentsData]
### Get [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Testcase|Yes|
|entityType|Entity Type of Testcase, default value is 'TC'|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityId" : 589968,
                 "entityType" : "TC",
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"commentID":1687,"commentDesc":"Comment ncjlwrpwtr8","createdBy":"Nidhi","createdDate":"10-15-2018 04:36:29"}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Edit Comments [/rest/testcases/comments/update]
### Edit [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|commentId|CommentId of Testcase|Yes|
|entityId|Id of Testcase|Yes|
|comments|Comments of Testcase|Yes|
|entityType|Entity Type of Testcase, default value is TC|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the commentId - Call API 'Testcase/Get Comments'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].commentID </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "commentId" : 1688,
                "entityId" : 589968,
                "comments" : "Updated Testcase",
                "entityType" : "TC"
            }

+ Response 200

    + Body

            {
              "success": true,
              "code": "CO.UPDATE_COMMENTS_SUCCESS",
              "data": [
                {
                  "commentID": 1688,
                  "commentDesc": "Comment Update ryumrzo524",
                  "createdBy": "Nidhi",
                  "createdDate": "10-15-2018 04:41:28",
                  "updatedBy": "Nidhi",
                  "updatedDate": "10-15-2018 04:41:28"
                }
              ]
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Delete Comments [/rest/testcases/comments/delete]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|commentId|CommentId of Testcase|Yes|
|entityId|Id of Testcase|Yes|
|entityType|Entity Type of Testcase, default value is 'TC'|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the commentId - Call API 'Testcase/Get Comments'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].commentID </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "commentId" : 1687,
                 "entityId" : 589968,
                 "entityType" : "TC"
             }

+ Response 200

    + Body

            {
                "success": true,
                "code": "CO.DELETE_COMMENTS_SUCCESS"
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
## Delete - Background Process [/rest/testcases/delete]
### Delete [POST]
API to bulk delete testcases

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|An array of TestcaseId|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the id - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Automation API key>
            scope: default

    + Body

             {
                 "id" : 596731
             }

+ Response 200

    + Body

            {"success":true,"code":"TC.DELETE_ENTITY_SUCCESS","data":[{"id":"596731","entityKey":"COD-TC-5"}]}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}

## Delete - Foreground Process [/rest/testcases/deleteEntity]
### Delete [POST]
API To Delete Testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityIds|An array of TestcaseId|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityIds - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityIds" : 589987
             }

+ Response 200

    + Body

            {"success":true,"code":"TC.DELETE_ENTITY_SUCCESS","data":[{"entityKey":""}]}

+ Response 400

    + Body

            {"success":false,"code":"TC.OPERATION_FAIL"}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Versions [/rest/testcases/listmanageversions]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Testcase|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityId" : 590952
             }

+ Response 200

    + Body

            {"data":[{"versionNumber":1,"versionId":1002748,"iconCls":"green-latest","versionName":null,"createdUserName":"Nidhi","updatedUserName":null,"buildName":null,"createdDate":"10-15-2018 04:52:52","updatedDate":null,"versionComment":null,"watchers":"3,606","isArchived":false}],"total":1,"totalWatchers":2,"isCurrentUserWatcher":false}

+ Response 400

    + Body

            {"success":false,"code":"TC.OPERATION_FAIL"}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Delete Version [/rest/testcases/deleteEntityVersion]
### Delete [POST]
API To Delete Testcase Version

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Testcase|Yes|
|entityVersions|An array of version number of the Testcase|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
    <li><font size="3">To get the entityVersions - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersion </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityId" : 589992,
                 "entityVersions" : 1
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.ENTITY_VERSION_DELETE_SUCCESS","data":[{"ENTITY-NAME":"Test Case version(s)"}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Executions [/rest/testcases/execution]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcid|Id of Testcase|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcid - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcid" : 589999,
                 "start" : 0,
                 "limit" : 50 ,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"testLogs":0,"testSuiteName":"ts1","description":"","tsEntityKey":"COD-TS-1","isApprovalWorkflowEnabled":false,"testCaseStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAnJJREFUeNp0U0FrE0EYfdnEtlpLElBqg40WKjR4aKqCwUITQSj0oIIepAcvIl485Cp4FLx4COgt+AMUxFAJIRi1rXgopG2gTUVEYz1oYqk0pE2yszOzzjcxa0vqsMsyzHzve997b134z3r0/lfUalpgJgd9H1wfntvvnmv35vFy1Su5jHPG49zkPtZUxWYLRO23FFBCWCLx5O6ZagcAFdtSzqqL4WCPQOCggNsW4FygYQp8LptYXW8SUEE1iD29N65BjL3FIlyvmfAbDKXleWz//IL+XhtBHxA75cHl0S4YtghbjM9O33/jdQA0bdUZsNVjI/epibUfDMlkEov5RQgh1Csx4HNhKtwNBUAgcQeAZibaJ3ulo8eOdwzhiWvIZrPIZDKQsgUS8BsYCbh1jQYgtUkwmvmsn2Goz3ZASo3juHjlNirlMmZmXkESEykx1O9RLIRv6k4qamirlNokGHU4f4xj2P/PmdeFBs7FbmB1ZQXpdFqP43FLWJYAU6+hfVZWkdpEU6oOF4I2BvtMB+T52woOHR3FRDSqz6kRV8WSANphIatahy0mPZt5mBtFB6QiQlgtMX1er3MIi5MOMChhFBLyuV1MTGzlRvNbDgOH6w7Iy3e/kV+rofh1hxhszT+bntMuUMIoJN83mKO2VACTk5O4On4EocEDDsiL3CaWitsQXCYcGymelLDUQg3rFVOrHYlEMBIK6bEujXXj9IkuB4RzWZDSTuyJ8q2HH7yUMAoJ+UxWkdrEhmYm2ksfFXUmCmq82ELqZrXjZ6J4UsIoJOQzWUVqa8HUzESbOreLOwB2LwoJ+2sVqU2C7XfvjwADAA/Pz4QPWErtAAAAAElFTkSuQmCC","platform":"chrome","isArchived":false,"displayName":"Not Run","statusName":"notrun","testSuiteStatus":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAIsSURBVDjLpVNLSJQBEP7+h6uu62vLVAJDW1KQTMrINQ1vPQzq1GOpa9EppGOHLh0kCEKL7JBEhVCHihAsESyJiE4FWShGRmauu7KYiv6Pma+DGoFrBQ7MzGFmPr5vmDFIYj1mr1WYfrHPovA9VVOqbC7e/1rS9ZlrAVDYHig5WB0oPtBI0TNrUiC5yhP9jeF4X8NPcWfopoY48XT39PjjXeF0vWkZqOjd7LJYrmGasHPCCJbHwhS9/F8M4s8baid764Xi0Ilfp5voorpJfn2wwx/r3l77TwZUvR+qajXVn8PnvocYfXYH6k2ioOaCpaIdf11ivDcayyiMVudsOYqFb60gARJYHG9DbqQFmSVNjaO3K2NpAeK90ZCqtgcrjkP9aUCXp0moetDFEeRXnYCKXhm+uTW0CkBFu4JlxzZkFlbASz4CQGQVBFeEwZm8geyiMuRVntzsL3oXV+YMkvjRsydC1U+lhwZsWXgHb+oWVAEzIwvzyVlk5igsi7DymmHlHsFQR50rjl+981Jy1Fw6Gu0ObTtnU+cgs28AKgDiy+Awpj5OACBAhZ/qh2HOo6i+NeA73jUAML4/qWux8mt6NjW1w599CS9xb0mSEqQBEDAtwqALUmBaG5FV3oYPnTHMjAwetlWksyByaukxQg2wQ9FlccaK/OXA3/uAEUDp3rNIDQ1ctSk6kHh1/jRFoaL4M4snEMeD73gQx4M4PsT1IZ5AfYH68tZY7zv/ApRMY9mnuVMvAAAAAElFTkSuQmCC","tcRunID":1253754,"lastExecDrop":"None","executedVersion":1,"tsID":74666,"cycleName":"Default Cycle","isCycleArchived":false,"releaseName":"Default Release","isReleaseArchived":false,"scope":"1098:2596:5391","executionStatusIconImage":"#205081|#FFFFFF","tsrunID":101021,"statusID":7411,"state":1,"projectID":1098,"isPlatformArchived":false}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Get parameter info of Testcase linked to Testsuite [/rest/testcases/getParamDetails]
### Get parameter detail [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tctsID|Testcase Testsuite Link Id|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tctsID - Call API 'Testsuites/Fetch linked Testcases'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tctsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tctsID" :<tctsID for fetching linked paramIDs>
             }

+ Response 200

    + Body

            Param Details List fetch successfully

+ Response 400

    + Body

            Invalid json object or mandatory fields missing

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Versions [/rest/testcases/getVersionDetail]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcID|Id of Testcase|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcID - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcID" : 589999,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }


+ Response 200

    + Body

            {"data":[{"tcID":589999,"tcFolderID":26524,"projectID":1098,"isParameterized":false,"entityKey":"COD-TC-29","latestUnArchivedVersion":1,"tcVersion":1,"tcVersionID":1002756,"latestVersion":1,"createdDate":"10-15-2018 05:20:08","createdBy":606,"createdByAlias":"Nidhi","projectName":"CodeSnippets","isVersionArchived":0,"isArchived":false,"summary":"Testcase Create mwqdxc93vt","description":"Description","testingType":122598,"testingTypeAlias":"Manual","priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","isShared":false,"component":"[122647]","componentAlias":"Not Available","ownerAlias":"kunal","owner":3,"testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Link Requirements [/rest/testcases/link/requirements]
### Link [PUT]
To Link Requirement to Testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcID|EntityKey of Testcase|Yes|
|tcVersionId|VersionId of Testcase|Yes|
|rqVersionIds|Comma-separated values of versionId of the Requirement|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcID - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li>
        </ul>
    </li>
    <li><font size="3">To get the tcVersionId - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersionID </li>
        </ul>
    </li>
    <li><font size="3">To get the rqVersionIds - Call API 'requirement/List Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqVersionID </li>
        </ul>
    </li>
</ul>


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "tcID": "COD-TC-29",
              "tcVersionId": 1002756,
              "rqVersionIds": "236124,236125"
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS"}

+ Response 400

    + Body

            {"success":false,"code":"CO.LINK_ENTITY_FAIL"}


+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Unlink Requirements [/rest/testcases/unlink/requirements]
### Unlink [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcID|EntityKey of Testcase|Yes|
|tcVersionId|VersionId of Testcase|Yes|
|rqVersionIds|Comma-separated list of versionId to the Requirement|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcID - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li>
        </ul>
    </li>
    <li><font size="3">To get the tcVersionId - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersionID </li>
        </ul>
    </li>
    <li><font size="3">To get the rqVersionIds - Call API 'requirement/List Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqVersionID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "tcID": "COD-TC-31",
              "tcVersionId": 1002799,
              "rqVersionIds": "236109"
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS"}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch linked Requirements to Testcase [/rest/testcases/requirements/list]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcID|Id of Testcase|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcID - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcID" : 590041,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"createdByID":606,"createdByLoginID":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","createdDate":"10-13-2018 05:51:23","createdSystem":"QMetry","entityKey":"COD-RQ-25","rqId":138100,"name":"Requirement mtmquohdaag","rqVersionID":236109,"rqVersionDetailID":236109,"rqVersion":1,"attachmentCount":0,"rqFolderID":9119,"isRQArchived":false,"description":"Description","rqFolderPath":"/CodeSnippets","isVersionArchived":false,"linkedDfCount":0,"linkedTcCount":2,"plannerFlag":true,"projectID":1098,"projectName":"CodeSnippets","tcVersionID":1002799,"statusID":7409,"createdByAlias":"Nidhi","archivedTcTotal":0,"unarchivedTcTotal":2}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

## Link TestSuites [/rest/testcases/link/testsuites]
### Link [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcID|EntityKey of Testcase|Yes|
|tsIDs|Comma-separated value of Testsuite's EntityKey |Yes|
|tcVersion|Version number of Testcase|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tcID - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li>
        </ul>
    </li>
    <li><font size="3">To get the tsIDs - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li>
        </ul>
    </li>
    <li><font size="3">To get the tcVersion - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersion </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "tcID": "COD-TC-29",
              "tsIDs": "COD-TS-2,COD-TS-1",
              "tcVersion": 1
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":[{"COUNT":1}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Details [/rest/testcases/list]
### Get Details [POST]
Testcase list getting based on particular id of testcase or folder inside all data or particualr version related data

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|ID of testcase|Yes|
|tcFolderID|Folder ID whose testcase is to be fetched|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the id - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
    <li><font size="3">To get the tcFolderID | Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "id" : 297246,
                 "version" : 1,
                 "tcFolderID" : 26531,
                 "scope" : "project",
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"isVersionArchived":false,"isShared":false,"associatedCycles":"Default Cycle","state":1,"releaseNameDetail":"Default Release","cycleNameDetail":"Default Cycle","cycleIdsAsVersion":"5391","releaseIdsAsVersion":"2596","tcrCount":1,"associatedVersion":1,"tcID":297246,"paramIdList":"","entityKey":"COD-TC-9","projectId":1098,"projectName":"CodeSnippets","summary":"As a user, I want to withdraw money from bank","tcVersion":1,"createdDate":"09-18-2018 04:59:39","description":"","updatedBy":"","updatedByAlias":"","createdBy":"Nidhi","createdByAlias":"Nidhi (Nidhi)","designerAlias":"","testingType":122594,"testingTypeAlias":"Manual","testCaseTypeAlias":"","testCaseStateAlias":"","testCaseStateLabel":"","priorityAlias":"","tcFolderID":26531,"folderPath":"/CodeSnippets/CodeSnippetsTest","tcVersionID":610607,"testScriptName":"","ownerAlias":"","modifiedReasonAlias":"","executionMinutes":"","preCondition":"","postCondition":"","isLatestVersion":true,"currentTcVersion":1,"isArchived":false,"attachmentCount":0,"statusId":7415,"isChild":false,"component":"[]","componentAlias":"","componentAlias_search":"","totalWatchers":1,"isCurrentUserWatcher":true,"isCreatedByActive":true}],"total":1,"buildId":2596,"cycleId":5391,"UDFTypeData":{}}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## List Steps [/rest/testcases/steps/list]
### Get List [POST]
API to list all steps of a testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|Id of Testcase|Yes|s
|version|Version number of Testcase|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the id - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
    <li><font size="3">To get the version - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersion </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "id" : 590041,
                 "version" : 1,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"isRichText":false,"scope":"1098:2596:5391","tcID":590041,"projectID":1098,"tcStepID":5648867,"description":"First Step","orderId":1,"expectedOutcome":"First Outcome","inputData":"First Input","tcVersionID":1002799,"tcVersion":1,"tcsAttCount":0,"tcsIsShared":false,"tcsIsParameterized":false},{"isRichText":false,"scope":"1098:2596:5391","tcID":590041,"projectID":1098,"tcStepID":5648866,"description":"Second Step","orderId":2,"expectedOutcome":"Second Outcome","inputData":"Second Input","tcVersionID":1002799,"tcVersion":1,"tcsAttCount":0,"tcsIsShared":false,"tcsIsParameterized":false}],"total":2,"UDFTypeData":{}}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
 
 
## Fetch Testcase Linked to Requirement [/rest/testcases/list/forRQ]
### Get List [POST]
Testcase list getting based on particular id of requirement.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|rqID|Id of Requirement|Yes|
|getLinked|'True' to get only those testcases that are linked with this Requirement, false to get those testcases which are not linked with this Requirement|No|
|showEntityWithReleaseCycle|'True' to list only testcase which have given release and cycle or 'false' for all|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the rqID - Call API 'Requirements/Fetch Requirements'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].rqId </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body
    
            {
              "rqID": 138100,
              "getLinked": true,
              "showEntityWithReleaseCycle" : false,
              "start": 0,
              "limit": 10,
              "page": 1
            }

+ Response 200

    + Body

            {"data":[{"tcVersionID":1002799,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":590041,"entityKey":"COD-TC-31","isApprovalWorkflowEnabled":false,"summary":"Testcase Create d28dq8g17an","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002790,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":590032,"entityKey":"COD-TC-30","isApprovalWorkflowEnabled":false,"summary":"Testcase Create zgbw2hns0dr","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"}],"total":2}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Testcase Linked to Testsuite [/rest/testcases/list/forTS]
### Get List [POST]
Testcase list getting based on particular id of Testsuite.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsID|Id of Test Suite|Yes|
|showAllStateEntities|True to get testcases versions of approved state only, false to get testcases of any state|No|
|getLinked|True to get only those testcases that are linked with this defect, false to get all testcases. While using True "tsID" is mandatory|No|
|showEntityWithReleaseCycle|True to get only those Testcases which have the same associated releases and cycles as the Testsuite or false for all|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "tsID": 74666,
              "showAllStateEntities" : false,
              "getLinked": true,
              "showEntityWithReleaseCycle": false,
              "start": 0,
              "limit": 10,
              "page": 1
            }

+ Response 200

    + Body

            {"data":[{"tcVersionID":1002799,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":590041,"entityKey":"COD-TC-31","isApprovalWorkflowEnabled":false,"summary":"Testcase Create d28dq8g17an","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002790,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":590032,"entityKey":"COD-TC-30","isApprovalWorkflowEnabled":false,"summary":"Testcase Create zgbw2hns0dr","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002756,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589999,"entityKey":"COD-TC-29","isApprovalWorkflowEnabled":false,"summary":"Testcase Create mwqdxc93vt","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002755,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589998,"entityKey":"COD-TC-28","isApprovalWorkflowEnabled":false,"summary":"Testcase Create r5vdder1l8h","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002752,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589995,"entityKey":"COD-TC-27","isApprovalWorkflowEnabled":false,"summary":"Testcase Create 4s4ubgz2b7w","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002750,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589993,"entityKey":"COD-TC-26","isApprovalWorkflowEnabled":false,"summary":"Testcase Create t2jqtwulu2","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002747,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589991,"entityKey":"COD-TC-24","isApprovalWorkflowEnabled":false,"summary":"Testcase Create ribwght2yl","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002746,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589990,"entityKey":"COD-TC-23","isApprovalWorkflowEnabled":false,"summary":"Testcase Create cd3r47hvaoi","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002745,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589989,"entityKey":"COD-TC-22","isApprovalWorkflowEnabled":false,"summary":"Testcase Create w9g5yv0d8xr","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"},{"tcVersionID":1002744,"tcVersion":1,"isArchived":false,"isParameterized":false,"isVersionArchived":0,"projectID":1098,"projectName":"CodeSnippets","tcID":589988,"entityKey":"COD-TC-21","isApprovalWorkflowEnabled":false,"summary":"Testcase Create jmiqcegxll","latestUnArchivedVersion":1,"latestAvailableVersion":1,"priorityId":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","testingType":122594,"testingTypeAlias":"Manual","testCaseType":122598,"testCaseTypeAlias":"BVT","attachmentCount":0,"componentAlias":"Not Available","createdByAlias":"Nidhi","createdBy":"Nidhi"}],"total":25}
            
+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch List for Bulk Opeartion [/rest/testcases/listForBulkOperation]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|showAllStateEntities|True to get testcases of approved state only, false to get testcases of any state|No|
|folderPath|FolderPath of Testcase Folder whose testcases are to be listed|Yes|
|filter|filters - Refer JSON Schema|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the folderPath | Call API 'Testcase/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].name </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "filter": "[{\"value\":[\"0\"],\"type\":\"list\",\"field\":\"isShared\"}]",
              "showAllStateEntities": true,
              "folderPath": "/CodeSnippets",
              "start": 0,
              "limit": 10,
              "page": 1
            }

+ Response 200

    + Body

            {"data":[{"tcID":590041,"tcFolderID":26524,"projectID":1098,"entityKey":"COD-TC-31","latestUnArchivedVersion":1,"tcVersion":1,"tcVersionID":1002799,"latestVersion":1,"createdDate":"10-15-2018 06:08:42","createdBy":606,"createdByAlias":"Nidhi","projectName":"CodeSnippets","isVersionArchived":0,"isArchived":false,"summary":"Testcase Create d28dq8g17an","description":"Description","testingType":122598,"testingTypeAlias":"Manual","priority":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","isShared":false,"component":"[122647]","componentAlias":"Not Available","ownerAlias":"kunal","owner":3},{"tcID":590032,"tcFolderID":26524,"projectID":1098,"entityKey":"COD-TC-30","latestUnArchivedVersion":1,"tcVersion":1,"tcVersionID":1002790,"latestVersion":1,"createdDate":"10-15-2018 06:07:12","createdBy":606,"createdByAlias":"Nidhi","projectName":"CodeSnippets","isVersionArchived":0,"isArchived":false,"summary":"Testcase Create zgbw2hns0dr","description":"Description","testingType":122598,"testingTypeAlias":"Manual","priority":122587,"priorityAlias":"Blocker","testCaseState":122590,"testCaseStateAlias":"New","isShared":false,"component":"[122647]","componentAlias":"Not Available","ownerAlias":"kunal","owner":3}],"total":2,"UDFTypeData":{}}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

## Add Scope [/rest/testcases/scope/add]
### Add [POST]
Link release/cycle with testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Testcase|Yes|
|sourceBuildId|Number of records per page|Yes|
|sourceProjectId|ProjectId of the Testcase|Yes|
|sourceReleaseId|ReleaseId of the Project|Yes|
|releaseCycleMapping|An array of release, cycle & version mapping - Refer JSON Schema|Yes|
|opType|Operation types possible value likes 'otherScope' or 'current'|Yes|
|withVersion|Scope added with the version or not|No|
|updateFlag|This flag for the scope update or not|No|
|destinationProjectId|ProjectId based on operation type, possible value likes current project or another project of the id|Yes|
|entityData|An array of entityId & version for the Testcase - Refer JSON Schema|Yes|
|entityType|Abbreviated entityType of Testcase - 'TC'|Yes|
|sourceScope|scope('project'/'release'/'cycle')|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId and entityData.entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
    <li><font size="3">To get the entityData.version - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersionID </li>
        </ul>
    </li>
    <li><font size="3">To get the sourceProjectId and destinationProjectId - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
    <li><font size="3">To get the sourceReleaseId and releaseCycleMapping.release - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
    <li><font size="3">To get the sourceBuildId and releaseCycleMapping.cycle - Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li>
        </ul>
    </li>
    <li><font size="3">To get the releaseCycleMapping.version - Call API 'Testcase/View Versions metadata'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].versionNumber </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityId": 590041,
              "sourceBuildId": 5391,
              "sourceProjectId": 1098,
              "sourceReleaseId": 2596,
              "sourceScope": "project",
              "entityType": "TC",
              "releaseCycleMapping": [
                {
                  "release": 2596,
                  "cycle": [
                    5391
                  ],
                  "version": 1
                }
              ],
              "opType": "otherScope",
              "withVersion": false,
              "updateFlag": false,
              "destinationProjectId":  1098,
              "entityData": [
                {
                  "entityId": 590041,
                  "version": 1002799
                }
              ]
            }
            
    + Schema
    
            "ReleaseCycleMapping" : {
                  "type" : "object",
                  "required" : [ "cycle", "release", "version" ],
                  "properties" : {
                    "release" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Id of Release"
                    },
                    "cycle" : {
                      "type" : "array",
                      "description" : "An array of cycle's Id",
                      "items" : {
                        "type" : "integer",
                        "format" : "int32"
                      }
                    },
                    "version" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Number of the version"
                    }
                  }
                },
                
                "EntityData" : {
                  "type" : "object",
                  "required" : [ "entityId", "version" ],
                  "properties" : {
                    "entityId" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "Id of entity"
                    },
                    "version" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "entity versionId"
                    }
                  }
                }

+ Response 200

    + Body

            {"success":true,"code":"CO.REL_CYCLE_LINK_SUCCESS","data":[{}]}
             
+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Scope [/rest/testcases/scope/list]
### Get List [PUT]
To view list of scope(Release/Cycle) for testcase

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityID|Id of Testcase|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityID - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityID" : 590041,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }

+ Response 200

    + Body

            {"data":[{"testcaseId":590041,"releaseName":"Default Release","cycleName":"Default Cycle","releaseID":2596,"buildID":5391,"version":1,"isArchived":false,"isCycleArchived":false,"isReleaseArchived":false}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Remove Scope [/rest/testcases/scope/remove]
### Remove [POST]
Unlink scope (release/cycle) from testcase

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Testcase|Yes|
|sourceBuildId|BuildId of the Cycle associated with Release|Yes|
|sourceProjectId|ProjectId of Testcase|Yes|
|sourceReleaseId|ReleaseId of the Project|Yes|
|entityType|Entity type for the testcase, the default value is TC|Yes|
|opType|Operation types possible value likes 'currentBuild','allBuildsInRelease','allReleases'|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
    <li><font size="3">To get the sourceBuildId - Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li>
        </ul>
    </li>
    <li><font size="3">To get the sourceProjectId - Call API 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
    <li><font size="3">To get the sourceReleaseId - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "opType": "currentBuild",
              "sourceProjectId": 1098,
              "sourceReleaseId": 2596,
              "sourceBuildId": 5391,
              "entityType": "TC",
              "entityId": 590041,
              "folderAddToScope": false
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.REMOVE_FROM_SCOPE_PASS"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

           

## View Versions metadata [/rest/testcases/versions/{id}]
### Get Details [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityId|Id of Testcase |Yes|
|filter|filters - Refer JSON Schema|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
</ul>

+ Parameters 

    + id : `139276` (required, integer) - Id of Testcase
        + Default: `139276`

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityId": 590041,
              "filter": "[{\"value\":[0,1],\"type\":\"list\",\"field\":\"isArchived\"}]"
            }
            
    + Schema
    
            "Filter" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    },
                    "comparison" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {
              "data": [
                {
                  "versionNumber": 1,
                  "versionId": 1002799,
                  "iconCls": "green-latest",
                  "createdUserName": "Nidhi",
                  "createdDate": "10-15-2018 06:08:42",
                  "watchers": "3,606",
                  "isArchived": false
                }
              ],
              "total": 1,
              "totalWatchers": 2,
              "isCurrentUserWatcher": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
# Group Testsuite            

## Create Folder [/rest/testsuites/folders]
### Create [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|name|Folder Name|Yes|
|parentId|ID of parent folder|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the parentId - For root folder | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> rootFolders.TS.id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "name" : "Test Suite Folder",
                 "parentId" : 49581
             }

+ Response 200

    + Body

            {
                "success": true,
                 "code": "CO.ADD_FOLDER_SUCCESS",
                 "data": [
                    {
                  "id": 63394
                    }
              ]
            }

+ Response 400

    + Body

            {"success":false,"code":"TS.DUPLICATE_FOLDER","data":[{"id":63395,"FOLDER_PATH":"/CodeSnippets/","msg":"DUPLICATE_FOLDER"}]}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## List of folders [/rest/testsuites/tree]
### Get List [POST]
Get subfolder list and list of folder with Testsuite (if hideFolders is 'True')

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|Testsuite folder ID|Yes|
|sort|Sort parameters - Refer JSON Schema|No|
|hideFolders|Send to true to hide empty folders|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tsFolderID - Call this API recursively until ID of targeted folder is found. To start with, use root folder ID [To get root folder ID - Call API 'Admin/Get info Service (rootFolders.TS.id)]
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "tsFolderID": 49581,
              "sort": "[{\"property\":\"name\",\"direction\":\"ASC\"}]",
              "hideFolders": false
            }
            
    + Schema

            "Sort":{
              "type": "object",
              "properties": {
                "property": {
                  "type": "string"
                },
                "direction": {
                  "type": "string"
                }
              }
            }

+ Response 200

    + Body

            {"data":[{"id":63395,"name":"TS Folder","hasChildren":0},{"id":63394,"name":"TS Folder 1jzmv3udkt4","hasChildren":0},{"id":63380,"name":"TS Folder 21hsrw1urzj","hasChildren":0},{"id":63381,"name":"TS Folder 3uglr7gnbo8","hasChildren":0}],"total":4}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 403

    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <HTML>
            <HEAD>
                <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
                <TITLE>ERROR: The request could not be satisfied</TITLE>
            </HEAD>
            <BODY>
                <H1>403 ERROR</H1>
                <H2>The request could not be satisfied.</H2>
                <HR noshade size="1px"> Bad request.
            
                <BR clear="all">
                <HR noshade size="1px">
                <PRE>
                        Generated by cloudfront (CloudFront)
                        Request ID: oCe8vEDei1Q2DoiM-t8ciQwyNX7__cMLO_1qvdDxrHPWjuKuH15zjQ==
                </PRE>
                <ADDRESS></ADDRESS>
            </BODY>
            </HTML>

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Delete Folder [/rest/testsuites/folders/delete]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|FolderId of Test Suites|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tsFolderID - For root folder | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].Id </li>
        </ul>
    </li>
    <li><font size="3">For any other folder | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsFolderID" : 63395
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.DELETE_FOLDER_SUCCESS","data":[{"id":63395}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
## Create/Update [/rest/testsuites]
### Create [POST]
API to create testsuite

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|parentFolderId|Parent folderId of Test Suites|Yes|
|isAutomatedFlag|Default value false|No|
|name|Summary of Test Suites|Yes|
|description|Description of Test Suites|No|
|owner|Owner of Test Suites|No|
|testSuiteState|Status of Test Suites|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the parentFolderId | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the owner | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> customListObjs.owner[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the testSuiteState | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> customListObjs.testSuiteState[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "parentFolderId": "541",
                "isAutomatedFlag": false,
                "name": "Testsuite Summary",
                "description": "desc",
                "owner": 3,
                "testSuiteState": 21746
            }

+ Response 200

    + Body

            {"success":true,"code":"TS.ADD_TS_SUCCESS","data":[{"ENTITY_KEY":"COD-TS-3","id":92087,"entityKey":"COD-TS-3"}]}

+ Response 400

    + Body

            {"success":false,"code":"CO.MANDATORY_FIELDS_MISSING","data":[{"MISSING_FIELDS":",","PROJECT_NAME":"CodeSnippets","RESOURCE_TYPE":"TESTSUITE"}]}

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

## Fetch Testsuites [/rest/testsuites/list]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|FolderId of Test Suites|Yes|
|scope|Scope of Testsuite, possible values project,release,cycle|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tsFolderID | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsFolderID" : 49581,
                 "scope" : "project",
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }


+ Response 200

    + Body

            {"data":[{"tsID":92087,"projectID":1098,"entityKey":"COD-TS-3","tsFolderID":49581,"name":"Testsuite g11ka0g2qla","linkedTcCount":0,"linkedPlatform":0,"attachmentCount":0,"createdDate":"10-16-2018 01:23:26","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi"},{"tsID":92058,"projectID":1098,"entityKey":"COD-TS-2","tsFolderID":49581,"name":"Testsuite wj3dn24hmha","linkedTcCount":1,"linkedPlatform":0,"attachmentCount":0,"createdDate":"10-15-2018 05:53:24","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi"},{"tsID":74666,"projectID":1098,"entityKey":"COD-TS-1","tsFolderID":49581,"name":"ts1","linkedTcCount":5,"linkedPlatform":1,"platform":"chrome","attachmentCount":0,"releaseNameList":"Default Release","cycleNameList":"Default Cycle","createdDate":"10-01-2018 08:15:32","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi","isCycleArchived":false,"isReleaseArchived":false,"isPlatformArchived":false}],"total":3,"UDFTypeData":{}}

+ Response 400

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
                "success": false,
                "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }

## Update [/rest/testsuites]
### Update [PUT]
API to update testsuite

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|id|Id of testsuite to be updated|Yes|
|entityKey|entityKey of testsuite to be updated|Yes|
|TsFolderID|parent folder id of testsuite|Yes|
|name|Summary of Test Suites|Yes|
|description|Description of Test Suites|No|
|owner|Owner of Test Suites|No|
|testSuiteState|Status of Test Suites|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">You can update all entites concurrently or any combination of 4 entity name, description, owner, testSuiteState.
    </li>
    <li><font size="3">To get the id - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
    <li><font size="3">To get the parentFolderId | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the owner and ownUser | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> customListObjs.owner[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the testSuiteState and tsState | Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> customListObjs.testSuiteState[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityKey":"T12-TS-24",
                 "TsFolderID" : 49581,
                 "id":92457,
                 "name" : "Testsuite 1",
                 "description" : "Description 1",
                 "ownUser":[3],"owner":3,"owneralias":"kunal",
                 "tsState":[21746],"testSuiteState":21746,"testSuiteStateAlias":"Open"
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.ADD_TS_SUCCESS","data":[{"ENTITY_KEY":"COD-TS-3","id":92087,"entityKey":"COD-TS-3"}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.MANDATORY_FIELDS_MISSING",
              "data": [
                {
                  "MISSING_FIELDS": ",",
                  "PROJECT_NAME": "CodeSnippets",
                  "RESOURCE_TYPE": "TESTSUITE"
                }
              ]
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Clone [/rest/testsuites/copy]
### Clone [PUT]
Copy TestSuite in same folder or another folder

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|srcFolderId|Source FolderId of Testsuite|Yes|
|destFolderId|Destination FolderId of Testsuite|Yes|
|id|Id of Test Suites|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get srcFolderId and destFolderId | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the id - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "srcFolderId" : 49581,
                 "destFolderId" : 63394,
                 "id" : "92087"
             }



+ Response 200

    + Body

            {
              "success": true,
              "code": "TS.COPY_TS_SUCCESS"
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "AD.MANDATORY_FIELDS_MISSING"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

## Delete [/rest/testsuites/delete]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|ids|Id of Test Suites|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the ids - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "ids" : 92090
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.DELETE_TS_SUCCESS","data":[{"testSuiteStatus":true,"ENTITY_KEY":"{TESTSUITE}"}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Delete [/rest/testsuites/deleteEntity]
### Delete [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityIds|Id of Testsuites that have to be deleted|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityIds - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityIds" : "92087,92058"
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.DELETE_ENTITY_SUCCESS"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Details [/rest/testsuites/detail/data]
### Get Details [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|id|Id of Testsuite|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the id - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "id" : 92091
             }

+ Response 200

    + Body

            {"owner":606,"isAutomatedFlag":false,"cycleIdsAsVersion":"","createddate":"10-16-2018 02:35:28","entityKey":"COD-TS-7","totalWatchers":1,"watchers":"606","description":"Description","owneralias":"Nidhi","folderPath":"/CodeSnippets","TsFolderID":49581,"UDFTypeData":{},"createdby":"Nidhi (Nidhi)","isCurrentUserWatcher":true,"name":"Testsuite gemal926376","attachmentCount":0,"id":92091,"autoGenerated":false,"releaseIdsAsVersion":""}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.MANDATORY_FIELDS_MISSING"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Add Scope [/rest/testsuites/mapReleaseCycle]
### Add [POST]
Link Release & Cycle to Testsuite

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|data|An array of Data - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
    <li><font size="3">To get the releaseId - Call API 'Release/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].releaseID </li>
        </ul>
    </li>
    <li><font size="3">To get the buildID- Call API 'Cycle/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].buildID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "data": [
                {
                  "tsId": 92091,
                  "buildID": 5391,
                  "releaseId": 2596
                }
              ]
            }
            
    + Schema
    
            "Data" :{
              "type": "object",
              "required": [
                "buildID",
                "releaseId",
                "tsId"
              ],
              "properties": {
                "tsId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Id of Test Suites"
                },
                "buildID": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Id of Build(Cycle)"
                },
                "releaseId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Id of Release"
                }
              }
            }

+ Response 200

    + Body

            {
                "success":"true",
                "notlinked":"Default Cycle"
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Scope [/rest/testsuites/getReleaseCycleForTestSuite]
### Get List [POST]
Get list of Release & Cycle linked to Testsuite

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsID|Id of Testsuite|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsID" : 92091,
                 "limit" : 50,
                 "page" : 1,
                 "start" : 0
             }

+ Response 200

    + Body

            {"data":[{"releaseName":"Default Release","cycleName":"Default Cycle","tsReleaseCycleMapID":114761,"createdDate":"2018-10-16T06:40:34","isCycleArchived":false,"isReleaseArchived":false},{"releaseName":"Realease 3dzd6ydkl0c","cycleName":"Default Cycle 3dzd6ydkl0c","tsReleaseCycleMapID":114762,"createdDate":"2018-10-16T06:40:44","isCycleArchived":false,"isReleaseArchived":false}],"total":2}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Remove Scope [/rest/testsuites/unMapReleaseCycle]
### Remove [POST]
Unlink scope (Release & Cycle) from Testsuite

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsReleaseCycleMapID|Id of Testsuite's Release Cycle mapping|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsReleaseCycleMapID - Call API 'Testsuite/Fetch Scope'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsReleaseCycleMapID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsReleaseCycleMapID" : 114761
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.REMOVE_FROM_SCOPE_PASS"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Link Platforms [/rest/testsuites/link/platforms]
### Link [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|qmTsId|Id of Test Suites|Yes|
|qmPlatformId|Comma-separated value of PlatformId|Yes|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the qmTsId - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
    <li><font size="3">To get the qmPlatformId - Call API 'Platform/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].platformID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "qmTsId" : 92091,
                 "qmPlatformId" : 2910
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.LINK_PLATFORM_SUCCESS","data":[{"COUNT":0}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Linked Platforms [/rest/testsuites/getplatformwithname]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsID|Id of Testsuite|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsID" : 92091
             }


+ Response 200

    + Body

            {
              "data": [
                {
                  "platformID": 3110,
                  "name": "chrome",
                  "tsID": 92091,
                  "isArchived": false
                },
                {
                  "platformID": 2910,
                  "name": "No Platform",
                  "tsID": 92091,
                  "isArchived": false
                }
              ],
              "total": 2
            }

+ Response 400

    + Body

            {
                "success": false,
                "code": "CO.ENTITY_NOT_FOUND_ERROR"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Unlink Platforms [/rest/testsuites/unlink/platforms]
### Unlink [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|qmTsId|Id of Test Suites|Yes|
|platformID|Comma-separated value of PlatformId|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the qmTsId - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
    <li><font size="3">To get the qmTsId - Call API 'Platform/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].platformID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "qmTsId" : 92091,
                 "platformID" : 2910
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.UNLINK_PLATFORM_SUCCESS","data":[{"COUNT":1}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Update Linked Testcase Version [/rest/testsuites/link/testcaseWithLatestVersion]
### Update version [POST]
To update linked Testcase in TestSuite with Latest Available Version

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcRunID|Id of testcase run|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcRunID - Call API 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcRunID" : 1253747
             }

+ Response 200

    + Body

            {
                "success": true,
                "code": "TS.UPDATE_LINK_TC_SUCCESS"
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Link Testcases [/rest/testsuites/link/testcases]
### Link [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsID|Id of Testsuite|Yes|
|tcIDs|tcVersionIDs to link to testsuite|Yes|
|fromReqs|'True' for Testcase link from Requirement otherwise false|No|
|linktc|True for Testcase link, default value true|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
    <li><font size="3">To get the testcase list - Call API 'Testcase/Fetch List for Bulk Opeartion'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcID </li>
        </ul>
    </li>
    <li><font size="3">To get the tcIDs - Call API 'Testcase/Fetch Versions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcVersionID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsID" : 92091,
                 "tcIDs" : [1002867,1002799],
                 "fromReqs" : false,
                 "linktc" : true
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":[{"COUNT":2}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch linked Testcases [/rest/testsuites/testcase/list]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|filter|Filter to only show unshared Testcases - Refer JSON Schema|No|
|tsID|Id of Testsuite whose linked Testcases are to be obtained|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsID" : 92091,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }
             
    + Schema
    
            "Filter" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    },
                    "comparison" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"createdById":606,"createdByLoginId":"Nidhi","createdByAlias":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","tcEntityKey":"COD-TC-32","tcId":590091,"tcName":"Testcase Create w4yxojrl37e","tcVersionID":1002867,"tcVersion":1,"priorityId":122587,"priorityName":"Blocker","testCaseStateId":122590,"testCaseStateName":"New","testCaseTypeId":122598,"testCaseTypeName":"BVT","testingTypeName":"Manual","attachmentCount":0,"tcFolderId":26524,"orderId":1,"tsid":92091,"tctsID":941715,"state":1,"isArchived":false,"component":"[122647]","componentAlias":"Not Available"},{"projectID":1098,"createdById":606,"createdByLoginId":"Nidhi","createdByAlias":"Nidhi","createdByFirstName":"Nidhi","createdByLastName":"Shah","tcEntityKey":"COD-TC-31","tcId":590041,"tcName":"Testcase Create d28dq8g17an","tcVersionID":1002799,"tcVersion":1,"priorityId":122587,"priorityName":"Blocker","testCaseStateId":122590,"testCaseStateName":"New","testCaseTypeId":122598,"testCaseTypeName":"BVT","testingTypeName":"Manual","attachmentCount":0,"tcFolderId":26524,"orderId":2,"tsid":92091,"tctsID":941716,"state":1,"isArchived":false,"component":"[122647]","componentAlias":"Not Available"}],"total":2}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Unlink Testcase [/rest/testsuites/unlink/testcases]
### Unlink [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsID|Unique identifier of Testsuite|Yes|
|tcIDs|testsuite testcase link ID|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].entityKey </li>
        </ul>
    </li>
    <li><font size="3">To get the tcIDs - Call API 'Testsuite/Fetch linked Testcases'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tctsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsID" : "COD-TS-7",
                 "tcIDs" : "945829,945836"
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Assign Platform Owner to Execution [/rest/testsuites/assign/platform]
### Assign [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|platformowner|OwnerId of selected User|Yes|
|qmAllowBulkEmail|True for send email to selected user otherwise false|No|
|tsRunIds|TestRunId of Test Suites|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the platformowner - Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> customListObjs.owner[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the tsRunIds - Call API 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "platformowner" : 3,
                 "qmAllowBulkEmail" : true,
                 "tsRunIds" : 136021
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.PL_OWNER_ASSIGNED_SUCCESS","data":[{"platformowner":3,"qmAllowBulkEmail":true,"qmEntityValue":"admin","tsRunIds":"136021","COUNT":1}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Assign Tester to Execution [/rest/testsuites/assign/tester]
### Assign tester [PUT]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|qmAllowBulkEmail|Flag to decide whether an email to the watchers of the Testsuite is to be sent|No|
|qmTsRunId|Unique identifier of the Testsuite Run|No|
|tcrIDs|Id of Testcase Runs to whom a tester is to be assigned|Yes|
|userId|Id of user which is to be assigned as tester for the specified Testcase Runs|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the qmTsRunId - Call API 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsRunID </li>
        </ul>
    </li>
    <li><font size="3">To get the tcrIDs - Call API 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
    <li><font size="3">To get the userId - Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> customListObjs.owner[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "qmAllowBulkEmail" :true,
                 "qmTsRunId" :136021,
                 "tcrIDs" : "1254205, 1254206",
                 "userId" :[3]
             }

+ Response 200

    + Body

            Tester assigned successfully

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

# Group Execution

## Fetch Executions [/rest/execution/list/platformHome]
### Get List [POST]
API to list executions of a given testsuite

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|Testsuite folder Id|Yes|
|tsID|Testsuite ID|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsFolderID | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "tsFolderID": 49581,
                "tsID": 92091,
                "start": 0,
                "limit": 50,
                "page": 1
            }

+ Response 200

    + Body

            {"data":[{"isAutomatedFlag":false,"releaseEndDate":"01-10-2019 01:00:00","PlatformId":3110,"Platform":"chrome","TestSuiteName":"Testsuite gemal926376","tsRunID":136021,"tsID":92091,"isTestRun":true,"startTime":"10-16-2018 04:40:28","isPlatformArchived":false,"cycleName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","cycleID":7017,"releaseID":3606,"entityKey":"COD-TS-7","TestSuitePath":"/CodeSnippets","totalTCWithExecutionTime":1,"totalExecutionTime":0,"RemainingTime":1,"Total":1,"isCycleArchived":false,"isReleaseArchived":false,"state":1,"status_7415":0,"status_7410":0,"status_7414":0,"status_7411":1,"status_7409":0,"status_7412":0,"Status":"Not Run","statusID":7411,"Defects":1,"createdDate":"10-16-2018 02:35:28","createdByAlias":"Nidhi"}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Testcase Run IDs [/rest/execution/list/tcr]
### Get List [POST]
To get list of test run under execution

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsrID|ID of Testsuite Run whose Testcase Runs are to be obtained|Yes|
|filter|Add filter to get filtered Testcase Runs - Refer JSON Schema|No|
|showTcWithDefects|True to get only those Testcase Runs which have Defects linked with them|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsrID - Call API - 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsrID" : 136021,
                 "filter" : "[{\"value\":[0,1],\"type\":\"list\",\"field\":\"isArchived\"}]",
                 "showTcWithDefects" : false,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }
             
    + Schema
    
            "Filter" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    },
                    "comparison" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"defects":"COD-IS-10:106761,COD-IS-11:115165","TS_name":"Testsuite gemal926376","tsDescription":"Description","cycleName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","tcVersionID":1002867,"attachmentCount":0,"testCaseType":122598,"testCaseTypeAlias":"BVT","tsRunID":136021,"tcRunID":1254205,"hasRows":0,"orderId":1,"owner":3,"ownerAlias":"kunal","tcID":590091,"tctsID":941715,"stepCount":2,"isArchived":false,"logCount":0,"executionTime":1,"domain":0,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","executedVersion":1,"tcDescription":"Description","name":"Testcase Create w4yxojrl37e","entityKey":"COD-TC-32","latestVersion":1,"Component":"Not Available","priority":122587,"priorityAlias":"Blocker","PlatformID":3110,"Platform_Name":"chrome","TC_Status":"Not Run","isAutoExecuted":0,"isPlatformArchived":false,"tsEntityKey":"COD-TS-7","state":1}],"total":1,"lastExecDrop":"","lastExecDropAlias":"","state":"1","Defects":"2"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch Testcase Step Run [/rest/execution/list/tcsr]
### Get List [POST]
To get list of test steps run under test run.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcrID| Unique identifier of Testcase Run whose Testcase Step Runs are to be fetched|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcrID - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcrID" : 1254205
             }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"tsRunID":136021,"stepNo":1,"tcRunID":1254205,"tcID":590091,"tcStepRunID":11767171,"tcStepID":5649109,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","description":"First Step","isArchived":false,"expectedOutcome":"First Outcome","logCount":0,"attachmentCount":0,"inputData":"First Input","startTime":"2018-10-16T07:49:51","endTime":"2018-10-16T07:49:51","isShared":false,"tcVersionID":1002867,"tcVersion":1,"entityKey":"COD-TC-32","entityKeyId":32},{"projectID":1098,"tsRunID":136021,"stepNo":2,"tcRunID":1254205,"tcID":590091,"tcStepRunID":11767172,"tcStepID":5649108,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","description":"Second Step","isArchived":false,"expectedOutcome":"Second Outcome","logCount":0,"attachmentCount":0,"inputData":"Second Input","startTime":"2018-10-16T07:49:51","endTime":"2018-10-16T07:49:51","isShared":false,"tcVersionID":1002867,"tcVersion":1,"entityKey":"COD-TC-32","entityKeyId":32}],"total":2}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Link Issues to the Testcase Run [/rest/execution/link/issue]
### Link [PUT]
API to link issues to the testcase being executed

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|issueIds|ID of issues to be linked to Testcase Run|Yes|
|tcrId|ID of Testcase Run to link issues with|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the issueIds - Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
        </ul>
    </li>
    <li><font size="3">To get the tcrID - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "issueIds" :["106761"],
                 "tcrId" :1254205
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":[{"tcrId":1254205,"SUCCESS_LINKED_KEY":"COD-IS-10","totalLinkedCount":2},{"issueIds":["106761"],"tcrId":1254205,"COUNT":1}]}


+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Link Issues to the Testcase Step Run [/rest/execution/link/issueWithTCStepRun]
### Link [PUT]
API to link issues to the testcase step run being executed

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|issueIds|ID of issues to be linked to Testcase Run|Yes|
|tcsrId|Id of Testcase Step to link issues with|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the issueIds - Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
        </ul>
    </li>
    <li><font size="3">To get the tcsrId | Call API 'Execution/Fetch Testcase Step Run' 
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcStepRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "issueIds" :["115303"],
                 "tcsrId" : 11767171
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":[{"issueIds":["115303"],"tcsrId":11767171,"COUNT":1,"totalLinkedCount":1}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Fetch linked Issues of Testcase Run or Testcase Step Run [/rest/execution/issue/list]
### Get List [POST]
API to list issues linked to a particular execution

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|istcsrFlag|True for Testcase Step Run, false when otherwise|Yes|
|entityId|TestcaseRunId or TestcaseStepRunId|Yes|
|istcrFlag|True for Testcase Run, false when otherwise|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId - For TestcaseRunId | Call API 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId - For TestcaseStepRunId | Call API 'Execution/Fetch Testcase Step Run' 
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcStepRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "entityId" : 1254205,
                 "istcsrFlag" : false,
                 "istcrFlag" : true,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }


+ Response 200

    + Body

            {"data":[{"tcRunID":1254205,"projectID":1098,"drops":"None","platform":"chrome","entityKey":"COD-IS-11","dfId":115165,"summary":"vdf","tsname":"Testsuite gemal926376","platformID":3110,"LinkedDate":"10-16-2018 05:06:14","cycle":"Default Cycle 3dzd6ydkl0c","release":"Realease 3dzd6ydkl0c","status":"Open","platformAttributes":""}],"total":1}


+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Unlink Issues from Testcase Run [/rest/execution/unlink/issue]
### Unlink  [POST]
API to unlink issues from the Testcase Run being executed

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|issueIds|Ids of Issues to be unlinked|Yes|
|tcrId|Id of Testcase Run to unlink issues from|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcrId - Call API 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
    <li><font size="3">To get the issueIds | Call API 'Execution/Fetch linked Issues of Testcase Run or Testcase Step Run' 
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].dfId </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "issueIds" : 115303,
                 "tcrId" : 1254205
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS","data":[{"issueIds":["115303"],"tcrId":1254205,"COUNT":1,"totalLinkedCount":2}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Unlink Issues from Testcase Step Run [/rest/execution/unlink/issueWithTCStepRun]
### Unlink [POST]
API to unlink issues to the testcase step run being executed

**Request Body Insight**

|Parameters|Description|Required|
|-----------|:---------|:-------|
|issueIds|Ids of issues to unlink|Yes|
|tcsrId|Id of Testcase Step to unlink issues from|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the issueIds | Call API 'Execution/Fetch linked Issues of Testcase Run or Testcase Step Run' 
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].dfId </li>
        </ul>
    </li>
    <li><font size="3">To get the tcrId - Call API 'Execution/Fetch Testcase Step Run'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcStepRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                 "issueIds" : 115303,
                 "tcsrId" : 11767171
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.UNLINK_ENTITY_SUCCESS","data":[{"issueIds":["115303"],"tcsrId":11767171,"COUNT":1,"totalLinkedCount":0}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Reset Execution Status [/rest/execution/resetstatus]
### Reset [PUT]
API to reset execution status after changing build

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|qmTsRunId|Testsuite Run Id|Yes|
|dropID|buildId on which testcases and testcase steps are to be executed|Yes|
|isBulkStausSetNotNotRun|Send 'true' to reset status to 'Not Run'|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the qmTsRunId - Call API - 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsRunID </li>
        </ul>
    </li>
    <li><font size="3">To get the dropID - Call API - 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].cycleID </li>
        </ul>
    </li>
</ul>

+ Request

    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "qmTsRunId" : 136021,
                 "dropID" : 5391,
                 "isBulkStausSetNotNotRun" : true
             }

+ Response 200

    + Body

            {"success":true,"code":"TS.EXECUTION_STATUS_RESET_AND_BUILD_SET_SUCCESS","data":[{"qmTsRunId":"136021","dropID":"5391","isBulkStausSetNotNotRun":true,"COUNT":1,"Status":"7411"}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Bulkupdate Run status [/rest/execution/runstatus/bulkupdate]
### Update [PUT]
API to update run status of multiple steps

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|runStatusID|Id of the execution status to set(Id can be obtained from getInfo service response)|Yes|
|dropID|Unique identifier of drop on which execution is to be performed|No|
|qmTsRunId|Id of Testsuite Run to execute|Yes|
|entityIDs|Ids of Testcase Runs to execute|Yes|
|entityType|Type of Entity('TCR'/'TCSR') to Execute|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the runStatusID - Call API 'Admin/Get info Service'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> allstatus[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the entityIDs - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request

    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "runStatusID" : 7409,
                 "qmTsRunId" : 136021,
                 "entityIDs" : 1254205,
                 "entityType" : "TCR"
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.UPDATE_RUNSTATUS_SUCCESS","data":[{"runStatusID":7409,"entityType":"TCR","qmTsRunId":"136021","entityIDs":1254205,"lastExecuted":"10-16-2018 06:00:09","tcrStatus":"7409","executedBy":"Nidhi"}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

## Edit comments to Testcase Run and Testcase Step Run [/rest/execution/updaterun]
### Update [PUT]
API to Edit comments to Testcase Run and Testcase Step Run

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|type|Abbreviated entity type. Possible values - (TCR,TCSR)|Yes|
|fieldVal|Value of field|Yes|
|isAutoExecuted|True if it is to be automatically executed and false if otherwise|Yes|
|entityId|Unique identifier of Testcase Run or Testcase Step Run|Yes|
|field|Field which is to be updated, Default 'comment'|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the entityId (if type TCR) - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
    <li><font size="3">To get the entityId (if type TCSR) | Call API 'Execution/Fetch Testcase Step Run' 
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcStepRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "type": "TCR",
              "field": "comment",
              "fieldVal": "Your comment add here",
              "isAutoExecuted": 0,
              "entityId": 1254205
            }

+ Response 200

    + Body

            {"success":true,"code":"CO.COMMENTS_SAVED_SUCCESSFULLY"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

            
# Group Search

## Search entities [/rest/search/result]

API to search entities
| Parameters|Description|Required|
|-----------|:---------|:-------|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|
|entityType|Abbreviated EntityType('RQ'/'TC'/'TS'/'IS') whose entities are to be searched|Yes|
|scope|Level('project'/'release'/'cycle') at which search is to be performed|No|
|filters|filters - Refer JSON Schema|Yes|


### Search Testcases [POST]
Ex. - search Testcases

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityType|For Testcase entity type would be - TC|Yes|
|showAllStateEntities|<ul><li><font size="3">If eSignature is enabled for the project - Send 'true' to get data of all states and 'false' to get only approved entities.</li><li><font size="3">If eSignature is disabled for the project - Send 'true' to get data of all states and 'false' would not get any data.</li></ul> |No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityType": "TC",
              "start": 0,
              "limit": 50,
              "scope": "project",
              "page": 1,
              "showAllStateEntities": true,
              "filters": [
                {
                  "name": "Match",
                  "value": "OR",
                  "rawValue": "All",
                  "filters": [
                    {
                      "name": "entityKeyId",
                      "op": "EQ",
                      "value": "COD-TC-3",
                      "rawValue": "COD-TC-3"
                    },
                    {
                      "name": "entityKey",
                      "op": "CN",
                      "value": "COD-TC-3",
                      "rawValue": "COD-TC-3"
                    },
                    {
                      "name": "description",
                      "op": "CN",
                      "value": "COD-TC-3",
                      "rawValue": "COD-TC-3"
                    },
                    {
                      "name": "name",
                      "op": "CN",
                      "value": "COD-TC-3",
                      "rawValue": "COD-TC-3"
                    }
                  ]
                }
              ]
            }
             
    + Schema
    
              "SearchFilters" : {
                  "type" : "object",
                  "required" : [ "filters", "name", "rawValue", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter, send 'Match' to search"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search, send 'OR' as the condition"
                    },
                    "rawValue" : {
                      "type" : "string",
                      "description" : "raw value to search, send 'All'"
                    },
                    "filters" : {
                      "type" : "array",
                      "description" : "Filter for entityKeyId,entityKey,name,description",
                      "items" : {
                        "$ref" : "#/definitions/Filters"
                      }
                    }
                  }
                },
                
             "Filters" : {
                  "type" : "object",
                  "required" : [ "name", "op", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter"
                    },
                    "op" : {
                      "type" : "string",
                      "description" : "Operator"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"statusId":10165,"associatedVersion":2,"plannerFlag":false,"isVersionArchived":0,"tcID":594295,"entityKey":"COD-TC-3","projectId":1494,"projectName":"CodeSnippets","linkedRqCount":1,"linkedTsCount":1,"summary":"Money transfer TC 3","tcVersion":2,"tcVersionList":"[{\"state\":1,\"isArchived\":0,\"tcVersion\":1,\"tcVersionId\":1007340,\"tcVersionName\":\"Version-1\"},{\"state\":1,\"isArchived\":0,\"tcVersion\":2,\"tcVersionId\":1007341,\"tcVersionName\":\"Version-2\"}]","linkedDfCount":0,"attachmentCount":0,"createdDate":"2018-10-28T04:28:01","description":"Money transfer TC 3 Version","isApprovalWorkflowEnabled":false,"updatedBy":606,"updatedByAlias":"Nidhi","createdBy":606,"createdByAlias":"Nidhi","testingType":189322,"testingTypeAlias":"Manual","tcFolderID":70507,"folderPath":"/CodeSnippets","tcVersionID":1007341,"isArchived":false,"isShared":false,"releaseName":"Default Release","buildName":"Default Cycle"}],"total":1,"buildId":3723,"cycleId":7187,"UDFTypeData":{}}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
### Search Issues [POST]
Ex. - search Issues

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityType|For Testcase entity type would be - IS|Yes|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityType": "IS",
              "start": 0,
              "limit": 50,
              "scope": "project",
              "page": 1,
              "filters": [
                {
                  "name": "Match",
                  "value": "OR",
                  "rawValue": "All",
                  "filters": [
                    {
                      "name": "entityKeyId",
                      "op": "EQ",
                      "value": "COD-IS-7",
                      "rawValue": "COD-IS-7"
                    },
                    {
                      "name": "entityKey",
                      "op": "CN",
                      "value": "COD-IS-7",
                      "rawValue": "COD-IS-7"
                    },
                    {
                      "name": "summary",
                      "op": "CN",
                      "value": "COD-IS-7",
                      "rawValue": "COD-IS-7"
                    },
                    {
                      "name": "description",
                      "op": "CN",
                      "value": "COD-IS-7",
                      "rawValue": "COD-IS-7"
                    }
                  ]
                }
              ]
            }
             
    + Schema
    
              "SearchFilters" : {
                  "type" : "object",
                  "required" : [ "filters", "name", "rawValue", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter, send 'Match' to search"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search, send 'OR' as the condition"
                    },
                    "rawValue" : {
                      "type" : "string",
                      "description" : "raw value to search, send 'All'"
                    },
                    "filters" : {
                      "type" : "array",
                      "description" : "Filter for entityKeyId,entityKey,name,description",
                      "items" : {
                        "$ref" : "#/definitions/Filters"
                      }
                    }
                  }
                },
                
             "Filters" : {
                  "type" : "object",
                  "required" : [ "name", "op", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter"
                    },
                    "op" : {
                      "type" : "string",
                      "description" : "Operator"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"DefectId":118150,"entityKey":"COD-IS-7","createdSystem":"QMetry","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","summary":"Money withdrawal is successful even if insufficient amount_updated","submitDate":"10-29-2018 07:36:23","issuePriority":"Blocker","issueType":"Bug","issueState":"Reopened","isCurrentlyConfiguredProject":1,"componentAlias":"Not Available","description":"Money withdrawal is success even if insufficient amount","dfOwner":"Nidhi","projectID":1494},{"DefectId":118147,"entityKey":"COD-IS-6","createdSystem":"QMetry","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","summary":"Money withdrawal is success even if insufficient amount","submitDate":"10-29-2018 07:11:13","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","isCurrentlyConfiguredProject":1,"componentAlias":"Not Available","description":"Money withdrawal is success even if insufficient amount","dfOwner":"Nidhi","projectID":1494},{"DefectId":118146,"entityKey":"COD-IS-5","createdSystem":"QMetry","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","summary":"Money withdrawal is success even if insufficient amount.","submitDate":"10-29-2018 07:07:02","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","isCurrentlyConfiguredProject":1,"description":"Money withdrawal is success even if insufficient amount.","dfOwner":"Nidhi","projectID":1494},{"DefectId":118135,"entityKey":"COD-IS-4","createdSystem":"QMetry","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","summary":"Issue3","submitDate":"10-28-2018 23:59:35","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","isCurrentlyConfiguredProject":1,"componentAlias":"Not Available","description":"Description","dfOwner":"Nidhi","projectID":1494},{"DefectId":118133,"entityKey":"COD-IS-3","createdSystem":"QMetry","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","summary":"Summary 2i3ccw8ucue","submitDate":"10-27-2018 12:16:10","issuePriority":"Blocker","issueType":"Bug","issueState":"Open","isCurrentlyConfiguredProject":1,"projectID":1494},{"DefectId":118132,"entityKey":"COD-IS-2","createdSystem":"QMetry","trackerAlias":"Internal Tracker","trackerType":"Internal","trackerVersionName":"Internal","summary":"Money withdrawal is success even if insufficient amount.","submitDate":"10-27-2018 12:12:22","issuePriority":"Blocker","issueType":"Bug","issueState":"Closed","isCurrentlyConfiguredProject":1,"componentAlias":"Not Available","dfOwner":"Nidhi","projectID":1494}],"total":6}

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
### Search Requirements [POST]
Ex. - search Requirements

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityType|For Testcase entity type would be - RQ|Yes|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityType": "RQ",
              "start": 0,
              "limit": 50,
              "scope": "project",
              "page": 1,
              "filters": [
                {
                  "name": "Match",
                  "value": "OR",
                  "rawValue": "All",
                  "filters": [
                    {
                      "name": "entityKeyId",
                      "op": "EQ",
                      "value": "COD-RQ-13",
                      "rawValue": "COD-RQ-13"
                    },
                    {
                      "name": "entityKey",
                      "op": "CN",
                      "value": "COD-RQ-13",
                      "rawValue": "COD-RQ-13"
                    },
                    {
                      "name": "name",
                      "op": "CN",
                      "value": "COD-RQ-13",
                      "rawValue": "COD-RQ-13"
                    },
                    {
                      "name": "description",
                      "op": "CN",
                      "value": "COD-RQ-13",
                      "rawValue": "COD-RQ-13"
                    }
                  ]
                }
              ]
            }           
             
    + Schema
    
              "SearchFilters" : {
                  "type" : "object",
                  "required" : [ "filters", "name", "rawValue", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter, send 'Match' to search"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search, send 'OR' as the condition"
                    },
                    "rawValue" : {
                      "type" : "string",
                      "description" : "raw value to search, send 'All'"
                    },
                    "filters" : {
                      "type" : "array",
                      "description" : "Filter for entityKeyId,entityKey,name,description",
                      "items" : {
                        "$ref" : "#/definitions/Filters"
                      }
                    }
                  }
                },
                
             "Filters" : {
                  "type" : "object",
                  "required" : [ "name", "op", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter"
                    },
                    "op" : {
                      "type" : "string",
                      "description" : "Operator"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"statusId":10165,"rqBuildMapID":0,"associatedCycles":"Alpha_v2","plannerFlag":false,"rqId":139292,"entityKey":"COD-RQ-13","archivedTcTotal":0,"unarchivedTcTotal":0,"projectId":1494,"linkedTcCount":0,"linkedDfCount":0,"name":"RQ1","rqVersion":1,"description":"","attachmentCount":0,"releaseNameList":"Alpha Release","releaseIdList":"[{\"id\":3729,\"name\":\"Alpha Release\"}]","cycleNameList":"Alpha_v2","cycleIdList":"[{\"id\":7197,\"name\":\"Alpha_v2\"}]","createdDate":"10-29-2018 08:50:30","isVersionArchived":false,"createdSystem":"QMetry","createdBy":"Nidhi","createdByAlias":"Nidhi (Nidhi)","parentFolderId":12646,"folderPath":"/CodeSnippets","rqVersionID":237309,"rqVersionList":"[{\"isArchived\":0,\"rqVersion\":1,\"rqVersionID\":237309,\"rqVersionName\":\"Version-1\"}]","releaseName":"Default Release","projectName":"CodeSnippets","isArchived":false,"buildName":"Default Cycle","isCurrentlyConfiguredProject":false}],"total":1,"buildId":3723,"cycleId":7187,"UDFTypeData":{}} 

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
### Search Test suites [POST]
Ex. - search Test suites

| Parameters|Description|Required|
|-----------|:---------|:-------|
|entityType|For Testcase entity type would be - TS|Yes|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "entityType": "TS",
              "start": 0,
              "limit": 50,
              "scope": "project",
              "page": 1,
              "filters": [
                {
                  "name": "Match",
                  "value": "OR",
                  "rawValue": "All",
                  "filters": [
                    {
                      "name": "entityKeyId",
                      "op": "EQ",
                      "value": "COD-TS-1",
                      "rawValue": "COD-TS-1"
                    },
                    {
                      "name": "entityKey",
                      "op": "CN",
                      "value": "COD-TS-1",
                      "rawValue": "COD-TS-1"
                    },
                    {
                      "name": "description",
                      "op": "CN",
                      "value": "COD-TS-1",
                      "rawValue": "COD-TS-1"
                    },
                    {
                      "name": "name",
                      "op": "CN",
                      "value": "COD-TS-1",
                      "rawValue": "COD-TS-1"
                    }
                  ]
                }
              ]
            }          
             
    + Schema
    
              "SearchFilters" : {
                  "type" : "object",
                  "required" : [ "filters", "name", "rawValue", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter, send 'Match' to search"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search, send 'OR' as the condition"
                    },
                    "rawValue" : {
                      "type" : "string",
                      "description" : "raw value to search, send 'All'"
                    },
                    "filters" : {
                      "type" : "array",
                      "description" : "Filter for entityKeyId,entityKey,name,description",
                      "items" : {
                        "$ref" : "#/definitions/Filters"
                      }
                    }
                  }
                },
                
             "Filters" : {
                  "type" : "object",
                  "required" : [ "name", "op", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name of Filter"
                    },
                    "op" : {
                      "type" : "string",
                      "description" : "Operator"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "value to search"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"tsID":92455,"entityKey":"COD-TS-1","tsFolderID":64617,"name":"TS1","linkedTcCount":2,"linkedPlatform":0,"attachmentCount":1,"createdDate":"10-28-2018 06:11:42","createdBy":606,"createdByAlias":"Nidhi","owner":606,"ownerAlias":"Nidhi","testsuiteStatus":"uncovered","StatusID":10165,"folderPath":"/CodeSnippets","Total":0,"ExecutionTime":0,"RemainingTime":0,"status_10161":0,"status_10162":0,"status_10163":0,"status_10164":0,"status_10165":0,"status_10166":0}],"UDFTypeData":{},"total":1}   

+ Response 400

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            
+ Response 401

    + Body

            {"success":false,"code":"CO.INVALID_API_KEY"}

+ Response 500

    + Body

            {"success": false,"code": "CO.GENERAL_EXCEPTION"}
            

# Group Datagrid


## List Parameter [/rest/parameter/list]
### Get List [POST]

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|showArchive|Send false to get only unarchived parameter, defaulted to false|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|


+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "showArchive" : false,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }             

+ Response 200

    + Body

{
    "success": true,
        "data": [
            {
                "paramID": 232,
                "name": "Parameters Name 1",
                "description": "Description",
                "isArchived": false,
                "createdDate": "17-10-2018 06:58:24 PM",
                "projects": "Test123",
                "testCaseRefered": 0
            },
            {
                "paramID": 233,
                "name": "Parameters Name 2",
                "description": "Description",
                "isArchived": false,
                "createdDate": "17-10-2018 06:58:24 PM",
                "projects": "Test123",
                "testCaseRefered": 0
            }
        ],
    "total": 2
}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
    

## Create [/rest/datagrid/create]
### Create [POST]
API to Create DataGrid

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|name|Datagrid name|Yes|
|description|Value of field|Yes|
|projectIDs|An array of Project Ids|Yes|
|parameters|parameters - Refer JSON Schema|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the projectIDs - Call API - 'Projects/List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].projectID </li>
        </ul>
    </li>
    <li><font size="3">To get the paramID - Call API - 'Datagrid/List parameter'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].paramID </li>
        </ul>
    </li>
</ul>

+ Request

    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "name": "Datagrid 1",
              "description": "description",
              "projectIDs": [
                249
              ],
              "parameters": [
                {
                  "paramID": "231",
                  "orderID": 1,
                  "parameterValues": [
                    {
                      "value": "abcd",
                      "orderID": 1
                    },
                    {
                      "value": "efgh",
                      "orderID": 2
                    }
                  ]
                },
                {
                  "paramID": "228",
                  "orderID": 2,
                  "parameterValues": [
                    {
                      "value": "p1",
                      "orderID": 1
                    },
                    {
                      "value": "p2",
                      "orderID": 2
                    }
                  ]
                }
              ]
            }

+ Schema
    
            "parameters" : {
              "type": "object",
              "properties": {
                "paramID": {
                  "type": "string"
                },
                "orderID": {
                  "type": "integer"
                },
                "parameterValues": {
                  "type": "array",
                  "items": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "orderID": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "value",
                        "orderID"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "orderID": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "value",
                        "orderID"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "paramID",
                "orderID",
                "parameterValues"
              ]
            }    
    
+ Response 200

    + Body

            {
                "success": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## List [/rest/datagrid/getList]
### Get List [POST]
API to get List Of DataGrid

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|filter|Refer JSON Schema|No|
|sort|Refer JSON Schema|No|
|showOnlyArchive|Value of field|No|
|showArchive|Send true to display archived datagrid, false otherwise|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
              "filter": [
                {
                  "type": "string",
                  "value": "datagrid",
                  "field": "name"
                },
                {
                  "type": "string",
                  "value": [
                    249
                  ],
                  "field": "projectIDs"
                }
              ],
              "sort": [
                {
                  "property": "createdDate",
                  "direction": "DESC"
                }
              ],
              "showArchive": true,
              "showOnlyArchive": false,
              "start": 0,
              "limit": 50,
              "page" : 1
            }                                                                   

    + Schema
            "filter": {
              "type": "array",
              "items": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "field": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "value",
                    "field"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "array",
                      "items": [
                        {
                          "type": "integer"
                        }
                      ]
                    },
                    "field": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "value",
                    "field"
                  ]
                }
              ]
            }

+ Response 200

    + Body

            {
                "success": true,
                "data": {
                    "success": true,
                    "data": [
                        {
                            "archived": false,
                            "id": 73,
                            "dataGridID": 73,
                            "name": "Datagrid 8akb3ml86j",
                            "description": "description",
                            "createdBy": "Priyanka Shah",
                            "createdDate": "30-10-2018 04:36:55 PM",
                            "updatedBy": "Priyanka Shah",
                            "isArchived": false,
                            "hasParams": false,
                            "projects": "Test123"
                        },
                        {
                            "archived": false,
                            "id": 69,
                            "dataGridID": 69,
                            "name": "DataGrid Delete Test",
                            "description": "Desc",
                            "createdBy": "Priyanka Shah",
                            "createdDate": "24-10-2018 11:26:01 AM",
                            "updatedBy": "Priyanka Shah",
                            "updatedDate": "24-10-2018 11:34:31 AM",
                            "isArchived": false,
                            "hasParams": false,
                            "projects": "Test123"
                        },
                    ],
                    "total": 2
                }
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Get Detail [/rest/datagrid/getById{?dataGridID}]
### Get Detail [GET]
API to get DataGrid

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the DataGridID - Call API - 'Datagrid/Fetch List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].dataGridID </li>
        </ul>
    </li>
</ul>

+ Parameters 

    + dataGridID : `73` (required, integer) - DataGridID to Get DataGrid
        + Default: `73`

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
             }
             
+ Response 200

    + Body

            {
                "success": true,
                "data": {
                    "projectList": [
                        {
                            "id": 249,
                            "name": "Test123"
                        }
                    ],
                    "archived": false,
                    "name": "Datagrid 8akb3ml86j",
                    "description": "description",
                    "createdBy": "Priyanka Shah",
                    "createdDate": "2018-10-30 11:06:55.0",
                    "updatedBy": "Priyanka Shah",
                    "isArchived": false,
                    "parameters": [
                        {
                            "paramID": 163,
                            "name": "Parameters Name 6o90120drt6",
                            "OrignalParamID": 231,
                            "parameterValues": [
                                {
                                    "parameterValueID": 788,
                                    "value": "abcd",
                                    "orderID": 1
                                },
                                {
                                    "parameterValueID": 790,
                                    "value": "efgh",
                                    "orderID": 2
                                }
                            ],
                            "orderID": 1
                        },
                        {
                            "paramID": 164,
                            "name": "Parameters Name ogdand50wr",
                            "OrignalParamID": 228,
                            "parameterValues": [
                                {
                                    "parameterValueID": 787,
                                    "value": "p1",
                                    "orderID": 1
                                },
                                {
                                    "parameterValueID": 789,
                                    "value": "p2",
                                    "orderID": 2
                                }
                            ],
                            "orderID": 2
                        }
                    ],
                    "hasParams": false,
                    "projectIDs": [
                        249
                    ]
                },
                "total": 2
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            Unauthorised or session expired

+ Response 403

    + Body

            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
            <HTML>
            <HEAD>
                <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
                <TITLE>ERROR: The request could not be satisfied</TITLE>
            </HEAD>
            <BODY>
                <H1>403 ERROR</H1>
                <H2>The request could not be satisfied.</H2>
                <HR noshade size="1px"> Bad request.
            
                <BR clear="all">
                <HR noshade size="1px">
                <PRE>
                Generated by cloudfront (CloudFront)
                Request ID: zrHSfTPFeOtisFRD2h4xxYoEDTJiaJ1kxyvt7Y-QSRxAxgVRLIOxbg==
                </PRE>
                <ADDRESS></ADDRESS>
            </BODY>
            </HTML>

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Save [/rest/datagrid/save]
### Save [PUT]
API to Save DataGrid

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the dataGridID - Call API - 'Datagrid/Fetch List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].dataGridID </li>
        </ul>
    </li>
    <li><font size="3">To get the id - Call API - 'Datagrid/Get DataGrid'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.parameters[&#x3C;index&#x3E;].parameterValues[&#x3C;index&#x3E;].parameterValueID </li>
        </ul>
    </li>
    <li><font size="3">To get the parentID - Call API - 'Datagrid/Get DataGrid'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.parameters[&#x3C;index&#x3E;].paramID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            [
              {
                "dataGridID": "73",
                "operation": "update",
                "id": 788,
                "orderID": 1,
                "field": "parametervalues",
                "value": "1234",
                "parentID": 163
              },
              {
                "dataGridID": "73",
                "operation": "update",
                "id": 789,
                "orderID": 2,
                "field": "parametervalues",
                "value": "5678",
                "parentID": 163
              },
              {
                "dataGridID": "73",
                "field": "description",
                "value": "Description Update"
              },
              {
                "dataGridID": "73",
                "field": "name",
                "value": "Datagrid Update"
              }
            ]

+ Response 200

    + Body

            {
                "success": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Update [/rest/datagrid/update]
### Update [PUT]
API to Update DataGrid

<br><br> **NOTE:**

<ul> 
    <li><font size="3">To get the dataGridID - Call API - 'Datagrid/Fetch List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].dataGridID </li>
        </ul>
    </li>
    <li><font size="3">For Delete Parameter = To get the "ID" : {{param_id}} - Call API - 'Datagrid/Get DataGrid'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].parameters[&#x3C;index&#x3E;].OrignalParamID </li>
        </ul>
    </li>
    <li><font size="3">For Add Parameter = To get the "value" : {{param_id}} - Call API - 'Datagrid/List Parameter'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].paramID </li>
        </ul>
    </li>
    <li><font size="3">For Update Parameter = To get the "id" : {{old_param_id}} - Call API - 'Datagrid/Get DataGrid'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.parameters[&#x3C;index&#x3E;].paramID </li>
        </ul>
    </li>
    <li><font size="3">For Update Parameter = To get the "value" : {{new_param_id}} - Call API - 'Datagrid/List Parameter'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].paramID </li>
        </ul>
    </li>
</ul>

<br><br> **Request Body Examples:**

<ul> 
    <li><font size="3">For Update Parameter </li>
            <font size="3"><br> { <br>
                 "dataGridID": "{{datagrid_id}}",<br>
                 "field":"parameter",<br>
                 "operation":"update",<br>
                 "id":{{old_param_id}},<br>
                 "value":{{new_param_id}}<br>
                 }
    <li><font size="3">For Add New Parameter </li>
           <font size="3"><br> { <br>
                 "dataGridID": "{{datagrid_id}}",<br>
                 "field":"parameter",<br>
                 "operation":"add",<br>
                 "value":{{param_id}}<br>
                 }
    <li><font size="3">For Delete Parameter </li>
           <font size="3"><br> { <br>
           "dataGridID":"{{datagrid_id}}", <br>
           "field":"parameter", <br>
           "operation":"delete", <br>
           "ID":{{param_id}} <br>
           }
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {"dataGridID":"{{datagrid_id}}", "field":"parameter", "operation":"delete", "ID":{{param_id}}}

+ Response 200

    + Body

            {
                "success": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }
            
+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
## Autofill Parameter Values [/rest/datagrid/autofill{?rows,isRandom,isSequential}]
### Autofill  [POST]
API to Autofill DataGrid with parameter values

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the paramId - Call API - 'Datagrid/List Parameter'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].paramID </li>
        </ul>
    </li>
</ul>

+ Parameters 

    + rows : `3` (optional, integer) - Number of Rows to Autofill
        + Default: `3`
    + isRandom : false (optional, boolean) - Flag to fill Randomly
        + Default: false
    + isSequential : false (optional, boolean) - Flag to fill sequentially
        + Default: false

+ Request

    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             [<paramId>]
             
+ Response 200

    + Body

            {
              "success": true,
              "data": {
                "parameters": [
                  {
                    "paramID": 231,
                    "name": "Parameters Name 6o90120drt6",
                    "parameterValues": [
                      {
                        "parameterValueID": 1619,
                        "value": "p1"
                      },
                      {
                        "parameterValueID": 1620,
                        "value": "p2"
                      }
                    ]
                  }
                ]
              }
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 404

    + Body

            <!DOCTYPE html><html><head><title>Apache Tomcat/8.0.47 - Error report</title><style type="text/css">H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}.line {height: 1px; background-color: #525D76; border: none;}</style> </head><body><h1>HTTP Status 404 - </h1><div class="line"></div><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>The requested resource is not available.</u></p><hr class="line"><h3>Apache Tomcat/8.0.47</h3></body></html>

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Archive [/rest/datagrid/archive]
### Archive [PUT]
API to Archive DataGrid

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the dataGridID - Call API - 'Datagrid/Fetch List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].dataGridID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            [<dataGridID>]

+ Response 200

    + Body

            {
                "success": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }
            
## Unarchive [/rest/datagrid/unarchive]
### Unarchive [PUT]
API to Unarchive DataGrid

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the dataGridID - Call API - 'Datagrid/Fetch List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].dataGridID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            [<dataGridID>]

+ Response 200

    + Body

            {
                "success": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Delete [/rest/datagrid/delete{?dataGridID}]
### Delete [DELETE]
API to delete DataGrid

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the dataGridID - Call API - 'Datagrid/Fetch List'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data.data[&#x3C;index&#x3E;].dataGridID </li>
        </ul>
    </li>
</ul>

+ Parameters 

    + dataGridID : `<dataGridID>` (required, integer) - DataGridID for deletion
        + Default: `<dataGridID>`
        
+ Request

    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
             }

+ Response 200

    + Body

            {
                "success": true
            }

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 404

    + Body

            <!DOCTYPE html><html><head><title>Apache Tomcat/8.0.47 - Error report</title><style type="text/css">H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}.line {height: 1px; background-color: #525D76; border: none;}</style> </head><body><h1>HTTP Status 404 - </h1><div class="line"></div><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>The requested resource is not available.</u></p><hr class="line"><h3>Apache Tomcat/8.0.47</h3></body></html>

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Get Data Grid Ids for bulk opration [/rest/datagrid/getIDList]
### Get Data Grid Ids for bulk opration [POST]
API to get DataGrid IDs List

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "filters" :<for filtering List of DataGrid Ids>
             }

+ Response 200

    + Body

            DataGrids shown successfully

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


# Group How to get the execution status of Testcases run/ Testcase run steps linked to a Testsuite?

## Step 1 : Fetch Testsuites [/rest/testsuites/list]
### Get List [POST]
Fetch 'testsuite id' from response that is to be used to fetch 'execution' list.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|FolderId of Test Suites|Yes|
|scope|Scope of Testsuite, possible values project,release,cycle|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tsFolderID | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsFolderID" : 49581,
                 "scope" : "project",
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }


+ Response 200

    + Body

            {"data":[{"tsID":92087,"projectID":1098,"entityKey":"COD-TS-3","tsFolderID":49581,"name":"Testsuite g11ka0g2qla","linkedTcCount":0,"linkedPlatform":0,"attachmentCount":0,"createdDate":"10-16-2018 01:23:26","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi"},{"tsID":92058,"projectID":1098,"entityKey":"COD-TS-2","tsFolderID":49581,"name":"Testsuite wj3dn24hmha","linkedTcCount":1,"linkedPlatform":0,"attachmentCount":0,"createdDate":"10-15-2018 05:53:24","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi"},{"tsID":74666,"projectID":1098,"entityKey":"COD-TS-1","tsFolderID":49581,"name":"ts1","linkedTcCount":5,"linkedPlatform":1,"platform":"chrome","attachmentCount":0,"releaseNameList":"Default Release","cycleNameList":"Default Cycle","createdDate":"10-01-2018 08:15:32","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi","isCycleArchived":false,"isReleaseArchived":false,"isPlatformArchived":false}],"total":3,"UDFTypeData":{}}

+ Response 400

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
                "success": false,
                "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }


## Step 2 : Fetch Executions [/rest/execution/list/platformHome]
### Get List [POST]
Fetch 'testsuite run id' from response that is to be used to fetch 'testcase run' list.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|Testsuite folder Id|Yes|
|tsID|Testsuite ID|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsFolderID | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "tsFolderID": 49581,
                "tsID": 92091,
                "start": 0,
                "limit": 50,
                "page": 1
            }

+ Response 200

    + Body

            {"data":[{"isAutomatedFlag":false,"releaseEndDate":"01-10-2019 01:00:00","PlatformId":3110,"Platform":"chrome","TestSuiteName":"Testsuite gemal926376","tsRunID":136021,"tsID":92091,"isTestRun":true,"startTime":"10-16-2018 04:40:28","isPlatformArchived":false,"cycleName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","cycleID":7017,"releaseID":3606,"entityKey":"COD-TS-7","TestSuitePath":"/CodeSnippets","totalTCWithExecutionTime":1,"totalExecutionTime":0,"RemainingTime":1,"Total":1,"isCycleArchived":false,"isReleaseArchived":false,"state":1,"status_7415":0,"status_7410":0,"status_7414":0,"status_7411":1,"status_7409":0,"status_7412":0,"Status":"Not Run","statusID":7411,"Defects":1,"createdDate":"10-16-2018 02:35:28","createdByAlias":"Nidhi"}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Step 3 Fetch Testcase Run IDs [/rest/execution/list/tcr]
### Get List [POST]
Fetch 'testcase run id' from response that is to be used to fetch 'testcase step' run list and 
<br> From the response, get value of following attribute 
<br> Testcase Run Name : data[&#x3C;index&#x3E;].name 
<br> Testcase Run Status : data[&#x3C;index&#x3E;].StatusNameText 

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsrID|ID of Testsuite Run whose Testcase Runs are to be obtained|Yes|
|filter|Add filter to get filtered Testcase Runs - Refer JSON Schema|No|
|showTcWithDefects|True to get only those Testcase Runs which have Defects linked with them|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsrID - Call API - 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsrID" : 136021,
                 "filter" : "[{\"value\":[0,1],\"type\":\"list\",\"field\":\"isArchived\"}]",
                 "showTcWithDefects" : false,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }
             
    + Schema
    
            "Filter" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    },
                    "comparison" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"defects":"COD-IS-10:106761,COD-IS-11:115165","TS_name":"Testsuite gemal926376","tsDescription":"Description","cycleName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","tcVersionID":1002867,"attachmentCount":0,"testCaseType":122598,"testCaseTypeAlias":"BVT","tsRunID":136021,"tcRunID":1254205,"hasRows":0,"orderId":1,"owner":3,"ownerAlias":"kunal","tcID":590091,"tctsID":941715,"stepCount":2,"isArchived":false,"logCount":0,"executionTime":1,"domain":0,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","executedVersion":1,"tcDescription":"Description","name":"Testcase Create w4yxojrl37e","entityKey":"COD-TC-32","latestVersion":1,"Component":"Not Available","priority":122587,"priorityAlias":"Blocker","PlatformID":3110,"Platform_Name":"chrome","TC_Status":"Not Run","isAutoExecuted":0,"isPlatformArchived":false,"tsEntityKey":"COD-TS-7","state":1}],"total":1,"lastExecDrop":"","lastExecDropAlias":"","state":"1","Defects":"2"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Step 4 Fetch Testcase Step Run [/rest/execution/list/tcsr]
### Get List [POST]
To get list of test steps run under test run.
<br> From the response, get value of following attribute 
<br> Testcase Step Run Description : data[&#x3C;index&#x3E;].description 
<br> Testcase Run Status : data[&#x3C;index&#x3E;].StatusNameText 

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcrID| Unique identifier of Testcase Run whose Testcase Step Runs are to be fetched|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcrID - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcrID" : 1254205
             }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"tsRunID":136021,"stepNo":1,"tcRunID":1254205,"tcID":590091,"tcStepRunID":11767171,"tcStepID":5649109,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","description":"First Step","isArchived":false,"expectedOutcome":"First Outcome","logCount":0,"attachmentCount":0,"inputData":"First Input","startTime":"2018-10-16T07:49:51","endTime":"2018-10-16T07:49:51","isShared":false,"tcVersionID":1002867,"tcVersion":1,"entityKey":"COD-TC-32","entityKeyId":32},{"projectID":1098,"tsRunID":136021,"stepNo":2,"tcRunID":1254205,"tcID":590091,"tcStepRunID":11767172,"tcStepID":5649108,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","description":"Second Step","isArchived":false,"expectedOutcome":"Second Outcome","logCount":0,"attachmentCount":0,"inputData":"Second Input","startTime":"2018-10-16T07:49:51","endTime":"2018-10-16T07:49:51","isShared":false,"tcVersionID":1002867,"tcVersion":1,"entityKey":"COD-TC-32","entityKeyId":32}],"total":2}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

# Group How to link issues to Testcases run/ Testcase run steps?

## Step 1 : Fetch Testsuites [/rest/testsuites/list]
### Get List [POST]
Fetch 'testsuite id' from response that is to be used to fetch 'execution' list.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|FolderId of Test Suites|Yes|
|scope|Scope of Testsuite, possible values project,release,cycle|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul>
    <li><font size="3">To get the tsFolderID | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsFolderID" : 49581,
                 "scope" : "project",
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }


+ Response 200

    + Body

            {"data":[{"tsID":92087,"projectID":1098,"entityKey":"COD-TS-3","tsFolderID":49581,"name":"Testsuite g11ka0g2qla","linkedTcCount":0,"linkedPlatform":0,"attachmentCount":0,"createdDate":"10-16-2018 01:23:26","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi"},{"tsID":92058,"projectID":1098,"entityKey":"COD-TS-2","tsFolderID":49581,"name":"Testsuite wj3dn24hmha","linkedTcCount":1,"linkedPlatform":0,"attachmentCount":0,"createdDate":"10-15-2018 05:53:24","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi"},{"tsID":74666,"projectID":1098,"entityKey":"COD-TS-1","tsFolderID":49581,"name":"ts1","linkedTcCount":5,"linkedPlatform":1,"platform":"chrome","attachmentCount":0,"releaseNameList":"Default Release","cycleNameList":"Default Cycle","createdDate":"10-01-2018 08:15:32","createdBy":"Nidhi","createdByAlias":"Nidhi","ownerAlias":"Nidhi","isCycleArchived":false,"isReleaseArchived":false,"isPlatformArchived":false}],"total":3,"UDFTypeData":{}}

+ Response 400

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
                "success": false,
                "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
                "success": false,
                "code": "CO.GENERAL_EXCEPTION"
            }


## Step 2 : Fetch Executions [/rest/execution/list/platformHome]
### Get List [POST]
Fetch 'testsuite run id' from response that is to be used to fetch 'testcase run' list.

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsFolderID|Testsuite folder Id|Yes|
|tsID|Testsuite ID|Yes|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsFolderID | Call API 'Testsuite/List of folders'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].id </li>
        </ul>
    </li>
    <li><font size="3">To get the tsID - Call API 'Testsuite/Fetch Testsuites'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

            {
                "tsFolderID": 49581,
                "tsID": 92091,
                "start": 0,
                "limit": 50,
                "page": 1
            }

+ Response 200

    + Body

            {"data":[{"isAutomatedFlag":false,"releaseEndDate":"01-10-2019 01:00:00","PlatformId":3110,"Platform":"chrome","TestSuiteName":"Testsuite gemal926376","tsRunID":136021,"tsID":92091,"isTestRun":true,"startTime":"10-16-2018 04:40:28","isPlatformArchived":false,"cycleName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","cycleID":7017,"releaseID":3606,"entityKey":"COD-TS-7","TestSuitePath":"/CodeSnippets","totalTCWithExecutionTime":1,"totalExecutionTime":0,"RemainingTime":1,"Total":1,"isCycleArchived":false,"isReleaseArchived":false,"state":1,"status_7415":0,"status_7410":0,"status_7414":0,"status_7411":1,"status_7409":0,"status_7412":0,"Status":"Not Run","statusID":7411,"Defects":1,"createdDate":"10-16-2018 02:35:28","createdByAlias":"Nidhi"}],"total":1}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Step 3 Fetch Testcase Run IDs [/rest/execution/list/tcr]
### Get List [POST]
Fetch 'testcase run id' from response that is to be used to fetch 'testcase step' run list and 
<br> From the response, get value of following attribute 
<br> Testcase Run Name : data[&#x3C;index&#x3E;].name 
<br> Testcase Run Status : data[&#x3C;index&#x3E;].StatusNameText 

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tsrID|ID of Testsuite Run whose Testcase Runs are to be obtained|Yes|
|filter|Add filter to get filtered Testcase Runs - Refer JSON Schema|No|
|showTcWithDefects|True to get only those Testcase Runs which have Defects linked with them|No|
|start|Start index of records|No|
|limit|Number of records per page|No|
|page|Page number to be displayed|No|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tsrID - Call API - 'Execution/Fetch Executions'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tsRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tsrID" : 136021,
                 "filter" : "[{\"value\":[0,1],\"type\":\"list\",\"field\":\"isArchived\"}]",
                 "showTcWithDefects" : false,
                 "start" : 0,
                 "limit" : 50,
                 "page" : 1
             }
             
    + Schema
    
            "Filter" : {
                  "type" : "object",
                  "properties" : {
                    "value" : {
                      "type" : "object"
                    },
                    "comparison" : {
                      "type" : "string"
                    },
                    "type" : {
                      "type" : "string"
                    },
                    "field" : {
                      "type" : "string"
                    }
                  }
                }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"defects":"COD-IS-10:106761,COD-IS-11:115165","TS_name":"Testsuite gemal926376","tsDescription":"Description","cycleName":"Default Cycle 3dzd6ydkl0c","releaseName":"Realease 3dzd6ydkl0c","tcVersionID":1002867,"attachmentCount":0,"testCaseType":122598,"testCaseTypeAlias":"BVT","tsRunID":136021,"tcRunID":1254205,"hasRows":0,"orderId":1,"owner":3,"ownerAlias":"kunal","tcID":590091,"tctsID":941715,"stepCount":2,"isArchived":false,"logCount":0,"executionTime":1,"domain":0,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","executedVersion":1,"tcDescription":"Description","name":"Testcase Create w4yxojrl37e","entityKey":"COD-TC-32","latestVersion":1,"Component":"Not Available","priority":122587,"priorityAlias":"Blocker","PlatformID":3110,"Platform_Name":"chrome","TC_Status":"Not Run","isAutoExecuted":0,"isPlatformArchived":false,"tsEntityKey":"COD-TS-7","state":1}],"total":1,"lastExecDrop":"","lastExecDropAlias":"","state":"1","Defects":"2"}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }



## Step 4 : Link Issues to the Testcase Run [/rest/execution/link/issue]
### Link [PUT]
API to link issues to the testcase being executed

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|issueIds|ID of issues to be linked to Testcase Run|Yes|
|tcrId|ID of Testcase Run to link issues with|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the issueIds - Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
        </ul>
    </li>
    <li><font size="3">To get the tcrID - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "issueIds" :["106761"],
                 "tcrId" :1254205
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":[{"tcrId":1254205,"SUCCESS_LINKED_KEY":"COD-IS-10","totalLinkedCount":2},{"issueIds":["106761"],"tcrId":1254205,"COUNT":1}]}


+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Step 5 : Fetch Testcase Step Run [/rest/execution/list/tcsr]
### Get List [POST]
To get list of test steps run under test run.
<br> From the response, get value of following attribute 
<br> Testcase Step Run Description : data[&#x3C;index&#x3E;].description 
<br> Testcase Run Status : data[&#x3C;index&#x3E;].StatusNameText 

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|tcrID| Unique identifier of Testcase Run whose Testcase Step Runs are to be fetched|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the tcrID - Call API - 'Execution/Fetch Testcase Run IDs'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "tcrID" : 1254205
             }

+ Response 200

    + Body

            {"data":[{"projectID":1098,"tsRunID":136021,"stepNo":1,"tcRunID":1254205,"tcID":590091,"tcStepRunID":11767171,"tcStepID":5649109,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","description":"First Step","isArchived":false,"expectedOutcome":"First Outcome","logCount":0,"attachmentCount":0,"inputData":"First Input","startTime":"2018-10-16T07:49:51","endTime":"2018-10-16T07:49:51","isShared":false,"tcVersionID":1002867,"tcVersion":1,"entityKey":"COD-TC-32","entityKeyId":32},{"projectID":1098,"tsRunID":136021,"stepNo":2,"tcRunID":1254205,"tcID":590091,"tcStepRunID":11767172,"tcStepID":5649108,"Status":7411,"StatusName":"co-notrun-ico","StatusNameText":"Not Run","description":"Second Step","isArchived":false,"expectedOutcome":"Second Outcome","logCount":0,"attachmentCount":0,"inputData":"Second Input","startTime":"2018-10-16T07:49:51","endTime":"2018-10-16T07:49:51","isShared":false,"tcVersionID":1002867,"tcVersion":1,"entityKey":"COD-TC-32","entityKeyId":32}],"total":2}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }


## Step 6 : Link Issues to the Testcase Step Run [/rest/execution/link/issueWithTCStepRun]
### Link [PUT]
API to link issues to the testcase step run being executed

**Request Body Insight**

| Parameters|Description|Required|
|-----------|:---------|:-------|
|issueIds|ID of issues to be linked to Testcase Run|Yes|
|tcsrId|Id of Testcase Step to link issues with|Yes|

<br><br> **NOTE:**
<ul> 
    <li><font size="3">To get the issueIds - Call API 'Issue/Fetch issues'
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].DefectId </li>
        </ul>
    </li>
    <li><font size="3">To get the tcsrId | Call API 'Execution/Fetch Testcase Step Run' 
        <ul>
            <li><font size="3">From the response, get value of following attribute -> data[&#x3C;index&#x3E;].tcStepRunID </li>
        </ul>
    </li>
</ul>

+ Request
    + Headers

            content-type: application/json
            apikey: <Generated Open API key>
            scope: default

    + Body

             {
                 "issueIds" :["115303"],
                 "tcsrId" : 11767171
             }

+ Response 200

    + Body

            {"success":true,"code":"CO.LINK_ENTITY_SUCCESS","data":[{"issueIds":["115303"],"tcsrId":11767171,"COUNT":1,"totalLinkedCount":1}]}

+ Response 400

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }

+ Response 401

    + Body

            {
              "success": false,
              "code": "CO.INVALID_API_KEY"
            }

+ Response 500

    + Body

            {
              "success": false,
              "code": "CO.GENERAL_EXCEPTION"
            }